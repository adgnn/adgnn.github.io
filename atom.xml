<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>adgnn&#39;s Blog</title>
  
  <subtitle>...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://adgnn.github.io/"/>
  <updated>2019-10-19T13:53:16.598Z</updated>
  <id>https://adgnn.github.io/</id>
  
  <author>
    <name>adgnn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STM32F207-跑马灯实验</title>
    <link href="https://adgnn.github.io/2019/10/19/%E5%B5%8C%E5%85%A5%E5%BC%8F-%E8%B7%91%E9%A9%AC%E7%81%AF%E5%AE%9E%E9%AA%8C/"/>
    <id>https://adgnn.github.io/2019/10/19/嵌入式-跑马灯实验/</id>
    <published>2019-10-19T13:53:00.000Z</published>
    <updated>2019-10-19T13:53:16.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="跑马灯实验"><a href="#跑马灯实验" class="headerlink" title="跑马灯实验"></a>跑马灯实验</h1><blockquote><p>  STM32F207VC</p><p>  JLINK仿真</p><p>  MDK 5.28a</p></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义数据类型别名，枚举类型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>     __IO    volatile             <span class="comment">/*!&lt; defines 'read / write' permissions              */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>     <span class="keyword">int</span> <span class="keyword">uint16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> __IO <span class="keyword">uint16_t</span> vu16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span>           <span class="keyword">int</span> <span class="keyword">uint32_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123;RESET = <span class="number">0</span>, SET = !RESET&#125; FlagStatus, ITStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义基地址</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_BASE              (AHB1PERIPH_BASE + 0x3800)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AHB1PERIPH_BASE       (PERIPH_BASE + 0x00020000)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PERIPH_BASE           ((uint32_t)0x40000000) <span class="comment">/*!&lt; Peripheral base address in the alias region */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_BASE            (AHB1PERIPH_BASE + 0x1000)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义寄存器地址，GPIO地址</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_CR (*(uint32_t *)(RCC_BASE+0x00))       <span class="comment">/*!&lt; RCC clock control register,                                  Address offset: 0x00 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_CFGR (*(uint32_t *)(RCC_BASE+0x08))       <span class="comment">/*!&lt; RCC clock configuration register,                            Address offset: 0x08 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_CIR (*(uint32_t *)(RCC_BASE+0x0C))       <span class="comment">/*!&lt; RCC clock interrupt register,                                Address offset: 0x0C */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_PLLCFGR (*(uint32_t *)(RCC_BASE+0x04))       <span class="comment">/*!&lt; RCC PLL configuration register,                              Address offset: 0x04 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLASH_R_BASE          (AHB1PERIPH_BASE + 0x3C00) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLASH_ACR       (*((uint32_t*)(FLASH_R_BASE+0x00)))  <span class="comment">/*!&lt; FLASH access control register, Address offset: 0x00 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RCC_AHB1ENR (*(uint32_t *)(RCC_BASE+0x30))       <span class="comment">/*!&lt; RCC AHB1 peripheral clock register,                          Address offset: 0x30 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_MODER (*(uint32_t *)(GPIOE_BASE+0x00))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_OTYPER (*(uint32_t *)(GPIOE_BASE+0x04))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_OSPEEDR (*(uint32_t *)(GPIOE_BASE+0x08))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_PUPDR (*(uint32_t *)(GPIOE_BASE+0x0c))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_BSRRH (*(uint16_t *)(GPIOE_BASE+0x1a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIOE_BSRRL (*(uint16_t *)(GPIOE_BASE+0x18))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明函数</span></span><br><span class="line"><span class="function">vu16 <span class="title">Delay_ms</span><span class="params">(vu16 count)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量定义</span></span><br><span class="line">__IO <span class="keyword">uint32_t</span> StartUpCounter = <span class="number">0</span>, HSEStatus = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//延迟函数</span></span><br><span class="line"><span class="function">vu16 <span class="title">Delay_ms</span><span class="params">(vu16 Count)</span>                                   </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u16 i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(Count--)</span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">12000</span>;i&gt;<span class="number">0</span>;i--);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> Count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//系统初始化</span></span><br><span class="line"><span class="comment">//将HSE的PLL作为系统时钟</span></span><br><span class="line">RCC_CR |= (<span class="keyword">uint32_t</span>)<span class="number">0x00000001</span>;</span><br><span class="line">    <span class="comment">//重置CFGR寄存器</span></span><br><span class="line">RCC_CFGR = <span class="number">0x00000000</span>;</span><br><span class="line"><span class="comment">//重置HSEON，CSSON和PLLON位</span></span><br><span class="line">RCC_CR &amp;= (<span class="keyword">uint32_t</span>)<span class="number">0xFEF6FFFF</span>;</span><br><span class="line">    <span class="comment">//重置PLLCFGR寄存器</span></span><br><span class="line">RCC_PLLCFGR = <span class="number">0x24003010</span>;</span><br><span class="line">    <span class="comment">//重置HSEBYP位</span></span><br><span class="line">RCC_CR &amp;= (<span class="keyword">uint32_t</span>)<span class="number">0xFFFBFFFF</span>;</span><br><span class="line"><span class="comment">//关闭所有中断</span></span><br><span class="line">RCC_CIR = <span class="number">0x00000000</span>;</span><br><span class="line"><span class="comment">//使能HSE</span></span><br><span class="line">RCC_CR |= (<span class="number">1</span>&lt;&lt;<span class="number">16</span>);</span><br><span class="line"><span class="comment">//等待HSE准备就绪，若超时则退出等待</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">HSEStatus = RCC_CR &amp; (<span class="number">1</span>&lt;&lt;<span class="number">17</span>);</span><br><span class="line">StartUpCounter++;</span><br><span class="line">&#125;<span class="keyword">while</span>((HSEStatus==<span class="number">0</span>) &amp;&amp; (StartUpCounter != <span class="number">0x0500</span>));</span><br><span class="line"><span class="comment">//若RCC_CR非全0则设HSE状态1,否则设0</span></span><br><span class="line"><span class="keyword">if</span>((RCC_CR &amp; (<span class="number">1</span>&lt;&lt;<span class="number">17</span>)) != RESET)</span><br><span class="line">&#123;</span><br><span class="line">HSEStatus = (<span class="keyword">uint32_t</span>)<span class="number">0x01</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">HSEStatus = (<span class="keyword">uint32_t</span>)<span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> (HSEStatus == (<span class="keyword">uint32_t</span>)<span class="number">0x01</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">//HCLK = SYSCLK 1</span></span><br><span class="line">RCC_CFGR |= <span class="number">0x00000000</span>;</span><br><span class="line"><span class="comment">//PCLK2 = HCLK 2 </span></span><br><span class="line">RCC_CFGR |= (<span class="number">8</span>&lt;&lt;<span class="number">12</span>);</span><br><span class="line"><span class="comment">//PCLK1 = HCLK 4</span></span><br><span class="line">RCC_CFGR |= (<span class="number">10</span>&lt;&lt;<span class="number">12</span>);</span><br><span class="line"><span class="comment">//使能主PLL</span></span><br><span class="line">RCC_CR |= (<span class="number">1</span>&lt;&lt;<span class="number">24</span>);</span><br><span class="line"><span class="comment">//等待主PLL准备就绪</span></span><br><span class="line"><span class="keyword">while</span>((RCC_CR &amp; (<span class="number">1</span>&lt;&lt;<span class="number">25</span>)) == <span class="number">0</span>)</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="comment">//配置FLASH预读取，Instruction cache，数据缓存以及等待状态</span></span><br><span class="line">FLASH_ACR = (<span class="number">1</span>&lt;&lt;<span class="number">8</span>) | (<span class="number">1</span>&lt;&lt;<span class="number">9</span>) | (<span class="number">1</span>&lt;&lt;<span class="number">10</span>) | <span class="number">3</span>;</span><br><span class="line"><span class="comment">//选择主PLL为系统时钟源</span></span><br><span class="line">RCC_CFGR &amp;= (<span class="keyword">uint32_t</span>)((<span class="keyword">uint32_t</span>)~(<span class="number">3</span>));</span><br><span class="line">RCC_CFGR |= (<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="comment">//等待主PLL被用作系统时钟源</span></span><br><span class="line"><span class="keyword">while</span> ((RCC_CFGR &amp; (<span class="keyword">uint32_t</span>)((<span class="number">1</span>&lt;&lt;<span class="number">3</span>)|(<span class="number">2</span>&lt;&lt;<span class="number">2</span>)) != (<span class="number">1</span>&lt;&lt;<span class="number">3</span>)));</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果HSE启动失败，应用会使用错误的时钟配置，可以在这里写处理用的代码。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//系统初始化完毕。。。</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//LED初始化</span></span><br><span class="line">    RCC_AHB1ENR  |= (<span class="number">1</span>&lt;&lt;<span class="number">4</span>); <span class="comment">//端口时钟使能</span></span><br><span class="line"><span class="comment">//分别对PE14、PE12、PE10、PE8配置</span></span><br><span class="line">GPIOE_MODER |= (<span class="number">1</span>&lt;&lt;<span class="number">28</span>); <span class="comment">//引脚工作模式为输出</span></span><br><span class="line">GPIOE_OTYPER |= (<span class="number">0</span>&lt;&lt;<span class="number">28</span>); <span class="comment">//引脚输出模式为推挽（高低都可输出）</span></span><br><span class="line">GPIOE_PUPDR |= (<span class="number">1</span>&lt;&lt;<span class="number">28</span>);  <span class="comment">//上拉模式</span></span><br><span class="line">GPIOE_OSPEEDR |= (<span class="number">1</span>&lt;&lt;<span class="number">28</span>); <span class="comment">//引脚工作时钟速度</span></span><br><span class="line"></span><br><span class="line">GPIOE_MODER |= (<span class="number">1</span>&lt;&lt;<span class="number">24</span>);  </span><br><span class="line">GPIOE_OTYPER |= (<span class="number">0</span>&lt;&lt;<span class="number">24</span>); </span><br><span class="line">GPIOE_PUPDR |= (<span class="number">1</span>&lt;&lt;<span class="number">24</span>);  </span><br><span class="line">GPIOE_OSPEEDR |= (<span class="number">1</span>&lt;&lt;<span class="number">24</span>);   </span><br><span class="line"></span><br><span class="line">GPIOE_MODER |= (<span class="number">1</span>&lt;&lt;<span class="number">20</span>);   </span><br><span class="line">GPIOE_OTYPER |= (<span class="number">0</span>&lt;&lt;<span class="number">20</span>);  </span><br><span class="line">GPIOE_PUPDR |= (<span class="number">1</span>&lt;&lt;<span class="number">20</span>);   </span><br><span class="line">GPIOE_OSPEEDR |= (<span class="number">1</span>&lt;&lt;<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">GPIOE_MODER |= (<span class="number">1</span>&lt;&lt;<span class="number">16</span>);    </span><br><span class="line">GPIOE_OTYPER |= (<span class="number">0</span>&lt;&lt;<span class="number">16</span>);    </span><br><span class="line">GPIOE_PUPDR |= (<span class="number">1</span>&lt;&lt;<span class="number">16</span>);   </span><br><span class="line">GPIOE_OSPEEDR |= (<span class="number">1</span>&lt;&lt;<span class="number">16</span>);   </span><br><span class="line"><span class="comment">/********************************************************************************/</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">       </span><br><span class="line">GPIOE_BSRRH = (<span class="number">1</span>&lt;&lt;<span class="number">14</span>); <span class="comment">//点亮</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);  </span><br><span class="line">GPIOE_BSRRL =  (<span class="number">1</span>&lt;&lt;<span class="number">14</span>); <span class="comment">//熄灭</span></span><br><span class="line"></span><br><span class="line">GPIOE_BSRRH = (<span class="number">1</span>&lt;&lt;<span class="number">12</span>);</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">GPIOE_BSRRL =  (<span class="number">1</span>&lt;&lt;<span class="number">12</span>); </span><br><span class="line"></span><br><span class="line">GPIOE_BSRRH = (<span class="number">1</span>&lt;&lt;<span class="number">10</span>);</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">GPIOE_BSRRL =  (<span class="number">1</span>&lt;&lt;<span class="number">10</span>); </span><br><span class="line"></span><br><span class="line">GPIOE_BSRRH = (<span class="number">1</span>&lt;&lt;<span class="number">8</span>); </span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">GPIOE_BSRRL =  (<span class="number">1</span>&lt;&lt;<span class="number">8</span>);  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//代码最后留出一个空行，避免警告</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;跑马灯实验&quot;&gt;&lt;a href=&quot;#跑马灯实验&quot; class=&quot;headerlink&quot; title=&quot;跑马灯实验&quot;&gt;&lt;/a&gt;跑马灯实验&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;  STM32F207VC&lt;/p&gt;
&lt;p&gt;  JLINK仿真&lt;/p&gt;
&lt;p&gt;  MDK 5
      
    
    </summary>
    
    
      <category term="嵌入式" scheme="https://adgnn.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
      <category term="STM32" scheme="https://adgnn.github.io/tags/STM32/"/>
    
      <category term="cortex-m3" scheme="https://adgnn.github.io/tags/cortex-m3/"/>
    
  </entry>
  
  <entry>
    <title>Linux内核编译及添加系统调用</title>
    <link href="https://adgnn.github.io/2019/10/04/2019-10-4-%E5%AE%9E%E9%AA%8C%E4%B8%80%EF%BC%9ALinux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91%E5%8F%8A%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
    <id>https://adgnn.github.io/2019/10/04/2019-10-4-实验一：Linux内核编译及添加系统调用/</id>
    <published>2019-10-04T12:00:00.000Z</published>
    <updated>2019-10-05T06:32:58.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验一：Linux内核编译及添加系统调用"><a href="#实验一：Linux内核编译及添加系统调用" class="headerlink" title="实验一：Linux内核编译及添加系统调用"></a>实验一：Linux内核编译及添加系统调用</h1><a id="more"></a><h2 id="1-实验环境"><a href="#1-实验环境" class="headerlink" title="1. 实验环境"></a>1. 实验环境</h2><blockquote><p>虚拟机：VMware</p><p>Linux版本：Ubuntu 19.04 64位</p><p>下载的Liinux内核版本：4.19.76</p></blockquote><p>** 由于第一次创建的虚拟机容量太小（40G）导致磁盘空间占满后无法进入Ubuntu的登录界面，只好删除虚拟机重新安装了ubuntu，分配了75G的磁盘空间。</p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><ul><li><p>下载linux内核</p><blockquote><p><a href="https://www.kernel.org/" target="_blank" rel="noopener">https://www.kernel.org/</a></p></blockquote></li><li><p>提升权限</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su</span><br><span class="line"><span class="string">"Input password of current user"</span></span><br></pre></td></tr></table></figure></li><li><p>移动下载的文件到<code>/usr/src/</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv linux-4.19.76.tar.xz /usr/src/</span><br></pre></td></tr></table></figure></li><li><p>解压并进入文件夹</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xvf linux-4.19.76.tar.xz</span><br><span class="line">$ <span class="built_in">cd</span> linux-4.19.76</span><br></pre></td></tr></table></figure></li><li><p>安装相关依赖包</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install libncurses5-dev libssl-dev</span><br><span class="line">$ apt-get install build-essential openssl</span><br><span class="line">$ apt-get install zlibc minizip</span><br><span class="line">$ apt-get install libidn11-dev libidn11</span><br><span class="line">$ apt-get install flex bison</span><br></pre></td></tr></table></figure></li><li><p><strong>修改系统调用（该步骤放在“3 修改系统调用”讲述）</strong></p></li><li><p>创建批处理（因为编译容易出错需要重新开始，所以创建一个批处理更方便）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim auto.sh</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!bin/sh</span></span><br><span class="line">make mrproper</span><br><span class="line">make menuconfig</span><br><span class="line">make -j6 2&gt;error.log</span><br><span class="line">make modules_install</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"All Done."</span></span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh auto.sh</span><br></pre></td></tr></table></figure><p>  ** make menuconfig中的“general settings”选择了“编译其它Drivers”</p><p>  **”kernel hacker”中的大小限制改为4096, 以避免产生超过大小的warning</p><p>  ** make -6 2&gt;error.log 将错误输出到error.log中，在编译完成后可以查看和排除错误。</p></li><li><p>配置grub引导程序</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/default/grub</span><br><span class="line"></span><br><span class="line">将GRUB_TIMEOUT=0改成GRUB_TIMEOUT=10</span><br><span class="line">将GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"hidden"</span>改成GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"text"</span></span><br><span class="line"></span><br><span class="line">$ update-grab</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-修改系统调用"><a href="#3-修改系统调用" class="headerlink" title="3 修改系统调用"></a>3 修改系统调用</h2><ul><li><p>修改系统调用表</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vim ./arch/x86/entry/syscalls/syscall_64.tbl</span><br><span class="line"></span><br><span class="line">在335处添加一行：</span><br><span class="line">33564mysetnicesys_mysetnice</span><br></pre></td></tr></table></figure><p>  ** 此处我一开始把自己的系统调用添加到文件最后，548处去了，导致之后编译显示找不到sys_mysetnice。</p></li><li><p>声明系统调用服务例程</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim ./include/linux/syscalls.h</span><br><span class="line"></span><br><span class="line"><span class="function">asmlinkage <span class="keyword">long</span> <span class="title">sys_mysetnice</span><span class="params">(<span class="keyword">pid_t</span> pid, <span class="keyword">int</span> flag, <span class="keyword">int</span> nicevalue, <span class="keyword">void</span> __user* prio, <span class="keyword">void</span> __user* nice)</span></span>;</span><br></pre></td></tr></table></figure><p>  ** 这里似乎也要在正确的文件位置内插入，在文件末尾插入会出现问题。</p></li><li><p>实现mysetnice系统调用服务例程</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ vim ./kernel/sys.c</span><br><span class="line"></span><br><span class="line">SYSCALL_DEFINE5(sys_mysetnice, <span class="keyword">pid_t</span>, pid, <span class="keyword">int</span>, flag, <span class="keyword">int</span>, nicevalue, <span class="keyword">void</span> __user *, prio, <span class="keyword">void</span> __user *, nice)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">int</span> cur_prio, cur_nice;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">pid</span> *<span class="title">ppid</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">pcb</span>;</span></span><br><span class="line"></span><br><span class="line">        ppid = find_get_pid(pid);</span><br><span class="line"></span><br><span class="line">        pcb = pid_task(ppid, PIDTYPE_PID);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                set_user_nice(pcb, nicevalue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> EFAULT;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cur_prio = task_prio(pcb);</span><br><span class="line">        cur_nice = task_nice(pcb);</span><br><span class="line"></span><br><span class="line">        copy_to_user(prio, &amp;cur_prio, <span class="keyword">sizeof</span>(cur_prio));</span><br><span class="line">        copy_to_user(nice, &amp;cur_nice, <span class="keyword">sizeof</span>(cur_nice));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写小程序测试mysetnice系统调用</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFAULT 14</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> pid,flag,nicevalue;</span><br><span class="line">        <span class="keyword">int</span> prev_prio, prev_nice, cur_prio, cur_nice;</span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input pid flag nicevalue:\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;pid, &amp;flag, &amp;nicevalue);</span><br><span class="line"></span><br><span class="line">        result = syscall(<span class="number">335</span> , pid, <span class="number">0</span>, nicevalue, &amp;prev_prio, &amp;prev_nice);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(result == EFAULT)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"ERROR!"</span>);</span><br><span class="line">                <span class="keyword">return</span> EFAULT;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                syscall(<span class="number">335</span>, pid, <span class="number">1</span>, nicevalue, &amp;cur_prio, &amp;cur_nice);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"原来的prio是%d, 原来的nice是%d\n"</span>, prev_prio,prev_nice);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"现在的prio是%d, 现在的nice是%d\n"</span>,cur_prio, cur_nice);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag ==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"现在的prio是%d, 现在的nice是%d\n"</span>,prev_prio,prev_nice);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-小程序运行结果"><a href="#4-小程序运行结果" class="headerlink" title="4 小程序运行结果"></a>4 小程序运行结果</h2><p><img src="file:///C:\Users\Hasee\Documents\Tencent Files\1072112128\Image\C2C\Image3\X]UO_HI6I41Y$$(L" alt="img">}O6$RY.jpg)</p><h2 id="5-问题总结"><a href="#5-问题总结" class="headerlink" title="5 问题总结"></a>5 问题总结</h2><p>本次实验过程中有很多问题导致了我需要不断重新编译内核。</p><ol><li>虚拟机分配给ubuntu的硬盘太小，至少分配70G保证使用。</li><li>刚开始使用了5.3.2版本的内核，但在编译时出现了错误，之后换用4.19.73内核。</li><li>编辑<code>sys.c</code>，<code>syscalls.h</code>，<code>syscalls_64.tbl</code>时需要修改到正确的地方，否则编译会失败。</li><li>由于ubuntu系统的原因，一开始按书上配置的grub没有反应，需要按照网络上专用的方法重新配置。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实验一：Linux内核编译及添加系统调用&quot;&gt;&lt;a href=&quot;#实验一：Linux内核编译及添加系统调用&quot; class=&quot;headerlink&quot; title=&quot;实验一：Linux内核编译及添加系统调用&quot;&gt;&lt;/a&gt;实验一：Linux内核编译及添加系统调用&lt;/h1&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="https://adgnn.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://adgnn.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>创新实践总结</title>
    <link href="https://adgnn.github.io/2019/06/25/2019-6-25-%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    <id>https://adgnn.github.io/2019/06/25/2019-6-25-创新实践总结/</id>
    <published>2019-06-25T14:59:00.000Z</published>
    <updated>2019-06-25T14:59:51.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>本学期创新实践课，小组的课题是聚类。本期末总结主要以学习笔记的形式进行表述。</p><p>“聚类”是无监督学习中研究最多的一种无监督学习方法。由于现实世界中未标记的数据样本往往比经过人为标记后的样本要多，因此无监督学习在机器学习中占有很重要的地位。聚类不存在客观标准，我们要以某个角度去找到给出的无标记数据样本之间的相似性，并让机器学习到它并得到分类结果。由于聚类不存在客观标准，所以“聚类”是机器学习中新算法出现最多最快的领域，常用的聚类方法有很多，如K-Means、基于密度聚类算法、谱聚类算法等。在这些算法里，有一些较为经典的，如易于实现的K-Means算法。</p><a id="more"></a><h2 id="2-K-Means算法"><a href="#2-K-Means算法" class="headerlink" title="2. K-Means算法"></a>2. K-Means算法</h2><h3 id="K-Means算法的思想"><a href="#K-Means算法的思想" class="headerlink" title="K-Means算法的思想"></a>K-Means算法的思想</h3><p>K-Means算法的思想较为简单，用自然语言描述：</p><blockquote><p>选择K个点作为初始质心</p><p>repeat</p><p>​    将每个点指派到最近的质心，形成k个簇</p><p>​    重新计算每个簇的质心</p><p>until 簇不发生变化或到达最大迭代次数</p></blockquote><p>其中计算簇质心是根据距离度量得来的。</p><p>考虑欧式距离$dist(x,y)=\sqrt{\sum\limits_{i=1}^n(x_i-y_i)^2}$，使用误差平方和(Sum of the Squared Error,SSE)作为聚类的目标函数，即优化$\min\sum\limits_{i=1}^K\sum\limits_{x\in C_i}dist(c_i,x)^2$</p><h3 id="K-Means算法的缺陷"><a href="#K-Means算法的缺陷" class="headerlink" title="K-Means算法的缺陷"></a>K-Means算法的缺陷</h3><p>K-Means算法虽然思想简单，实现方便，但它有许多缺陷。如</p><ol><li>K值需要用户给定。很多情况下K值的估计是很困难的。但对于目标K值较小的场景，可以通过迭代K值来找出代价函数最小的那个K值作为聚类的K值。</li><li>对于初始选取的聚类中心点是敏感的。若采用随机方式选取初始点，不同的初始点得到的聚类结果可能完全不同。</li><li>K均值算法不适合所有数据类型。通常k均值类算法仅在凸形簇结果上效果较好。</li></ol><p>对于上述缺陷，K-Means方法也有许多变体用以解决以上的问题，如二分K-Means算法可解决算法对初始簇心敏感的问题。</p><p>我认为K-Means算法思想简单，易于实现，非常适合聚类初学者尝试实现。</p><h2 id="3-谱聚类——Spectral-Clustering"><a href="#3-谱聚类——Spectral-Clustering" class="headerlink" title="3. 谱聚类——Spectral Clustering"></a>3. 谱聚类——Spectral Clustering</h2><p>K-means算法计算两个数据点之间的距离，距离近的被分配到同一个类中，但对于非块状和非凸数据的聚类精度不高。</p><p>如用K-Means对三同心圆环状的图学习时，由于圆环两边的点距离较远，所以不能将圆环两边的点学习到一个类中。</p><p><img src="https://littlefish33.cn/image/temp/104.png" alt></p><p>谱聚类对于此类<code>非块状和非凸数据</code>的聚类效果便好很多。</p><p><img src="https://s2.ax1x.com/2019/06/25/ZZehlj.png" alt></p><h3 id="谱聚类的算法思想"><a href="#谱聚类的算法思想" class="headerlink" title="谱聚类的算法思想"></a>谱聚类的算法思想</h3><blockquote><p>谱聚类是一种基于图论的聚类方法。</p><p>将一个样本看作一个顶点，样本间的相似度看作带权的边，</p><p>从而将聚类问题转化为图分割问题。</p><p>找到一种图分割的方法使连接不同组的边的权重尽可能低，</p><p>使组内的边权重尽可能高。</p><p>最后根据相似度将这些顶点连起来，<strong>进行分割</strong>，连在一起的点便是分类后属于同一类的样本。</p></blockquote><p>根据谱聚类算法进行图分割时使用的方法（最小割Minimum Cut、 Ratio Cut、Normalized Cut等），可以分为不同的谱聚类（unnormalized SC和normalized SC）。</p><h3 id="Unnormalized-Spectral-Clustering"><a href="#Unnormalized-Spectral-Clustering" class="headerlink" title="Unnormalized Spectral Clustering"></a>Unnormalized Spectral Clustering</h3><blockquote><p>输入：相似矩阵S、聚类类别数k</p><ol><li><p>根据矩阵S建立权重矩阵W（Weight Matrix)、三角矩阵D(Degree Matrix)</p></li><li><p>建立Laplacian矩阵L</p></li><li><p>求矩阵L的（除0外）前k个小特征值及其对应的特征向量</p></li><li><p>以这k组特征向量组成新的矩阵，其行数为样本数N，列数为k（降维，从N维降为k维）</p></li><li><p>使用K-Means等其它聚类算法用得到的新矩阵聚类，得到聚类结果。</p></li></ol></blockquote><h3 id="Normalized-Spectral-Clustering"><a href="#Normalized-Spectral-Clustering" class="headerlink" title="Normalized Spectral Clustering"></a>Normalized Spectral Clustering</h3><blockquote><p>输入：相似矩阵S、聚类类别数k</p><ol><li><p>根据矩阵S建立权重矩阵W、三角矩阵D</p></li><li><p>建立Laplacian矩阵L</p></li><li><p>$L’=D^{-\frac{1}{2}}LD^{-\frac{1}{2}}$</p></li><li><p>求矩阵<code>L&#39;</code>的（除0外）前k个小特征值及其对应的特征向量</p></li><li><p>利用$q’=D^{\frac{1}{2}}q$求对应的k个q</p></li><li><p>以这k组特征向量组成新的矩阵，行数为样本数N，列数为k</p></li><li><p>使用K-Means算法等其它聚类算法用得到的新矩阵聚类，得到聚类结果。</p></li></ol></blockquote><p>unnormalized SC和normalized SC区别主要在于，构造Laplacianj矩阵时，是否规范化。</p><h3 id="Spectral-Clustering的性能"><a href="#Spectral-Clustering的性能" class="headerlink" title="Spectral Clustering的性能"></a>Spectral Clustering的性能</h3><p>SC的性能比K-Means要好，SC将原数据转化为了“更好的表示形式”：特征向量，这种表示形式是使用Laplacian Eigenmap降维后的结果，并在这种表示形式的基础上使用K-Means聚类，以得到更好的聚类结果。</p><p>SC的计算复杂度比K-Means小，特别是在高维数据的处理上表现明显。如文本数据通常是纬度高的稀疏矩阵，对稀疏矩阵求特征值和特征向量有高效的方法，得到的结果是一些k维向量（聚类类别数，通常不会很高），在这些低维数据上运用K-Means，运算量很小。</p><h2 id="4-Clustering-with-Adaptive-Neighbors"><a href="#4-Clustering-with-Adaptive-Neighbors" class="headerlink" title="4. Clustering with Adaptive Neighbors"></a>4. Clustering with Adaptive Neighbors</h2><p>《Clustering and Projected Clustering with Adaptive Neighbors》中，提出了两种新的聚类算法——Clustering with Adaptive Neighbors（CAN）、Projected Clustering with Adaptive Neighbors（PCAN）。</p><p>Spectral Clustering依赖输入数据的相似性矩阵来对数据分组，因此聚类结果高度依赖数据相似性学习。实际上谱聚类将相似性测量和数据聚类分为两个步骤，谱聚类算法本身给出的是一个优化后的原数据表示方法并作为其它聚类算法的输入。但相似性数据可能并不是最适合聚类的数据，还有可能导致较差的结果。</p><p>Clustering with Adaptive Neighbors（CAN）是一种新的聚类模型，它可以同时学习相似性矩阵S和聚类结果。其中，相似矩阵S通过为基于距离（范数），为每个数据点分配一个适应的且优化的邻居（adaptive and optimal neighbors）得到。同时，通过对相似矩阵的Laplacian矩阵施加 一个秩约束（rank constraint），使得结果的相似矩阵中互连的元素块数正好等于聚类数k。</p><h2 id="5-Unsupervised-Learning-via-L1-Norm-Graph"><a href="#5-Unsupervised-Learning-via-L1-Norm-Graph" class="headerlink" title="5. Unsupervised Learning via L1-Norm Graph"></a>5. Unsupervised Learning via L1-Norm Graph</h2><p>《Unsupervised and Semi-Supervised Learning via L1-Norm Graph》</p><p>使用L1-norm图模型进行无监督学习，而不是传统上使用的L2-norm。</p><p>这种学的图学习模型最小化L1-norm of spectral embedding。</p><p>使用L1-norm得出的结果具有稀疏性，因而得到的聚类结果具有更清晰的结构。</p><p>相比于传统的基于图的聚类方法，传统的聚类方法由于解没有清晰的聚类结构，所以这些方法的解不能直接用来表示聚类结果，而需要使用进一步的K-Means等方法得到聚类结果，但K-Means本身具有的缺陷会导致聚类结果的偏差。</p><h2 id="6-Adaptive-neighboring-graph-for-L1-norm-based-graph-clustering"><a href="#6-Adaptive-neighboring-graph-for-L1-norm-based-graph-clustering" class="headerlink" title="6. Adaptive neighboring graph for L1-norm based graph clustering"></a>6. Adaptive neighboring graph for L1-norm based graph clustering</h2><h3 id="总框架"><a href="#总框架" class="headerlink" title="总框架"></a>总框架</h3><p>优化：（1）</p><p>$\min\limits_{\bf{S},\bf{F}}\sum\limits_{i=1}^n\sum\limits_{j=1}^n(||\bf{x}_i-\bf{x}_j||<em>2^2+\gamma s</em>{ij}^2)+2\lambda \sum\limits_{i=1}^n\sum\limits_{j=1}^n s_{ij}||\bf{f}^i-\bf{f}^j||_2$</p><p>$s.t.\,s_{ij}\ge 0,\sum\limits_{j=1}^ns_{ij}=1,\bf{F}\in \mathbb{R}^{n\times c},\bf{F}^T\bf{DF}=\bf{I_c}.$</p><h4 id="固定F，更新S"><a href="#固定F，更新S" class="headerlink" title="固定F，更新S"></a>固定F，更新S</h4><p>（1）变为（2）</p><p>$\min\limits_{s_i}\sum\limits_{i=1}^n\sum\limits_{j=1}^n(||\bf{x}_i-\bf{x}_j||<em>2^2+\gamma s</em>{ij}^2+\lambda s_{ij}||\bf{f}^i-\bf{f}^j||_2)$</p><p>$s.t.\,s_i\ge 0,s_i^T\bf{1}=1.$</p><p>定义$d_{ij}^x=||\bf{x}_i-\bf{x}_j||_2^2$</p><p>$d_{ij}^f=||\bf{f}^i-\bf{f}^j||_2$</p><p>$\bf{d}<em>i\in \mathbb{R}^{n\times 1}$as a vector with the j-th element as $d</em>{ij}=d{ij}^x+\lambda d_{ij}^f$</p><p>（2）变为（3）</p><p>$\min\limits_{s_i\ge 0,s_i^T\bf{1}=1}||\bf{s}_i+\frac{1}{2\lambda}\bf{d}_i||_2^2$</p><p><mark>使用KDD 2014的2.4节方法优化（3）</mark></p><h4 id="固定S，更新F"><a href="#固定S，更新F" class="headerlink" title="固定S，更新F"></a>固定S，更新F</h4><p>F的Lagrangian function：（4）</p><p>$\zeta(\bf{F})=\sum\limits_{i,j=1}^ns_{ij}||\bf{f}^i-\bf{f}^j||_2-Tr(\bf{\lambda}(\bf{F}^T\bf{DF}-\bf{I}_c))$</p><p>定义一wrapped Laplacian矩阵$\tilde{L}=\tilde{D}-\tilde{S}$ ，其中$\tilde{S}$是一个重计算权重矩阵，</p><p>定义为（5）$\tilde{s_{ij}}=\frac{s_ij}{2||\bf{f}^i-\bf{f}^j||_2}$</p><p>$\bf{\tilde{D}}$是一个对角矩阵，其中第i个对角元素是$\sum_{j=1}^n\tilde{s_{ij}}$</p><p>对（4）进行求偏导，设结果为0,得（6）</p><p>$\frac{\partial\zeta(\bf{F})}{\partial\bf{F}}=\bf{\tilde{L}F}-\bf{DF\Lambda}=\bf{0}$</p><p>$\bf{F}$的解是$\bf{D}^{-1}\bf{\tilde{L}}$的特征向量。后者取决于前者，因此，需要循环更新$\bf{F}$和$\bf{\tilde{L}}$</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><h4 id="生成测试数据集"><a href="#生成测试数据集" class="headerlink" title="生成测试数据集"></a>生成测试数据集</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% -------------- 测试集1 ----------------------</span></span><br><span class="line">newdata=<span class="number">1</span>;</span><br><span class="line">datatype=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> newdata == <span class="number">1</span></span><br><span class="line">    clearvars -except datatype;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> datatype == <span class="number">1</span></span><br><span class="line">        num0 = <span class="number">100</span>; X = twomoon_gen(num0); c = <span class="number">2</span>; y = [<span class="built_in">ones</span>(num0,<span class="number">1</span>);<span class="number">2</span>*<span class="built_in">ones</span>(num0,<span class="number">1</span>)];</span><br><span class="line">    <span class="keyword">elseif</span> datatype == <span class="number">2</span></span><br><span class="line">        num0 = <span class="number">500</span>; [X, y] = three_ring_gen(num0,<span class="number">0.05</span>); c = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        c=<span class="number">196</span>; [X, y] = spheres_gen(c, c*<span class="number">10</span>, <span class="number">0.03</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% ----------测试集2------------</span></span><br><span class="line"><span class="comment">% X=twospirals();</span></span><br><span class="line"><span class="comment">% X=clusterincluster();</span></span><br><span class="line"><span class="comment">% X=corners();</span></span><br><span class="line"><span class="comment">% X=halfkernel();</span></span><br><span class="line"><span class="comment">% X=crescentfullmoon();</span></span><br><span class="line"><span class="comment">% X=outlier();</span></span><br></pre></td></tr></table></figure><h4 id="test（部分）"><a href="#test（部分）" class="headerlink" title="test（部分）"></a>test（部分）</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 生成测试集（略）</span></span><br><span class="line"><span class="comment">% 初始化参数</span></span><br><span class="line">sigma = <span class="number">0.1</span>;</span><br><span class="line"><span class="comment">% c = 2;</span></span><br><span class="line"><span class="comment">% 初始化F（谱聚类）</span></span><br><span class="line">F=initial_F(X,sigma,c);</span><br><span class="line"><span class="comment">% 迭代交替更新S、F</span></span><br><span class="line">NITER=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> iter=<span class="number">1</span>:NITER</span><br><span class="line">S=update_S(X', F, c);</span><br><span class="line">F=update_F(S,c);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">C=kmeans(F,c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">'name'</span>,<span class="string">'Learned graph'</span>); </span><br><span class="line">imshow(S,[]); colormap jet; colorbar;</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">'name'</span>,<span class="string">'Clustering results'</span>);</span><br><span class="line">cm=colormap(jet(c));</span><br><span class="line"><span class="built_in">plot</span>(X(:,<span class="number">1</span>),X(:,<span class="number">2</span>),<span class="string">'.k'</span>); <span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line">r1=randperm(c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:c</span><br><span class="line"><span class="built_in">plot</span>(X(C==r1(<span class="built_in">i</span>),<span class="number">1</span>),X(C==r1(<span class="built_in">i</span>),<span class="number">2</span>),<span class="string">'.'</span>,<span class="string">'color'</span>,cm(<span class="built_in">i</span>,:)); <span class="built_in">hold</span> on;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% result_new=ClusteringMeasure(y, C);</span></span><br><span class="line"><span class="comment">% 与CAN结果比较（略）</span></span><br></pre></td></tr></table></figure><h4 id="初始化F（谱聚类）"><a href="#初始化F（谱聚类）" class="headerlink" title="初始化F（谱聚类）"></a>初始化F（谱聚类）</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">F</span> = <span class="title">initial_F</span><span class="params">(X, sigma, c)</span></span></span><br><span class="line"></span><br><span class="line">dataset = X;</span><br><span class="line">dataset = dataset/<span class="built_in">max</span>(<span class="built_in">max</span>(<span class="built_in">abs</span>(dataset)));</span><br><span class="line"></span><br><span class="line">Z = pdist(dataset);</span><br><span class="line"></span><br><span class="line">W = squareform(Z);</span><br><span class="line">m = <span class="built_in">size</span>(W,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">W = W.*W;</span><br><span class="line">W = -W/(<span class="number">2</span>*sigma*sigma); </span><br><span class="line">S = full(spfun(@<span class="built_in">exp</span>,W));</span><br><span class="line"></span><br><span class="line">D = full(sparse(<span class="number">1</span>:m, <span class="number">1</span>:m, sum(S))); </span><br><span class="line"></span><br><span class="line">obj = <span class="built_in">zeros</span>(<span class="number">20</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">[v d] = eig(S, D);</span><br><span class="line">d = <span class="built_in">diag</span>(d);</span><br><span class="line">[d idx] = <span class="built_in">sort</span>(d, <span class="string">'descend'</span>);</span><br><span class="line">F = v(:, idx(<span class="number">1</span>:c));</span><br><span class="line">F = F*<span class="built_in">diag</span>(<span class="built_in">sqrt</span>(<span class="number">1.</span>/<span class="built_in">diag</span>(F'*D*F)));</span><br><span class="line"></span><br><span class="line">W = <span class="built_in">sqrt</span>(<span class="built_in">abs</span>(L2_distance_subfun(F',F'))+<span class="built_in">eps</span>);</span><br><span class="line"><span class="keyword">for</span> iter = <span class="number">1</span>:<span class="number">20</span>  </span><br><span class="line">S1 = S./W;</span><br><span class="line">S1 = (S1+S1')/<span class="number">2</span>; </span><br><span class="line">L1 = <span class="built_in">diag</span>(sum(S1)) - S1;</span><br><span class="line">[v d] = eig(L1, D);</span><br><span class="line">d = <span class="built_in">diag</span>(d);</span><br><span class="line">[d idx] = <span class="built_in">sort</span>(d);</span><br><span class="line">F = v(:,idx(<span class="number">1</span>:c));</span><br><span class="line">F = F*<span class="built_in">diag</span>(<span class="built_in">sqrt</span>(<span class="number">1.</span>/<span class="built_in">diag</span>(F'*D*F)));</span><br><span class="line">W = <span class="built_in">sqrt</span>(<span class="built_in">abs</span>(L2_distance_subfun(F',F'))+<span class="built_in">eps</span>);</span><br><span class="line"></span><br><span class="line">obj(iter) = sum(sum((S.*W)));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="固定F，更新S-1"><a href="#固定F，更新S-1" class="headerlink" title="固定F，更新S"></a>固定F，更新S</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">S</span> = <span class="title">update_S</span><span class="params">(X, F, c, k, r, islocal)</span></span></span><br><span class="line"></span><br><span class="line">NITER=<span class="number">30</span>;</span><br><span class="line">num=<span class="built_in">size</span>(X,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">6</span></span><br><span class="line">islocal = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">5</span></span><br><span class="line">r = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">4</span></span><br><span class="line">k = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">distX=L2_distance_1(X,X);</span><br><span class="line"><span class="comment">%distX=sqrt(distX);</span></span><br><span class="line">[distX1, idx]=<span class="built_in">sort</span>(distX,<span class="number">2</span>);</span><br><span class="line">S=<span class="built_in">zeros</span>(num);</span><br><span class="line">rr=<span class="built_in">zeros</span>(num,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:num</span><br><span class="line">    di = distX1(<span class="built_in">i</span>,<span class="number">2</span>:k+<span class="number">2</span>);</span><br><span class="line">    rr(<span class="built_in">i</span>) = <span class="number">0.5</span>*(k*di(k+<span class="number">1</span>)-sum(di(<span class="number">1</span>:k)));</span><br><span class="line">    id = idx(<span class="built_in">i</span>,<span class="number">2</span>:k+<span class="number">2</span>);</span><br><span class="line">    S(<span class="built_in">i</span>,id) = (di(k+<span class="number">1</span>)-di)/(k*di(k+<span class="number">1</span>)-sum(di(<span class="number">1</span>:k))+<span class="built_in">eps</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r&lt;=<span class="number">0</span></span><br><span class="line">r=<span class="built_in">mean</span>(rr);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">lambda=<span class="built_in">mean</span>(rr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> iter=<span class="number">1</span>:NITER</span><br><span class="line">distf=L2_distance_1(F', F');</span><br><span class="line">distf=<span class="built_in">sqrt</span>(distf);  </span><br><span class="line">S=<span class="built_in">zeros</span>(num);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:num</span><br><span class="line"><span class="keyword">if</span> islocal==<span class="number">1</span></span><br><span class="line">idxa0=idx(<span class="built_in">i</span>,<span class="number">2</span>:k+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">idxa0=<span class="number">1</span>:num;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">dfi=distf(<span class="built_in">i</span>,idxa0);</span><br><span class="line">dxi=distX(<span class="built_in">i</span>,idxa0);</span><br><span class="line">ad=-(dxi+lambda*dfi)/(<span class="number">2</span>*r);</span><br><span class="line">S(<span class="built_in">i</span>,idxa0)=EProjSimplex_new(ad);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">S=(S+S')/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="固定S，更新F-1"><a href="#固定S，更新F-1" class="headerlink" title="固定S，更新F"></a>固定S，更新F</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">F</span>= <span class="title">update_F</span><span class="params">(S, c)</span></span></span><br><span class="line"></span><br><span class="line">m = <span class="built_in">size</span>(S,<span class="number">1</span>);</span><br><span class="line">D = full(sparse(<span class="number">1</span>:m, <span class="number">1</span>:m, sum(S)));</span><br><span class="line">obj=<span class="built_in">zeros</span>(<span class="number">20</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">[v,d]=eig(S,D);</span><br><span class="line">d=<span class="built_in">diag</span>(d);</span><br><span class="line">[d,idx]=<span class="built_in">sort</span>(d,<span class="string">'descend'</span>);</span><br><span class="line">F=v(:,idx(<span class="number">1</span>:c));</span><br><span class="line">F=F*<span class="built_in">diag</span>(<span class="built_in">sqrt</span>(<span class="number">1.</span>/<span class="built_in">diag</span>(F'*D*F)));</span><br><span class="line"></span><br><span class="line">W=<span class="built_in">sqrt</span>(<span class="built_in">abs</span>(L2_distance_subfun(F',F'))+<span class="built_in">eps</span>);</span><br><span class="line"><span class="keyword">for</span> iter= <span class="number">1</span>:<span class="number">20</span></span><br><span class="line">S1=S./W;</span><br><span class="line">S1=(S1+S1')/<span class="number">2</span>;</span><br><span class="line">L1=<span class="built_in">diag</span>(sum(S1))-S1;</span><br><span class="line">[v,d]=eig(L1,D);</span><br><span class="line">d=<span class="built_in">diag</span>(d);</span><br><span class="line">[d,idx]=<span class="built_in">sort</span>(d);</span><br><span class="line">F=v(:,idx(<span class="number">1</span>:c));</span><br><span class="line">F=F*<span class="built_in">diag</span>(<span class="built_in">sqrt</span>(<span class="number">1.</span>/<span class="built_in">diag</span>(F'*D*F)));</span><br><span class="line">W=<span class="built_in">sqrt</span>(<span class="built_in">abs</span>(L2_distance_subfun(F',F'))+<span class="built_in">eps</span>);</span><br><span class="line"></span><br><span class="line">obj(iter)=sum(sum((S.*W)));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><ol><li><p>双月</p><p><img src="https://s2.ax1x.com/2019/06/25/ZZB7Hx.png" alt></p></li><li><p>三环</p><p><img src="https://s2.ax1x.com/2019/06/25/ZZBxvd.png" alt></p><p><img src="https://s2.ax1x.com/2019/06/25/ZZDE8g.png" alt></p></li><li><p>196簇</p><p><img src="https://s2.ax1x.com/2019/06/25/ZZDHMj.png" alt></p></li><li><p><img src="https://s2.ax1x.com/2019/06/25/ZZrMyd.png" alt></p></li><li><p><img src="https://s2.ax1x.com/2019/06/25/ZZrKQH.png" alt></p></li><li><p><img src="https://s2.ax1x.com/2019/06/25/ZZrmWD.png" alt></p></li><li><p><img src="https://s2.ax1x.com/2019/06/25/ZZruSe.png" alt></p></li></ol><p><a href="https://www.jianguoyun.com/p/DWlOqLAQ4e7NBhi5pc8B" target="_blank" rel="noopener">代码下载地址</a></p><hr><p>参考资料</p><p>[1] <a href="https://www.cnblogs.com/ws0751/p/8289738.html" target="_blank" rel="noopener">K-Means聚类算法 博客园</a></p><p>[2] <a href="https://blog.csdn.net/qiuxy23/article/details/82872935" target="_blank" rel="noopener">谱聚类——Introduction</a></p><p>[3] <a href="https://cloud.tencent.com/developer/article/1391977" target="_blank" rel="noopener">谱聚类(spectral clustering)</a></p><p>[4] <a href="https://www.cnblogs.com/lm3306/p/9313739.html" target="_blank" rel="noopener">【聚类算法】谱聚类</a></p><p>[5] Clustering and Projected Clustering with Adaptive Neighbors</p><p>[6] Unsupervised and Semi-Supervised Learning via ℓ1-Norm Graph</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;本学期创新实践课，小组的课题是聚类。本期末总结主要以学习笔记的形式进行表述。&lt;/p&gt;
&lt;p&gt;“聚类”是无监督学习中研究最多的一种无监督学习方法。由于现实世界中未标记的数据样本往往比经过人为标记后的样本要多，因此无监督学习在机器学习中占有很重要的地位。聚类不存在客观标准，我们要以某个角度去找到给出的无标记数据样本之间的相似性，并让机器学习到它并得到分类结果。由于聚类不存在客观标准，所以“聚类”是机器学习中新算法出现最多最快的领域，常用的聚类方法有很多，如K-Means、基于密度聚类算法、谱聚类算法等。在这些算法里，有一些较为经典的，如易于实现的K-Means算法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://adgnn.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="聚类" scheme="https://adgnn.github.io/tags/%E8%81%9A%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>毛概下复习总结</title>
    <link href="https://adgnn.github.io/2019/06/09/2019-6-9-%E6%AF%9B%E6%A6%82%E4%B8%8B%E5%A4%8D%E4%B9%A0/"/>
    <id>https://adgnn.github.io/2019/06/09/2019-6-9-毛概下复习/</id>
    <published>2019-06-09T14:53:00.000Z</published>
    <updated>2019-06-16T10:53:37.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h2><h3 id="五位一体总体布局"><a href="#五位一体总体布局" class="headerlink" title="五位一体总体布局"></a>五位一体总体布局</h3><p>“五位”指经济，政治，文化，社会，生态文明建设。</p><h3 id="新发展理念P207"><a href="#新发展理念P207" class="headerlink" title="新发展理念P207"></a>新发展理念P207</h3><a id="more"></a><p>党的<strong>十八届五中全会</strong>坚持以人民为中心的发展思想，鲜明提出了<strong>创新、协调、绿色、开放、共享</strong>的新发展理念。</p><ol><li>创新是引领发展的第一动力；理论创新，制度创新，科技创新，文化创新等。</li><li>协调是持续健康发展的内在要求。</li><li>绿色是永续发展的必要条件。</li><li>开放是国家繁荣发展的必由之路。</li><li>共享是中国特色社会主义的本质要求：全民共享，全面共享，共建共享，渐近共享。</li></ol><h3 id="供给侧结构性改革P209"><a href="#供给侧结构性改革P209" class="headerlink" title="供给侧结构性改革P209"></a>供给侧结构性改革P209</h3><p>推动经济发展质量变革，效率变革，动力变革，提高全要素生长率。</p><ol><li>推进增长动能转换，以<strong>加快发展先进制造业</strong>为重点全面提升<strong>实体经济</strong>。</li><li>深化要素市场化配置改革，实现由以价取胜向<strong>以质取胜</strong>的转变。</li><li>加大<strong>人力资本培育</strong>力度，更加注重调动和保护人的积极性。</li><li>持续推进“<strong>三去一降一补</strong>”，优化市场供求结构。三去一补一降：去产能去库存去杠杆 补短板 降成本</li></ol><h3 id="建设现代经济体系的路径P211"><a href="#建设现代经济体系的路径P211" class="headerlink" title="建设现代经济体系的路径P211"></a>建设现代经济体系的路径P211</h3><p>我国经济已由高速增长阶段转向高质量发展阶段，处于在转变发展方式，优化经济结构，转化增长动力的关键期。</p><ol><li>大力发展<strong>实体经济</strong>。</li><li>加快实施<strong>创新驱动发展战略</strong>。</li><li>激发各类<strong>市场主体活力</strong>。</li><li>积极推动<strong>城乡区域协调发展</strong>。</li><li>着力发展<strong>开放型经济</strong>。</li><li>加快<strong>完善社会主义市场经济体制</strong>。</li></ol><h3 id="人民当家作主的制度体系P216"><a href="#人民当家作主的制度体系P216" class="headerlink" title="人民当家作主的制度体系P216"></a>人民当家作主的制度体系P216</h3><p>我国是工人阶级领导，以工农联盟为基础的人民民主专职的社会主义国家，国家一切权力属于人民，发展社会主义民主政治就是要体现人民意志，保障人民权益，激发人民创造力，用制度体系保证人民当家作主。</p><p><strong>人民代表大会制度</strong>是我国<strong>根本</strong>政治制度。支持和保证人大依法行使<strong>立法权，监督权，决定权，任免权</strong>。</p><p>协商民主是中国社会主义民主政治的特有形式和独特优势，是实现党的领导的重要方式。</p><p><strong>中国共产党领导的多党合作和政治协商制度</strong>是我国的一项<strong>基本</strong>政治制度。</p><p><strong>民族区域自治制度</strong>是我国的一项<strong>基本</strong>政治制度。</p><p><strong>基层群众自治制度</strong>是我国的一项<strong>基本</strong>政治制度。</p><h3 id="党的领导、人民当家作主、依法治国的关系P215"><a href="#党的领导、人民当家作主、依法治国的关系P215" class="headerlink" title="党的领导、人民当家作主、依法治国的关系P215"></a>党的领导、人民当家作主、依法治国的关系P215</h3><p>走中国特色社会主义政治发展道路，必须<strong>党的领导、人民当家作主、依法治国有机统一</strong>。</p><p><strong>党的领导</strong>是人民当家作主和依法治国的<strong>根本保证</strong></p><p><strong>人民当家作主</strong>是社会主义民主政治的<strong>本质特征</strong></p><p><strong>依法治国</strong>是党领导人民治理国家的<strong>基本方式</strong></p><h3 id="爱国统一战线P218"><a href="#爱国统一战线P218" class="headerlink" title="爱国统一战线P218"></a>爱国统一战线P218</h3><p>社会主义的建设事业必须依靠<strong>工人、农民和知识分子</strong>。</p><p>统一战线：<strong>全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一和致力于中华民族伟大复兴的爱国者</strong>。</p><ol><li>坚持<strong>长期共存，互相监督，肝胆相照，荣辱与共</strong>，支持民主党派按照中国特色社会主义参政党要求更好地履行职能。</li><li>深化民族团结进步教育，筑牢<strong>中华民族共同体意识</strong>。</li><li>全面贯彻党的宗教工作基本方针，坚持我国宗教的中国化方向，<strong>积极引导宗教与社会主义社会相适应</strong>。</li><li>牢牢把握<strong>大团结大联合</strong>的主题，做好统战工作。</li></ol><h3 id="一国两制P219"><a href="#一国两制P219" class="headerlink" title="一国两制P219"></a><mark>一国两制P219</mark></h3><p>“一国两制”是一个完整的概念。“一国”是实行“两制”的<strong>前提和基础</strong>，“两制”<strong>从属和派生于</strong>“一国”，并统一于“一国”之内。</p><p>“<strong>和平统一，一国两制</strong>”是我们解决台湾问题的<strong>基本方针</strong>。</p><ol><li><p>全面准确贯彻一国两制方针</p><ul><li>必须始终准确把握一国和两制的关系</li><li>必须始终依照宪法和基本法办事</li><li>必须始终聚集发展这个第一要务。</li><li>必须始终维护和谐稳定的社会环境。</li></ul></li><li><p>扎实推进祖国和平统一进程</p><p>解决台湾问题，实现祖国完全统一，是新时代中国共产党，中国政府的三大历史任务之一。</p><ul><li>坚持和平统一，一国两制方针</li><li>推动两岸关系和平发展</li><li>坚持一个中国原则和九二共识。</li><li>坚决反对和遏制任何形式的台独。</li><li>秉持和践行两岸一家亲理念。</li><li>携手同心共圆民族复兴中国梦。</li></ul></li></ol><h3 id="意识形态工作领导权P224"><a href="#意识形态工作领导权P224" class="headerlink" title="意识形态工作领导权P224"></a>意识形态工作领导权P224</h3><p>意识形态关乎旗帜、关乎道路、关乎国家政治安全，决定文化前进方向和道路。</p><ol><li>掌握意识形态工作领导权，要旗帜鲜明<strong>坚持马克思主义指导地位</strong>。马克思主义是我们立党立国的<strong>根本指导思想</strong>。</li><li>要加快构建<strong>中国特色哲学社会科学</strong>。</li><li>要坚持<strong>正确的舆论导向</strong>。</li><li>要建设好<strong>网络空间</strong>。</li><li>要落实好<strong>意识形态工作责任制</strong>。</li></ol><h3 id="社会主义核心价值观P226"><a href="#社会主义核心价值观P226" class="headerlink" title="社会主义核心价值观P226"></a>社会主义核心价值观P226</h3><p>富强、民主、文明、和谐，</p><p>自由、平等、公正、法治，</p><p>爱国、敬业、诚信、友善</p><h3 id="文化自信与文化强国建设P228"><a href="#文化自信与文化强国建设P228" class="headerlink" title="文化自信与文化强国建设P228"></a>文化自信与文化强国建设P228</h3><ol><li>建设社会主义文化强国，必须<strong>培养高度的文化自信</strong>。</li><li><p>必须<strong>大力发展文化事业和文化产业</strong>。</p><ul><li>要体现社会主义的制度特色，要坚持政府主导，按照公益性，基本性，均等性，便利性的要求，加强文化基础设施建设，完善公共文化服务网络。</li></ul></li><li>必须<strong>提高国家文化软实力</strong>。<ul><li>首先要努力弘扬中华文化。</li><li>其次要讲好中国故事，传播好中国声音，阐释好中国特色。</li><li>最后要加强当代中国价值观念的提炼与阐释。</li></ul></li></ol><h3 id="提高保障和改善民生水平P231"><a href="#提高保障和改善民生水平P231" class="headerlink" title="提高保障和改善民生水平P231"></a>提高保障和改善民生水平P231</h3><ol><li>优先发展<strong>教育事业</strong>。</li><li>提高<strong>就业质量和人民收入水平</strong>。</li><li>加强<strong>社会保障体系建设</strong>。</li><li>坚决打赢<strong>脱贫攻坚战</strong>。</li><li>实施<strong>健康中国战略</strong>。</li></ol><h3 id="总体国家安全观P235"><a href="#总体国家安全观P235" class="headerlink" title="总体国家安全观P235"></a>总体国家安全观P235</h3><p>总体国家安全观是指坚持国家利益至上，以人民安全为宗旨，以人民安全为根，以经济安全为基础，以军事，文化，社会安全为保障，以促进国际安全为依托，维护各领域国家安全，构建国家安全体系，走中国特色国家安全道路。</p><ol><li>完善<strong>国家安全体系</strong></li><li>健全<strong>公共安全体系</strong></li><li>推进<strong>平安中国建设</strong></li><li>加强<strong>国家安全能力建设</strong></li><li>加强<strong>国家安全教育</strong>。<strong>每年4月15日“全民国家安全教育日”</strong></li></ol><h3 id="美丽中国与生态文明建设P237"><a href="#美丽中国与生态文明建设P237" class="headerlink" title="美丽中国与生态文明建设P237"></a>美丽中国与生态文明建设P237</h3><p>生态文明的<strong>核心</strong>是坚持<strong>人与自然的和谐共生</strong>。</p><p>必须树立<strong>尊重自然、顺应自然、保护自然</strong>的生态文明理念，保护自然生态系统，维护人与自然之间形成的生命共同体。</p><ol><li><strong>尊重自然</strong>，是人与自然相处时应秉持的<strong>首要态度</strong>。</li><li><strong>顺应自然</strong>，是人与自然相处时应遵循的<strong>基本原则</strong>。</li><li><p><strong>保护自然</strong>，是人与自然相处时应承担的<strong>重要责任</strong>。</p></li><li><p>把<strong>节约资源</strong>放在<strong>首位</strong>。</p></li><li>坚持<strong>保护优先，自然恢复为主</strong>。</li><li>着力推进<strong>绿色发展、循环发展、低碳发展</strong>。</li><li>形成节约资源和保护环境的<strong>空间格局、产业结构、生产方式、生活方式</strong>。</li></ol><h3 id="加快生态文明体制改革P240"><a href="#加快生态文明体制改革P240" class="headerlink" title="加快生态文明体制改革P240"></a>加快生态文明体制改革P240</h3><ol><li>推进绿色发展</li><li>着力解决突出环境问题</li><li>加大生态系统保护力度</li><li>改革生态环境监管体制。</li></ol><h2 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h2><h3 id="全面建成小康社会的内涵与目标要求"><a href="#全面建成小康社会的内涵与目标要求" class="headerlink" title="全面建成小康社会的内涵与目标要求"></a>全面建成小康社会的内涵与目标要求</h3><p>经济更加发展，民主更加健全，科教更加进步，文化更加繁荣，社会更加和谐，人民生活更加殷实。</p><p>党的<strong>十八大</strong>提出了到<strong>2020年全面建成小康社会的奋斗目标</strong>。</p><ol><li>坚决打好防范<strong>化解重大风险攻坚战</strong>。</li><li>坚决打好<strong>精准脱贫</strong>攻坚战。</li><li>坚决打好<strong>污染防治</strong>攻坚战。</li><li>确保<strong>经济社会持续健康发展</strong>。</li></ol><p>目标要求：</p><ol><li>经济保持中高速增长</li><li>创新驱动成效显著</li><li>发展协调性明显增强</li><li>人民生活水平和质量普遍提高</li><li>国民素质和社会文明程序显著提高</li><li>生态环境质量总体改善</li><li>各方面制度更加成熟更加定型。</li></ol><h3 id="全面深化改革的总目标和主要内容"><a href="#全面深化改革的总目标和主要内容" class="headerlink" title="全面深化改革的总目标和主要内容"></a>全面深化改革的总目标和主要内容</h3><p>党的<strong>十八届三中全会</strong>提出<strong>全面深化改革的总目标：</strong>是<strong>完善和发展中国特色社会主义制度（根本方向），推进国家治理体系和治理能力现代化（实现路径）</strong>。</p><p>国家治理体系包括<strong>经济、政治、文化、社会、生态文明和党的建设</strong>等各领域体制机制、法律法规安排。</p><h3 id="正确处理全面深化改革中的重大关系"><a href="#正确处理全面深化改革中的重大关系" class="headerlink" title="正确处理全面深化改革中的重大关系"></a>正确处理全面深化改革中的重大关系</h3><ol><li>处理好<strong>解放思想和实事求是的关系</strong>。</li><li>处理好<strong>顶层设计和摸着石头过河的关系</strong>。</li><li>处理好<strong>整体推进和重点突破的关系</strong>。</li><li>处理好<strong>胆子要大、步子要稳的关系</strong>。</li><li>处理好<strong>改革，发展，稳定</strong>的关系。</li></ol><h3 id="中国特色社会主义法治道路"><a href="#中国特色社会主义法治道路" class="headerlink" title="中国特色社会主义法治道路"></a>中国特色社会主义法治道路</h3><ol><li><p>坚持<strong>中国共产党的领导</strong>。</p></li><li><p>坚持<strong>人民</strong>在全面依法治国中的<strong>主体地位</strong>。</p></li><li><p>坚持<strong>法律面前人人平等</strong>。</p></li><li>坚持<strong>依法治国和以德治国</strong>相结合。</li><li>坚持从中国<strong>实际</strong>出发。</li></ol><h3 id="新时代党的建设总要求"><a href="#新时代党的建设总要求" class="headerlink" title="新时代党的建设总要求"></a>新时代党的建设总要求</h3><p><strong>新时代党的建设总要求</strong>是：<strong>坚持和加强党的全面领导，</strong></p><p><strong>坚持党要管党、全面从严治党，</strong></p><p><strong>以加强党的长期执政能力建设、先进性和纯洁性建设为主线，</strong></p><p><strong>以党的政治建设为统领，以坚定理想信念宗旨为根基，</strong></p><p><strong>以调动全党积极性、主动性、创造性为着力点，全面推进党的政治建设</strong>||、思想建设、组织建设、作风建设、纪律建设，把制度建设贯穿其中……</p><p>把（坚定理想信念）作为党的思想建设的首要任务。</p><p>勇于（自我革命），从严管党治党，是我们党最鲜明的品格。</p><p>巡视利剑作用彰显，实现（中央和省级）党委巡视全覆盖。</p><h3 id="党的政治建设"><a href="#党的政治建设" class="headerlink" title="党的政治建设"></a>党的政治建设</h3><p>党的<strong>十九大</strong>首次把党的<strong>政治建设纳入党的建设总体布局</strong>，并强调“以党的政治建设为统领”“把党的政治建设摆在首位”。</p><p>党的<strong>政治建设基本内容</strong>：<strong>保证全党服从中央，坚持党中央权威和集中统一领导</strong>，是党的政治建设的<strong>首要任务</strong>。</p><p>增强党内政治生活的<strong>政治性，时代性，原则性，战斗性</strong>。</p><p>坚持严管和厚爱结合、激励和约束并重，完善干部考核评价机制，建立（激励机制）、（容错纠错机制）。</p><h3 id="全面从严治党"><a href="#全面从严治党" class="headerlink" title="全面从严治党"></a>全面从严治党</h3><ol><li>加强党的<strong>思想</strong>建设</li><li>加强党的<strong>组织</strong>建设</li><li>持之以恒<strong>正风肃纪</strong></li><li>将<strong>制度建设</strong>贯穿党的各项建设之中</li><li>深化标本兼治，夺取<strong>反腐败</strong>斗争压倒性胜利。</li></ol><h2 id="第十二章"><a href="#第十二章" class="headerlink" title="第十二章"></a>第十二章</h2><h3 id="习近平强军思想回答的时代课题"><a href="#习近平强军思想回答的时代课题" class="headerlink" title="习近平强军思想回答的时代课题"></a>习近平强军思想回答的时代课题</h3><p><strong>习近平强军思想</strong>深刻回答了“<strong>新时代建设一支什么样的强大人民军队、怎样建设强大人民军队</strong>”的时代课题。</p><h3 id="坚持党对人民军队的绝对领导"><a href="#坚持党对人民军队的绝对领导" class="headerlink" title="坚持党对人民军队的绝对领导"></a>坚持党对人民军队的绝对领导</h3><p>党对军队的绝对领导，其<strong>基本内容</strong>是：<strong>军队必须完全地无条件地置于中国共产党的领导之下，在思想上政治上行动上始终与党中央、中央军委保持高度一致，坚决维护党中央、中央军委权威，任何时候任何情况下都坚决听从党中央、中央军委指挥。</strong></p><h3 id="建设世界一流军队"><a href="#建设世界一流军队" class="headerlink" title="建设世界一流军队"></a>建设世界一流军队</h3><p>到2035年基本建成世界一流军队，到2050年全面建成世界一流军队。</p><ol><li>牢固树立战斗力这个唯一的根本标准。</li><li>坚持<strong>政治建军，改革建军，科技兴军，依法治军</strong>。<ul><li>政治建军是人民军队的立军之本，要着力培养有灵魂，有本事，有血性，有品德的新时代革命军人。</li></ul></li><li><strong>改</strong>革是我军发展壮大，制胜未来的关键一招。</li><li><strong>科技</strong>是现代战争的<strong>核心战斗力</strong>。</li><li><strong>依法治军，从严治军</strong>是我们党建军<strong>治军的基本方略</strong>。</li></ol><h3 id="坚持政治治军、改革强军、科技兴军、依法治军"><a href="#坚持政治治军、改革强军、科技兴军、依法治军" class="headerlink" title="坚持政治治军、改革强军、科技兴军、依法治军"></a>坚持政治治军、改革强军、科技兴军、依法治军</h3><p><strong>政治建军</strong>是人民军队的<strong>立军之本</strong>。</p><p><strong>改革</strong>是我军发展壮大、制胜未来的<strong>关键一招</strong>。</p><p><strong>科技</strong>是现代战争的<strong>核心战斗力</strong>。</p><p><strong>依法治军、从严治军</strong>是我们党建军治军的<strong>基本方略</strong>。</p><h3 id="坚持富贵和强军相统一"><a href="#坚持富贵和强军相统一" class="headerlink" title="坚持富贵和强军相统一"></a>坚持富贵和强军相统一</h3><p>富贵才能强军，强军才能卫国。</p><p>走军民融合式发展圈子。</p><h2 id="第十三章"><a href="#第十三章" class="headerlink" title="第十三章"></a>第十三章</h2><h3 id="世界正处于大发展大变革大调整时期"><a href="#世界正处于大发展大变革大调整时期" class="headerlink" title="世界正处于大发展大变革大调整时期"></a>世界正处于大发展大变革大调整时期</h3><ol><li>世界多极化在<strong>曲折中</strong>发展</li><li><strong>经济全球化</strong>深入发展</li><li><strong>文化多样化</strong>持续推进</li><li><strong>社会信息化</strong>快速发展</li><li>科学技术孕育新突破</li></ol><h3 id="推动建设新型国际关系"><a href="#推动建设新型国际关系" class="headerlink" title="推动建设新型国际关系"></a>推动建设新型国际关系</h3><p>推动建设<strong>相互尊重、公平正义、合作共赢</strong>的新型国际关系。</p><ol><li>推动建立新型国际关系，要坚决<strong>维护国家核心利益</strong>。</li><li>要在<strong>和平共处五项原则</strong>基础上发展同世界各国的友好合作。</li><li>要积极参与全球治理体系改革和建设。</li><li>要加强涉外法律工作，完善涉外法律法规体系。</li><li>还要把相互尊重、公平正义、合作共赢理念体现到政治、经济、安全、文化等对外合作的方方面面，推动构建人类命运共同体。</li></ol><h3 id="人类命运共同体思想的内涵"><a href="#人类命运共同体思想的内涵" class="headerlink" title="人类命运共同体思想的内涵"></a>人类命运共同体思想的内涵</h3><p>内涵：建设<strong>持久和平、普遍安全、共同繁荣、开放包容、清洁美丽</strong>的世界。</p><ol><li>政治上，要相互尊重、平等协商，坚决摒弃冷战思维和强权政治。</li><li>安全上，要坚持以对话解决争端、以协商化解分歧。</li><li>经济上，要同舟共济，促进贸易和投资自由化便利化。</li><li>文化上，要尊重世界文明多样性。</li><li>生态上，要坚持环境友好，合作应对气候变化。</li></ol><h3 id="促进“一带一路”国际合作P292"><a href="#促进“一带一路”国际合作P292" class="headerlink" title="促进“一带一路”国际合作P292"></a><mark>促进“一带一路”国际合作P292</mark></h3><p>党的十九大提出要以“一带一路”建设为重点，坚持引进来和走出去并重，遵循共商共建共享原则，加强创新能力开放合作，形成陆海内外联动，东西双向互济的开放格局。</p><ol><li>坚持引进来和走出去并重</li><li>深化双向投资合作</li><li>坚持<strong>共商共建共享</strong>原则</li><li>加强创新能力开放合作</li><li>把一带一路与构建人类命运共同体更加紧密结合。</li></ol><h3 id="共商共建人类命运共同体（大题）"><a href="#共商共建人类命运共同体（大题）" class="headerlink" title="共商共建人类命运共同体（大题）"></a><mark>共商共建人类命运共同体（大题）</mark></h3><ol><li>坚持和平发展道路，推动建设新型国际关系。</li><li>不断完善外交布局，积极发展全球伙伴关系。</li><li>深度参与全球治理，积极引导国际秩序变革方向。</li><li>推动国际社会从伙伴关系，安全格局，经济发展，文明交流，生态建设等方面为建立人类命运共同体作出努力。</li></ol><h2 id="第十四章"><a href="#第十四章" class="headerlink" title="第十四章"></a>第十四章</h2><h3 id="中国特色社会主义最本质的特征"><a href="#中国特色社会主义最本质的特征" class="headerlink" title="中国特色社会主义最本质的特征"></a>中国特色社会主义最本质的特征</h3><p><strong>中国共产党的领导</strong>是中国特色社会主义<strong>最本质的特征</strong>。</p><ul><li>这是由科学社会主义的理论逻辑所决定的</li><li>这是由中国特色社会主义的产生与发展的历史逻辑所决定的</li><li>这是由中国特色社会主义迈向新征程的实践逻辑所决定的</li></ul><p><strong>党的领导</strong>是中国特色社会主义制度的<strong>最大优势</strong>。</p><ul><li>中国特色社会主义制度是党领导人民创建的。</li><li>党的领导是充分发挥中国特色社会主义制度优势的<strong>根本保障</strong>。</li><li>党的自身优势是中国特色社会主义制度优势的<strong>主要来源</strong>。</li></ul><h3 id="新时代党的历史使命"><a href="#新时代党的历史使命" class="headerlink" title="新时代党的历史使命"></a>新时代党的历史使命</h3><p>新时代中国<strong>共产党的历史使命</strong>，就是<strong>统揽伟大斗争、伟大工程、伟大事业、伟大梦想</strong>，在全面建成小康社会的基础上全面建成社会主义现代化强国，实现中华民族伟大复兴的中国梦。</p><p>伟大梦想是目标。</p><p>伟大斗争是手段。</p><p>伟大工程是保障。（起决定性作用）</p><p>伟大事业是主题。</p><p>我们要更加自觉地增强<strong>道路自信，理论自信，制度自信，文化自信</strong>。</p><h3 id="确保党始终总揽全局协调各方"><a href="#确保党始终总揽全局协调各方" class="headerlink" title="确保党始终总揽全局协调各方"></a>确保党始终总揽全局协调各方</h3><ol><li>确保党始终总揽全局、协调各方，必须增强政治意识、大局意识、核心意识、看齐意识。</li><li>必须坚持和完善党的领导的体制机制。</li><li>必须坚持党的民主集中制原则。</li></ol><hr><h3 id="题库笔记（未整理）"><a href="#题库笔记（未整理）" class="headerlink" title="题库笔记（未整理）"></a>题库笔记（未整理）</h3><p>创新是引领发展的第一动力</p><p>协调是持续健康发展的内在要求</p><p>绿色是永续发展的必要条件</p><p>开放是国家繁荣发展的必由之路</p><p>创新发展注重解决发展动力问题</p><p>协调发展注重解决发展不平衡问题</p><p>绿色发展注重解决人与自然和谐问题</p><p>开放发展注重解决发展内外联动问题</p><p>共享发展注重解决社会公平正义问题</p><p>推进供给侧改革的根本目的是：提供供给质量满足需要</p><p>打赢供给侧结构性改革这场硬仗，要从生产端入手。</p><p>党的领导、人民当家作主和依法治国的统一性是由：社会主义国家的本质决定的</p><p>中国共产党和各民主党派合作的政治基础是：坚持四项基本原则</p><p>民生是人民幸福之基、社会和谐之本。</p><p>加强社会建设，必须以保障和改善民生为重点。</p><p>建设中国特色社会主义，总布局是：“五位一体”总体布局</p><p>“五位一体”：经济、政治、文化、社会、生态文明建设</p><p>人民当家作主，是社会主义民主政治的本质和核心。</p><p>社会主义核心价值体系的基本内容是由马克思主义指导思想、中国特色社会主义共同理想，【中国精神】以（爱国主义）为核心的民族精神和以（改革创新）为核心的时代精神、社会主义荣辱观构成。</p><p>（中国特色社会主义共同理想）是社会主义核心价值体系的主题。</p><p>（社会主义荣辱观）是社会主义核心价值体系的基础。</p><p>2018年第十三届全国人大第一次会议通过的宪法修正案把马克思列宁主义、毛泽东思想、邓小平理论、三个代表重要思想、科学发展观、习近平新时代中国特色社会主义思想共同确立为国家指导思想。</p><p>深化臭脚侧结构性改革，建设现代化经济体系，必须把发展经济的着力点放在（实体经济）上，把（提高供给体系质量）作为主攻方向。</p><p>共享是中国特色社会主义的本质要求。</p><p>我们要加快发展（先进制造业）为重点全面提升实体经济。</p><p>（人民政协）是具有中国特色的制度安排，是社会主义协商民主的重要渠道和专门协商机构。</p><p>我国宗教坚持（独立自主自办）原则，坚持抑制境外势力利用宗教进行渗透……</p><p>港澳台特别行政区享有（高度自治权）</p><p>（就业）是最大的民生。</p><p>（建设生态文明）是中华民族永续发展的千年大计……</p><p>共享是中国特色社会主义的本质要求，其内涵主要包括：全民共享、全面共享、共建共享、渐进共享。</p><p>必须要大力发展实体经济，因为实体经济：是一国经济的立身之本、是财富创造的根本源泉、是国家强盛的重要再支柱、是现代化经济体系的坚守基础。</p><p>建设现代化经济体系是我国发展的战略目标，也是（转变经济发展方式、优化经济结构、转换经济增长动力）的迫切要求。</p><p>在新时代，我们需要（知识型，技能型，创新型）的劳动者。</p><p>我们要深入实施（科教兴国、人才强国、创新驱动战略），努力实现2035年跻身创新型国家前列的目标。</p><p>要支持和保障人大依法行使（立法权、监督权、决定权、任免权）</p><p>人民政协工作要聚集党和国家中心任务，围绕（团结、民主）两大主题。</p><p>培育和践行社会主义核心价值观，必须立足于（中华优秀传统文化、革命文化）</p><p>文化强国是指一个国家具有强大的文化力量，这种力量表现为（具有高度文化素养的国民、发达的文化产业、强大的文化软实力）</p><p>要坚持政府主导，按照（公益性、基本性、均等性、便利性）的要求，大力发展文化事业。</p><p>我们要注重扶贫同（扶志、扶智）相结合。</p><p>改进社会治理方式，我们要坚持（系统治理、依法治理、源头治理、综合治理）</p><p>社会保障体系发挥兜底作用，保障全社会成员基本生成与生活需要，要全面建成（覆盖全民、城乡统筹、权责清晰、保障适度）可持续的多层次社会保障体系。</p><p>社会主义核心价值观是社会主义核心价值体系的内核凝练和集中表达。</p><p>改革开放之所以能取得巨大成功，关键是我们把（党的基本路线）作为党和国家的生命线。</p><p>坚持改革沿着中国特色社会主义方向前进。（方向）决定（道路），（道路）决定（命运）。</p><p>我国社会主义现代化建设的三个重要支点：稳定、改革、发展</p><p>稳定是改革发展的前提</p><p>改革是经济社会发展的动力</p><p>发展是解决一切经济社会问题的关键</p><p>1999年3月，（九届全国人大二次）会议通过的《中华人民共和国宪法修真案》将“依法治国”正式写入宪法。</p><p>2014年（十八届四中全会）通过了《关于全面推进依法治国若干重大问题的决定》，明确提出全面推进依法治国，加快……</p><p>“坚持党要管党、全面从严治党”是新时代党的建设的根本方针。“全面”是（基础），“严”是（关键），“治”是（要害）。</p><p>（旗帜鲜明讲政治）是我们党作为马克思列宁主义政党的根本要求。</p><p>（思想建设）是党的基础性建设。</p><p>党的组织建设：（党员队伍建设、干部队伍建设、民主集中制建设）</p><p>（党支部）是党的基础组织，担负直接教育党员、管理党员、监督党员和组织群众、宣传群众、凝聚群众、服务群众的职责。</p><p>作风建设的核心是保持（党同人民群众的血肉联系）</p><p>从现在到（2025）年是全面建成小康社会决胜期。</p><p>推进国家治理体系和治理能力现代化，必须解决好（价值体系）问题。</p><p>党中央“四个全面战略布局的提出，第一次将（全面依法治国）论述为全面深化改革的“姊妹篇”，形成“鸟之两翼，车之两轮”。</p><p>“四个全面”指：全面建成小康社会、全面深化改革、全面推进依法治国、全面从严治党。</p><p>全面推进依法治国的总目标是：建设中国特色社会主义法治体系，建设社会主义法治国家。建设人民满意的服务型政府。</p><p>“四个全面”的本质是（战略布局）</p><p>全面推进依法治国方略的重中之重是（让每个人在司法个案中感受到公平正义）。</p><p>经济体制改革的核心问题是（如何处理好政府和市场的关系）。</p><p>全面从严治党的路径是增强从严治党的（系统性、预见性、创造性、实效性）</p><p>“四个全面”战略布局……这体现了（理论与实践具体的历史的统一、共性和个性具体的历史的统一、价值判断与价值选择的辩证统一、整体和部分的辩证统一）。</p><p>从性质定位看，四个全面是：（治国理政的战略布局、现代化建设的整体方略、民族复兴的行动纲领、发展中国特色社会主义的集中体现）。</p><p>（促进社会公平正义）、（增加人民福祉）是全面深化改革的出发点和落脚点，是坚持党全心全意为人民服务根本宗旨的必然要求。</p><p>（国家治理体系）和（治理能力）是一个国家的制度和制度执行能力的集中体现。</p><p>我国改革开放之所以能取得巨大成功，关键是我们把党的基本路线作为党和国家的生命线，始终坚持把以经济建设为中心同（四项基本原则）、（改革开放）这两个基本点统一于中国特色社会主义伟大实践。</p><p>坚持精准扶贫、精准脱贫基本方略，坚持（专项扶贫）、（行业扶贫）、（社会扶贫）等“三位一体”大扶贫格局。</p><p>党的十八大明确提出“加快建设社会主义法治国家”，把“全面推进依法治国”作为政治改革和政治发展的重要目标和基本任务。</p><p>国家安全是安邦定国的重要基石，（维护国家安全）是全国各族人民根本利益所在。</p><p>力争到（2035）年基本实现国防和军队现代化，到本世纪中叶把人民军队全面建成世界一流军队。</p><p>（有灵魂、有本事、有血性、有品德）是我军鲜明特色和政治优势。</p><p>军队强不强，关键看（打仗）</p><p>全面从严治军，推动治军方式根本性转变，提高国防和军队建设（法治化）水平。</p><p>坚持富贵和强军相统一，强化统一领导、顶层设计、改革创新和重大项目落实，深化国防科技工业改革，形成军民融合（深度发展）格局，构建一体化的国家战略体系和能力。</p><p>让军人成为全社会（尊崇）的职业。</p><p>构建中国特色现代军事力量体系，重点是（优化作战力量结构）。</p><p>中国共产党成立以来，坚持把马克思列宁主义基本原理和中国革命战争和人民军队建设实践相结合，形成了（毛泽东军队建设思想）、（邓小平新时期军队建设思想）、（江泽民国防和军队建设思想）、（胡锦涛国防和军队建设思想）等具有中国特色的马克思主义军事理论成果。</p><p>党对军队绝对领导的根本压做制度，发端于（南昌起义），奠基于（三湾改编），定型于（古田会议），是人民军队完全区别于一切旧军队的政治特征和根本优势。</p><p>构建中国特色现代军事力量体系，就是要加快形成（精干）、（联合）、（多能）、（高效）的信息化军事力量体系。</p><p>军队建设要适应世界新军事革命发展趋势和国家安全需求，提高建设徵令效益，确保到2020年：（基本实现机械化），（信息化建设取得重大进展），（战略能力有大的提升）。</p><p>党政军民学，东西南北中，党是领导一切的。必须增强（政治意识、大局意识、核心意识、看齐意识）。</p><p>习近平军事思想提出，要着力培养（有灵魂、有本事、有血性、有品德）的新时代革命军人。</p><p>新时代革命军人，要锻造具有（铁一般信仰、信念、纪律、担当）的过硬部队，确保我军永远立于不败之地。</p><p>全面推进中国特色大国外交，形成全方位、多层次、（立体化）的外交布局，为我国发展营造了良好外部条件。</p><p>坚持总体国家安全观，必须以（政治安全）为根本。</p><p>必须统筹国内国际两个大局，始终不渝走和平发展道路、奉行（互利共赢）的开放战略。</p><p>推动形成全面开放新格局。要以（一带一路）建设为重点，坚持引进来和走出去并重，遵循共商共建共享原则，加强创新能力开放合作，形成陆海内外联动、东西双向经济的开放格局。</p><p>20世纪90年代以来，随着冷战的结束，新科技革命的大力推进，特别是（信息技术）取得突破并广泛应用，经济全球化得以迅猛发展。</p><p>中国倡导建立新型国际关系，核心是维护（联合国宪章）宗旨和原则。</p><p>我们呼吁，各国人民同心协力，构建人类命运共同体，建设（持久和平、普遍安全、共同繁荣、开放包容、清洁美丽）的世界。</p><p>习近平出席博鳌亚洲论坛（2015）年提出“通过迈向亚洲命运共同体，推动建设人类命运共同体”倡议。</p><p>中国积极推进大国协调和合作，构建（总体稳定、均衡发展）的大国关系框架。</p><p>推动建立新型国际关系，要按照（大国）是关键，（周边）是首要，发展与各国的友好关系。</p><p>社会主义有（500年）历史</p><p>决胜全面建成小康社会，分（二步走）到本世纪中叶建成社会主义现代化强国。</p><p>（十三届）全国人大一次会议审议通过的宪法修正案，把“中国共产党的领导是中国特色社会主义最本质的特征”载入宪法总纲。</p><p>实现伟大梦想，必须深入推进（党的建设）新的伟大工程，必须推进（中国特色社会主义）伟大事业。</p><p>推动全党尊崇（党章），增强政治意识、大局意识、核心意识、看齐意识，坚决维护党中央权威和集中统一领导，严明党的政治纪律和政治规矩，层层落实管党治党的政治责任。</p><p>我们党要团结带领人民有效对重大挑战、抵御重大风险、克服重大阻力、解决重大矛盾，必须（进行具有许多新的历史特点的伟大斗争）。</p><p>“革命声传画舫中,诞生共党庆工农;重来正值清明节,烟雨迷濛访旧踪”，是董必武的诗。</p><p>“回国不需要理由，不回国才要理由”，这是两弹元勋（彭桓武）的经典话语。</p><p>（张静泉）保护了我国现成最早的《共产党宣言》中文译本的内容。</p><p>全面推进党的建设的新的伟大工程要进一步解决好的历史性课题是（提高党的领导水平和执政水平、提高拒腐防变和抵御风险能力）。</p><p>2005年，习近平发表在《光明日报》的《弘扬“红船精神”；走在时代前列》，首次公开提出并系统阐述了“红船精神”：（开天辟地、敢为人先的首创精神；坚定理想、百折不挠的奋斗精神；立党为公、忠诚为民的奉献精神）。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第十章&quot;&gt;&lt;a href=&quot;#第十章&quot; class=&quot;headerlink&quot; title=&quot;第十章&quot;&gt;&lt;/a&gt;第十章&lt;/h2&gt;&lt;h3 id=&quot;五位一体总体布局&quot;&gt;&lt;a href=&quot;#五位一体总体布局&quot; class=&quot;headerlink&quot; title=&quot;五位一体总体布局&quot;&gt;&lt;/a&gt;五位一体总体布局&lt;/h3&gt;&lt;p&gt;“五位”指经济，政治，文化，社会，生态文明建设。&lt;/p&gt;
&lt;h3 id=&quot;新发展理念P207&quot;&gt;&lt;a href=&quot;#新发展理念P207&quot; class=&quot;headerlink&quot; title=&quot;新发展理念P207&quot;&gt;&lt;/a&gt;新发展理念P207&lt;/h3&gt;
    
    </summary>
    
    
      <category term="毛概" scheme="https://adgnn.github.io/tags/%E6%AF%9B%E6%A6%82/"/>
    
      <category term="考试" scheme="https://adgnn.github.io/tags/%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>商业模式画布</title>
    <link href="https://adgnn.github.io/2019/05/19/2019-5-19-%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E7%94%BB%E5%B8%83/"/>
    <id>https://adgnn.github.io/2019/05/19/2019-5-19-商业模式画布/</id>
    <published>2019-05-19T04:09:00.000Z</published>
    <updated>2019-05-19T04:20:50.301Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>商业模式画布，用4个视角、9个模块来描述你的商业模式。</p><p>4个视角：为谁提供，提供什么，如何提供，如何赚钱</p><p>9个模块：客户细分、价值主张、渠道通道、客户关系、收入来源、核心资源、关键业务、重要合作、成本结构</p></blockquote><a id="more"></a><p><img src="https://s2.ax1x.com/2019/05/19/EXLWSU.png" alt></p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><blockquote><p>你某天突然被灵感砸中脑袋，有了个创业想法：我能不能做个人脸识别系统，帮助服装店用智能摄像头识别顾客，再自动匹配她们在社交账户里的文字、照片、视频等等，识别出顾客的性格、爱好、婚否、消费能力等，让店员有针对性地推荐销售，提高成交率呢？</p></blockquote><h1 id="商业模式画布例"><a href="#商业模式画布例" class="headerlink" title="商业模式画布例"></a>商业模式画布例</h1><h2 id="一、客户细分"><a href="#一、客户细分" class="headerlink" title="一、客户细分"></a>一、客户细分</h2><p>零售作为一个渠道，其效率 = 流量 x 转化率 x 客单价。门店销售人员，从顾客进门开始，就为转化率，和客单价而战。但是这些，都严重依赖于对客户的深度了解。我们就打算服务于这群人，所有为此痛苦的门店。</p><h2 id="二、-价值主张"><a href="#二、-价值主张" class="headerlink" title="二、 价值主张"></a>二、 价值主张</h2><p>“熟悉的陌生人”项目所能提供的价值，是通过门店智能摄像头的人脸识别，匹配每个到店客人的社交账户，把即便是第一次到店的客人，变成“熟悉的陌生人”，让店员可以针对性地推荐服装，提高转化率、客单价，提升业绩。</p><h2 id="三、-渠道通道"><a href="#三、-渠道通道" class="headerlink" title="三、 渠道通道"></a>三、 渠道通道</h2><p>我们有位合伙人，在服装业深耕20多年，理解加盟，开店，运营的各种明规则，暗文化。我们将先通过几家小店走通闭环，然后集中火力攻占一家大型连锁服装店，再以此为样本，和加盟招商机构合作，全国推广我们的系统。</p><h2 id="四、客户关系"><a href="#四、客户关系" class="headerlink" title="四、客户关系"></a>四、客户关系</h2><p>我们通过代理渠道，和门店建立商务关系；通过云端系统，和门店建立运营关系。随着“熟悉的陌生人”在系统内的购买量越来越大，我们对顾客的分析和推荐，将更加精准。我们和门店之间，会形成彼此增益的关系。</p><h2 id="五、-收入来源"><a href="#五、-收入来源" class="headerlink" title="五、 收入来源"></a>五、 收入来源</h2><p>初装费。也就是人脸识别设备和安装费用。人脸识别设备的收入，归公司；安装费用，用来滋养渠道。<br>使用费。门店可以按每次成功识别，单独支付使用费。<br>会员费。门店也可以购买年度会员，享受全网社交匹配能力；还可以购买年度金牌会员，享有“熟悉的陌生人”系统不断积累的独家消费数据，进一步提升业绩。</p><h2 id="六、-核心资源"><a href="#六、-核心资源" class="headerlink" title="六、 核心资源"></a>六、 核心资源</h2><p>我们能做这件事，是因为我自己在人工智能，尤其是人脸识别领域10年的研究，发表的众多论文。我们的技术实力，是巨大的壁垒。</p><h2 id="七、关键业务"><a href="#七、关键业务" class="headerlink" title="七、关键业务"></a>七、关键业务</h2><p>我们要做三件核心的事：1）建立全网社交数据库，利用大数据和人工智能，做性格、偏好、消费能力等特征分析；2）提高识别的速度和正确率，实现95%正确率下的秒级响应；3）在全国铺设代理、加盟的渠道体系。</p><h2 id="八、-重要合作"><a href="#八、-重要合作" class="headerlink" title="八、 重要合作"></a>八、 重要合作</h2><p>我们的第三合伙人，专门负责战略合作。他正在建立和社交平台，硬件供应商，行业协会等等的合作关系。</p><h2 id="九、成本结构"><a href="#九、成本结构" class="headerlink" title="九、成本结构"></a>九、成本结构</h2><p>我们最重要的成本，是人员成本。这也是我们需要融资的原因。我们需要这笔钱：1）扩大团队，加快技术迭代；2）拓展全国性加盟网络；3）做案例营销，获得关注。<br>最后，你说：“为谁提供，提供什么，如何提供，和如何赚钱。这就是我们的商业模式。希望能得到您的投资，我们一起创造新的蓝海。”</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;商业模式画布，用4个视角、9个模块来描述你的商业模式。&lt;/p&gt;
&lt;p&gt;4个视角：为谁提供，提供什么，如何提供，如何赚钱&lt;/p&gt;
&lt;p&gt;9个模块：客户细分、价值主张、渠道通道、客户关系、收入来源、核心资源、关键业务、重要合作、成本结构&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="商业模式" scheme="https://adgnn.github.io/tags/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="创业" scheme="https://adgnn.github.io/tags/%E5%88%9B%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>每周新知1期</title>
    <link href="https://adgnn.github.io/2019/05/05/2019-5-5-%E6%9C%AC%E5%91%A8%E6%96%B0%E7%9F%A51/"/>
    <id>https://adgnn.github.io/2019/05/05/2019-5-5-本周新知1/</id>
    <published>2019-05-05T12:39:00.000Z</published>
    <updated>2019-05-05T13:21:29.710Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录过去一周，我看到的值得分享的东西。</p><p>别忘了订阅本博客：<a href="https://adgnn.github.io/atom.xml">右键复制链接到RSS阅读器</a></p><a id="more"></a><h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><ol><li><p><a href="https://daily.zhihu.com/story/9710830" target="_blank" rel="noopener">单喝牛奶和茶不胖，为什么喝奶茶就容易发胖？</a></p><p>为奶茶正名，区分“油茶”和“奶茶”。真正的“奶”+“茶”是不会对健康有害的。</p></li><li><p><a href="https://daily.zhihu.com/story/9710906" target="_blank" rel="noopener">地铁防火，各国是怎么做的？</a></p><p>我国的地铁防火分【设备】和【机制】。设备：各种灭火设备以及火灾警报，机制：各系统联动监控，提供信息给工作人员做人员疏散、列车进站指挥。</p></li><li><p><a href="https://www.zhihu.com/question/320197373/answer/669301582" target="_blank" rel="noopener">汽车销售有哪些行业【潜规则】或者【黑幕】？</a></p><p>销售车辆信息延迟录入；附加费用……</p></li><li><p><a href="https://daily.zhihu.com/story/9710834" target="_blank" rel="noopener">孩子为什么不喜欢去上学？</a></p><p>大多数情况下，孩子对你说 “我不想去上学”，都不仅仅是想要表达这几个字字面上的那个意思。“不想去上学” 是一种态度，一种蛛丝马迹，流露出的，更可能是你的小孩对什么不满意，或者是什么事情上需要帮助，他们别无他法，只好借助这件大人最看重的事情发难，表达自己内心的无助和真正的诉求。</p></li><li><p><a href="https://www.zhihu.com/question/19580096" target="_blank" rel="noopener">必读的RSS订阅源</a></p></li></ol><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><ol><li><p>如何打造一个品牌？</p><blockquote><p>不被消费者优先选择的，不叫品牌，叫商标。</p></blockquote><ul><li><p>品牌是一个装载消费者“了解、信任、偏好”的容器。</p><ul><li><p>建立“品牌容器”的三种方法：</p><ul><li><p>从产品中抽取“品类”：<code>产品和别人的不能是一类</code></p></li><li><p>注入“品位”价值：<code>品牌故事，设计模式，同伴认可</code></p></li><li><p>注入“品质”价值：<code>产品的根本，是品质的保证</code></p></li></ul></li></ul></li></ul></li><li><p>从政治家干预经济看到环境的力量</p><blockquote><p>在政治领域，一件事情之所以发生，不在于这件事本身在逻辑上是对的，而在于身处其中的政治家被形势裹挟着，或主动或被动地作了很多选择。但这些选择的政治后果，往往是身处其中的人们无法预见的。</p></blockquote><p>环境可以解释特朗普的言论，可以解释胡佛总统在大萧条时期所做的对经济的干预政策。</p></li><li><p>给提建议是一种权力</p><blockquote><p>每个人都喜欢给人提建议，提建议是一种心理需求。人们提建议并不仅仅是为了对方好，也是为了让自己获得权力感。</p></blockquote><p>提建议是一种权力，这可以解释为什么有时候你不喜欢别人给你提建议，也可以解释为什么你给别人提建议时别人可能会反感。</p><p>如果你想向某个人示好，你可以向他寻求建议。</p><p>如果你想向别人提建议，请考虑他人的感受。</p></li><li><p>所罗门悖论</p><blockquote><p>你这么聪明的人物，能整天给别人提建议，但是自己的生活却搞不好。</p><p>读了那么多书，却依然过不好这一生。</p></blockquote><p>要解决这个问题，必须提高“智慧”。“智慧”和“智商”是两回事，有智慧的人智商不一定高，也就是不一定很会解数学题。而有智慧是指处事能力和决策能力强。智识上的谦逊，换位思考，善于达成妥协是智慧的表现。</p><p>智慧很难学，但不是没有希望。</p><p>你喜欢给别人提建议，不妨把自己身上发生的事想象成别人身上发生的事，这样你就可以和向别人提建议一样给自己提建议了。这是在角色上作区分。</p><p>你还可以把眼前发生的事想象成一个一年前发生的事，制造时间上的距离感。这和“马后炮”有些类似。</p><p>你还可以把自己想象成一个老师，把要在这件事情过生日打交道的对方想象成一个小孩子。在这种不对等的关系中，你往往能表现得更好。</p></li><li><p>可扩展性</p><p>真正赚钱的行业是可扩展性强的行业。可扩展性指一次劳动可以服务成千上万的人。理发师的工作一次只能服务少数几个人，不具有可扩展性；作家写一本书可以让无数的人看到，这就是可扩展性。</p><p>可扩展性让传播的边际成本趋近于零，同时又能得到更多的流量。这就是可扩展性带来的好处。</p></li></ol><h1 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h1><ol><li><a href="https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png" target="_blank" rel="noopener">微信更新，新增“朋友圈仅一个月可见”</a></li><li><p><a href="[https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png?imageMogr2/auto-orient/format/jpeg/thumbnail/400x2000%3E/quality/70/interlace/1](https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png?imageMogr2/auto-orient/format/jpeg/thumbnail/400x2000&gt;/quality/70/interlace/1">本式港澳通行证即将失效，需更换卡式通行证</a>)</p></li><li><p>珠海市国资委入股魅族</p></li><li><a href="https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png" target="_blank" rel="noopener">今年第一季度全球芯片销量增速创35年新低</a></li><li><a href="https://new.qq.com/omn/20190502/20190502A08OGE00" target="_blank" rel="noopener">特斯拉上海超级工厂220kV变电站已开建 工期半年</a></li><li><a href="https://new.qq.com/omn/20190502/20190502A06OX6.html" target="_blank" rel="noopener">美国佛州通过教师配枪法案</a></li><li><a href="https://new.qq.com/omn/20190501/20190501A0A3D2.html" target="_blank" rel="noopener">全球最大比特币交易所被查</a></li></ol><h1 id="冷知识"><a href="#冷知识" class="headerlink" title="冷知识"></a>冷知识</h1><ol><li>为了象征清洁，医生的工作服是白色的。但手术间的衣服是蓝绿色的，因为是手术室环境下，长时间注视红色的血液组织，视网膜会留下残影，再看白色会产生绿色的影子，影响医生的视线。</li></ol><h1 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/26514613" target="_blank" rel="noopener">最优化问题的KTT条件</a></li></ol><hr><p>本周新知第1期至此结束~~撒花</p><p>后期内容会更丰富，更完善</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录过去一周，我看到的值得分享的东西。&lt;/p&gt;
&lt;p&gt;别忘了订阅本博客：&lt;a href=&quot;https://adgnn.github.io/atom.xml&quot;&gt;右键复制链接到RSS阅读器&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="新知" scheme="https://adgnn.github.io/tags/%E6%96%B0%E7%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>小米9安装谷歌相机教程</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-4-%E5%B0%8F%E7%B1%B39%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-4-小米9安装谷歌相机教程/</id>
    <published>2019-05-04T15:00:00.000Z</published>
    <updated>2019-05-05T13:42:01.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>小米9自带相机虽然有很多功能，但基本照相功能在HDR开启以及暗光模式下的表示却不尽如人意。</p><p>谷歌的Pixel系列虽然一直都是单镜头，却凭借着谷歌相机优秀的HDR+算法在手机相机测评得分中名列前茅。</p><a id="more"></a><p>关于HDR+算法，网上有很多介绍它的文章，本篇就不作原理介绍了。我们只需要知道，HDR+算法可以提升画质，改进照片暗部细节，以及极大地提升暗光环境下的照片质量。</p><p>因为谷歌相机优秀的算法，许多大神都有做对各大机型适配的移植版本的谷歌相机。</p><p><strong>如果你正在使用小米9，并想尝试谷歌相机的话，请跟着本文的步骤操作</strong></p><p><strong>如果你使用的是其他型号的手机，请翻到文章最后</strong></p><h1 id="1-安装小米9对应移植的谷歌相机"><a href="#1-安装小米9对应移植的谷歌相机" class="headerlink" title="1.安装小米9对应移植的谷歌相机"></a>1.安装小米9对应移植的谷歌相机</h1><ol><li>打开<a href="https://www.celsoazevedo.com/files/android/google-camera/dev-xtrme/#apk797" target="_blank" rel="noopener">Google Camera Port</a></li><li>点击列表的第一个（截至2019-5-4，最新版本是<code>MGC_6_1_021_xcam6_beta3.apk</code>，就可以下载对应的apk文件了<img src="https://s2.ax1x.com/2019/05/04/EdQZse.png" alt="图1"></li></ol><ul><li>懒人链接：<a href="https://f.celsoazevedo.com/file/gcamera/MGC_6_1_021_xcam6_beta3.apk" target="_blank" rel="noopener">MGC_6_1_021_xcam6_beta3.apk</a></li></ul><ol start="3"><li><p>将APK文件发到小米9上（如果直接使用小米9下载，跳动本步）</p></li><li><p>安装APK文件</p></li></ol><h1 id="2-配置你的谷歌相机"><a href="#2-配置你的谷歌相机" class="headerlink" title="2. 配置你的谷歌相机"></a>2. 配置你的谷歌相机</h1><h2 id="2-1-下载配置文件"><a href="#2-1-下载配置文件" class="headerlink" title="2.1 下载配置文件"></a>2.1 下载配置文件</h2><ol><li>在刚才的<a href="https://www.celsoazevedo.com/files/android/google-camera/dev-xtrme/#apk797" target="_blank" rel="noopener">Google Camera Port</a>页面点击下载文件右边对应的<a href="https://www.celsoazevedo.com/files/android/google-camera/f/changelog407/" target="_blank" rel="noopener">changelog</a><img src="https://s2.ax1x.com/2019/05/04/EdQVMD.png" alt="图2"></li><li><p>打开的页面中找到如下图<img src="https://s2.ax1x.com/2019/05/04/EdQUds.png" alt="图3"></p></li><li><p>随便点击一个（推荐<code>P3XL</code>）</p></li></ol><ul><li>懒人链接：<a href="https://www.celsoazevedo.com/files/android/f/download/Marian---XLib2.2s---P3XL---Test4.xml" target="_blank" rel="noopener">Marian—Xlib2.2s—P3XL—Test4.xml</a></li></ul><ol start="3"><li>下载后进入小米9<code>文件管理</code>APP</li><li>进入<code>手机</code>分栏<img src="https://s2.ax1x.com/2019/05/04/EdlINn.png" alt="图4"></li><li>在上方搜索框输入<code>xml</code><img src="https://s2.ax1x.com/2019/05/04/EdlXB4.png" alt="图5"></li><li>长按刚才下载的<code>Marian---XLib2.2s---P3XL---Test4.xml</code>，<code>更多</code>，<code>复制</code><img src="https://s2.ax1x.com/2019/05/04/Ed1S41.png" alt="图6"></li><li>选择目录<code>内部存储设备</code>，找到<code>GCam</code>文件夹（如果没有则自己新建一个同名文件夹），打开<code>Configs</code>文件夹。</li><li>点击<code>粘贴</code>按钮<img src="https://s2.ax1x.com/2019/05/04/Ed1ijO.png" alt="图8"></li></ol><h2 id="2-2-使配置文件生效"><a href="#2-2-使配置文件生效" class="headerlink" title="2.2 使配置文件生效"></a>2.2 使配置文件生效</h2><ol><li>打开谷歌相机APP</li><li>双击相机界面底部黑色部分</li><li>在<code>Choose config</code>下面选择<code>Marian---Xlib2.2s---N6P---Test4.xml</code>，点击<code>RESTORE</code>，自此配置文件已经导入到谷歌相机里了.<img src="https://s2.ax1x.com/2019/05/04/Ed1kuD.png" alt></li><li>导入后我们还要进一步设置，使其符合自己的习惯。参考本人的设置：</li></ol><p><img src="https://s2.ax1x.com/2019/05/04/Ed1c5R.png" alt="设置1"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1fxK.png" alt="设置2"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1Iqe.png" alt="设置3"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1xsS.png" alt="设置4"></p><h1 id="3-使用技巧"><a href="#3-使用技巧" class="headerlink" title="3. 使用技巧"></a>3. 使用技巧</h1><ol><li>长按切换摄像头按钮切换到长焦或广角镜头</li></ol><ul><li>长焦：设置里关闭<code>Use 3rd back lens</code></li><li>广角：设置里开启<code>Use 3rd back lens</code></li></ul><h1 id="4-最后的话"><a href="#4-最后的话" class="headerlink" title="4. 最后的话"></a>4. 最后的话</h1><p>对于非小米9手机，只有使用高通处理器的手机才有可能使用谷歌相机。</p><p>非小米9高通处理器手机请在<a href="https://www.celsoazevedo.com/files/android/google-camera/" target="_blank" rel="noopener">这个网址</a>寻找适合自己手机的型号的对应谷歌相机移植版本。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;小米9自带相机虽然有很多功能，但基本照相功能在HDR开启以及暗光模式下的表示却不尽如人意。&lt;/p&gt;
&lt;p&gt;谷歌的Pixel系列虽然一直都是单镜头，却凭借着谷歌相机优秀的HDR+算法在手机相机测评得分中名列前茅。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小米9" scheme="https://adgnn.github.io/tags/%E5%B0%8F%E7%B1%B39/"/>
    
      <category term="Mi9" scheme="https://adgnn.github.io/tags/Mi9/"/>
    
      <category term="谷歌相机" scheme="https://adgnn.github.io/tags/%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA/"/>
    
      <category term="摄影" scheme="https://adgnn.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>WIN下从零搭建个人博客</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-3-WIN%E4%B8%8B%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-3-WIN下从零搭建个人博客/</id>
    <published>2019-05-04T10:51:01.055Z</published>
    <updated>2019-05-04T10:39:36.712Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>耗时两天搭建了一个个人博客：<a href="https://adgnn.github.io">adgnn的个人博客</a></p><p>本博客是搭建在github page上的，没有购买个人域名，所以不需要花钱就可以搭建一个属于自己的博客。</p><p><strong>本博客仅说明WINDOWS环境下的博客搭建</strong></p><a id="more"></a><h2 id="2-准备-需要下载的工具"><a href="#2-准备-需要下载的工具" class="headerlink" title="2. 准备 - 需要下载的工具"></a>2. 准备 - 需要下载的工具</h2><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git</a> （官网点击Download即可下载，安装完后就可以使用Git Bash命令行工具进行操作。）</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">NodeJS</a> (LTS栏里点击Windows即可下载)</p><p>VPN（最好在能够访问外网的情况下安装，可忽略）</p><p>notepad++（更好的文本/代码编辑软件，可忽略）</p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><ol><li><p>在某个地方<mark>创建一个文件夹</mark>（如G:\myblog\）（名字随意）</p></li><li><p><mark>右键</mark>这个文件夹，选择<mark>Git Bash Here</mark></p></li><li><p>在打开的命令行窗口内输入命令<mark>安装hexo</mark></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="4"><li><mark>初始化hexo</mark>于myblog文件夹</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><ul><li>myblog自己想取什么名字都行</li></ul><ol start="5"><li><mark>安装</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><h2 id="4-Github创建个人仓库"><a href="#4-Github创建个人仓库" class="headerlink" title="4. Github创建个人仓库"></a>4. Github创建个人仓库</h2><p>网站链接：<a href="https://github.com" target="_blank" rel="noopener">Github</a></p><ol><li><mark>注册Github帐号</mark>（记住你的用户名和注册用的邮箱，之后要用）</li><li>登录</li><li>点击<mark>New repository</mark><img src="https://s2.ax1x.com/2019/05/03/EUWoVJ.png" alt="1556889333979"></li><li>创建一个和自己用户名相同的仓库，即<mark>用户名.github.io</mark> （如本人用户名是adgnn，则创建名为adgnn.github.io的仓库）</li><li>点<mark>Create repository</mark></li></ol><h2 id="5-生成SSH并添加到Github"><a href="#5-生成SSH并添加到Github" class="headerlink" title="5. 生成SSH并添加到Github"></a>5. 生成SSH并添加到Github</h2><blockquote><p>SSH是你电脑Git和Github连接的钥匙，请按如下步骤配置。</p></blockquote><ol><li>回到Git Bash窗口，<mark>输入代码表示你的用户名和注册邮箱</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><ul><li>双引号””中的yourname替换成你的用户名</li><li>双引号””中的youremail替换成你的注册邮箱</li></ul><ol start="2"><li><mark>创建SSH</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><ul><li>双引号””中的youremail替换成你的注册邮箱</li><li><p>之后弹出的信息不需要输入任何东西，<mark>一直回车直到命令执行完毕。</mark></p></li><li><p>执行完毕后，<mark>在命令行窗口里找到.ssh的文件夹，打开“此电脑”（或资源管理器），输入这个地址，回车</mark><img src="https://s2.ax1x.com/2019/05/03/EUfMin.png" alt="1556889824319"></p></li></ul><ol start="3"><li><p>用<mark>记事本打开id_rsa.pub备用</mark></p></li><li><p>打开Github网页，<mark>点右上角自己的头像—settings—找到SSH设置选项，点击New SSH Key，把你的<em>id_rsa.pub</em>的信息复制进去<img src="https://s2.ax1x.com/2019/05/03/EUfWFA.png" alt="1556890027211"></mark></p></li><li>在Git Bash检查是否成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="6-安装主题文件"><a href="#6-安装主题文件" class="headerlink" title="6. 安装主题文件"></a>6. 安装主题文件</h2><blockquote><p>本人的博客使用的主题是<em>Yilia</em>，简洁清新，功能实用。本篇以Yilia的安装为例。</p></blockquote><ol><li>Git Bash输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><ul><li>这个命令的功能是将github上的yilia项目clone（克隆）到你的themes目录下面</li><li><mark>如果你觉得Git Bash的下载太慢，可以<a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">点这里</a> 打开项目页面, 点击<em>Clone or download</em> ，<em>Download ZIP</em>，将下载好的ZIP文件里的<em>hexo-theme-yilia-master</em>文件夹解压到\myblog\themes\下，并改名为<em>yilia</em>。</mark></li></ul><h2 id="7-配置-config-yml"><a href="#7-配置-config-yml" class="headerlink" title="7. 配置_config.yml"></a>7. 配置_config.yml</h2><blockquote><p>安装好主题文件后，我们的myblog目录下一共会有两个_config.yml</p><p>一个在\myblog\下，另一个在\myblog\themes\yilia\下</p><p>为了避免混淆，将前者称为<mark>全局配置文件</mark>，后者称为<mark>主题配置文件</mark>。</p></blockquote><blockquote><p>我们绝大部分自定义内容都是在_config.yml里修改的。</p></blockquote><ol><li><mark>用记事本分别打开<em>全局配置文件</em>和<em>主题配置文件</em></mark></li><li><mark>下面是我的<em>全局配置文件</em>，请参考我的配置文件对自己的配置文件修改。</mark>（可参考<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">官方说明</a>）（请将所有和本作者有关的内容照例改成自己的）</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">adgnn的个人博客</span></span><br><span class="line"><span class="attr">subtitle:</span> </span><br><span class="line"><span class="attr">description:</span> <span class="string">adgnn的个人博客</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">blog,</span> <span class="string">博客</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">adgnn</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://adgnn.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-json-content</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">yilia</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/adgnn/adgnn.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JsonContent</span></span><br><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">  meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ol start="3"><li><mark>下面是我的<em>主题配置文件</em>，请参考并修改自己的配置文件。</mark></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives/index.html</span></span><br><span class="line"><span class="comment">#  Blogger: https://adgnn.github.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SubNav</span></span><br><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"https://github.com/adgnn"</span></span><br><span class="line">  <span class="comment">#weibo: "#"</span></span><br><span class="line"><span class="attr">  rss:</span> <span class="string">"/atom.xml"</span></span><br><span class="line">  <span class="comment">#zhihu: "#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#segmentfault: "#"</span></span><br><span class="line">  <span class="comment">#bilibili: "#"</span></span><br><span class="line">  <span class="comment">#acfun: "#"</span></span><br><span class="line">  <span class="comment">#mail: "mailto:litten225@qq.com"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否需要修改 root 路径</span></span><br><span class="line"><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class="line"><span class="comment"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">more</span></span><br><span class="line"><span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class="line"><span class="attr">show_all_link:</span> <span class="string">'展开全文'</span></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否在新窗口打开链接</span></span><br><span class="line"><span class="attr">open_in_new:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> </span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录</span></span><br><span class="line"><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class="line"><span class="attr">toc_hide_index:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 目录为空时的提示</span></span><br><span class="line"><span class="attr">toc_empty_wording:</span> <span class="string">'目录，不存在的…'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否有快速回到顶部的按钮</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">'3224e7c6943d5a59748736b64c978518'</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">favicon:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#你的头像url</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/img/portrait.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启分享</span></span><br><span class="line"><span class="attr">share_jia:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span></span><br><span class="line"><span class="comment">#不需要使用某项，直接设置值为false，或注释掉</span></span><br><span class="line"><span class="comment">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1、多说</span></span><br><span class="line"><span class="attr">duoshuo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2、网易云跟帖</span></span><br><span class="line"><span class="attr">wangyiyun:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、畅言</span></span><br><span class="line"><span class="attr">changyan_appid:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5、Gitment</span></span><br><span class="line"><span class="attr">gitment_owner:</span> <span class="literal">false</span>      <span class="comment">#你的 GitHub ID</span></span><br><span class="line"><span class="attr">gitment_repo:</span> <span class="string">''</span>          <span class="comment">#存储评论的 repo</span></span><br><span class="line"><span class="attr">gitment_oauth:</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">''</span>           <span class="comment">#client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">''</span>       <span class="comment">#client secret</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="comment"># 头像上面的背景颜色</span></span><br><span class="line"><span class="attr">  header:</span> <span class="string">'#4d4d4d'</span></span><br><span class="line">  <span class="comment"># 右滑板块背景</span></span><br><span class="line"><span class="attr">  slider:</span> <span class="string">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># slider的设置</span></span><br><span class="line"><span class="attr">slider:</span></span><br><span class="line">  <span class="comment"># 是否默认展开tags板块</span></span><br><span class="line"><span class="attr">  showTags:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能菜单</span></span><br><span class="line"><span class="comment"># 如不需要，将该对应项置为false</span></span><br><span class="line"><span class="comment"># 比如</span></span><br><span class="line"><span class="comment">#smart_menu:</span></span><br><span class="line"><span class="comment">#  friends: false</span></span><br><span class="line"><span class="attr">smart_menu:</span></span><br><span class="line"><span class="attr">  innerArchive:</span> <span class="string">'所有文章'</span></span><br><span class="line">  <span class="comment">#friends: '友情链接'</span></span><br><span class="line"><span class="attr">  aboutme:</span> <span class="string">'关于我'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">friends:</span></span><br><span class="line"> <span class="comment"># 友情链接1: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接2: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接3: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接4: http://localhost:4000/</span></span><br><span class="line"><span class="comment">#  友情链接5: http://localhost:4000/</span></span><br><span class="line"><span class="comment">#  友情链接6: http://localhost:4000/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aboutme:</span> <span class="string">这里是adgnn的随手Blog</span></span><br></pre></td></tr></table></figure><ul><li><mark>注意本文件里的baidu_analytics后面的数字是本人的百度分析代码，自己修改时请去掉或替换成自己的代码（参考本文末参考文章1）</mark></li></ul><h2 id="8-安装RSS、Sitemap、hexo-asset-image等插件"><a href="#8-安装RSS、Sitemap、hexo-asset-image等插件" class="headerlink" title="8. 安装RSS、Sitemap、hexo-asset-image等插件"></a>8. 安装RSS、Sitemap、hexo-asset-image等插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-asset-image</span><br><span class="line">npm i hexo-generator-feed</span><br><span class="line">npm i hexo-generator-sitemap</span><br></pre></td></tr></table></figure><ul><li>RSS插件可让别人订阅你的Blog，详见本文档后面。</li><li>hexo-asset-image插件可以让你用<code>![logo](logo.jpg)</code>的方式插入图片。</li></ul><h2 id="9-在本地查看自己的页面"><a href="#9-在本地查看自己的页面" class="headerlink" title="9. 在本地查看自己的页面"></a>9. 在本地查看自己的页面</h2><ol><li>在Git Bush输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><ol start="2"><li>打开浏览器，地址栏输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>即可在浏览器预览自己的博客页面。</p><h2 id="10-将-hexo部署到Github"><a href="#10-将-hexo部署到Github" class="headerlink" title="10. 将 hexo部署到Github"></a>10. 将 hexo部署到Github</h2><ol><li>用记事本配置<em>全局配置文件</em>（_config.yml），该步已在第7步完成（请再次确认）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">depoy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ul><li><p><mark>注意：type、repo、branch前面要空2个空格，冒号: 后面要空1个空格</mark></p></li><li><p>将YourgithubName替换成你的Github用户名。</p></li></ul><ol start="2"><li><mark>在Git Bash安装deploy-git</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="3"><li>部署到Github</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>hexo clean：清除之前生成的缓存</li><li>hexo g：（generate）生成静态文章</li><li>hexo d：（deploy）部署文章</li><li><mark>在执行<em>hexo d</em>的时候，第一次执行需要输入你的Github用户名和密码。</mark></li><li>得到下图说明部署成功<img src="https://s2.ax1x.com/2019/05/03/EUIEfs.png" alt="1556891706124"></li><li>部署成功后，等1分钟，就可以登录你的页面<code>https://yourname.github.io</code>查看了。</li></ul><h2 id="11-写自己的文章"><a href="#11-写自己的文章" class="headerlink" title="11. 写自己的文章"></a>11. 写自己的文章</h2><ol><li>使用markdown编辑器（markdown请自行上网搜索了解，推荐<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>）编辑保存自己的文章。</li><li>保存命名为如下形式：<code>20xx-x-x-标题.md</code>，部署以后网站会自动读取日期和标题。</li><li>可在文件最前面加上yaml头部，如下格式：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">从零搭建个人博客</span>  <span class="comment">#标题</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[hexo,</span> <span class="string">github]</span>  <span class="comment">#标签</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span>             <span class="comment">#开启文章目录</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ol start="4"><li>将文件保存到<code>\myblog\source\_posts\</code>下</li><li>重新部署hexo到github上（第10-3步）（PS：每次更新都要重新部署）</li></ol><hr><h3 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h3><p>本篇仅针对使用windows系统的小白，主要参考以下文章：</p><ol><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a></li><li><a href="[https://blog.downager.com/2018/04/29/Windows-Hexo-Blog-%E6%90%AD%E5%BB%BA%E7%B4%80%E9%8C%84/](https://blog.downager.com/2018/04/29/Windows-Hexo-Blog-搭建紀錄/">Hexo Blog搭建记录</a>)</li></ol><p>想要更深入了解请务必进入第1篇文章查看。</p><p>与本文相比，该文章还讲了：<strong>设置个人域名，yml参数含义，主题定制，RSS具体说明，github分支操作，coding page部署实现国内外分流，SEO优化，评论系统等</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;耗时两天搭建了一个个人博客：&lt;a href=&quot;https://adgnn.github.io&quot;&gt;adgnn的个人博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本博客是搭建在github page上的，没有购买个人域名，所以不需要花钱就可以搭建一个属于自己的博客。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本博客仅说明WINDOWS环境下的博客搭建&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="https://adgnn.github.io/tags/github/"/>
    
      <category term="git" scheme="https://adgnn.github.io/tags/git/"/>
    
      <category term="hexo" scheme="https://adgnn.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>羽毛球拍和线的选择</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-4-%E7%BE%BD%E6%AF%9B%E7%90%83%E6%8B%8D%E5%92%8C%E7%BA%BF%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-4-羽毛球拍和线的选择/</id>
    <published>2019-05-04T10:51:01.053Z</published>
    <updated>2019-05-04T11:00:43.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-重量"><a href="#1-重量" class="headerlink" title="1. 重量"></a>1. 重量</h2><ul><li>拍子重量是什么？</li></ul><blockquote><p>一般全碳羽毛球拍重量标识为2u、3u、4u，<strong>数字越大，拍子重量越轻。</strong></p></blockquote><a id="more"></a><p><em>拍子重量对照表</em></p><blockquote><p>2u：90-94g</p><p>3u：85-89g</p><p>4u：80-84g</p><p>5u：80g以下（超轻拍）</p></blockquote><ul><li><p>如何选择适合自己的拍子重量？</p><p>较重的球拍适合力量较大的人，适合喜欢下压进攻的人群。较轻的球拍适合偏重防守、控球、力量较小的人。</p><p>男生建议3u,女生建议用4u.</p></li></ul><h2 id="2-平衡点"><a href="#2-平衡点" class="headerlink" title="2. 平衡点"></a>2. 平衡点</h2><ul><li>什么是平衡点？</li></ul><blockquote><p>平衡点指球拍横放时重心的位置（从球拍底部开始向上量）。若重心靠近拍柄（手抓的地方）即“头轻”，若重心更靠近拍头，叫“头重”。</p></blockquote><blockquote><p>头重：285mm-295mm。惯性大，杀球重，但挥拍灵活性差，不易发力，适用于进攻型球员。</p><p>头轻：275mm-285mm。挥拍灵活，但打出的球力量较小，杀球威胁更小，适合防守控制型球员。</p></blockquote><ul><li>平衡点和重量对手感的影响的区别？</li></ul><blockquote><p><strong>重量对挥拍的感觉成正比（1比1），平衡点对挥拍的感觉成平方正比。</strong></p><p>简单来说，即重量每增加1个单位，挥拍的感觉就重1个单位；重量每增加2个单位，挥拍的感觉就重2个单位。</p><p>而平衡点每增长1个单位，挥拍的感觉重1个单位；平衡点每增长2个单位，挥拍的感觉就重4（$2^2$)个单位。</p></blockquote><p><strong>平衡点可以通过握拍位置以及手胶重量来调整，而拍身重量一般只通过手胶重量来调整。</strong></p><h2 id="3-拍线磅数"><a href="#3-拍线磅数" class="headerlink" title="3.拍线磅数"></a>3.拍线磅数</h2><ul><li>什么是拍线磅数？</li></ul><blockquote><p>羽毛球拍磅数指拍头承受力大小，磅数越高，<strong>拍线越紧，拍面的弹性越小，击球需要的力量越大，但控制更精确。</strong></p></blockquote><p>磅数与击球感觉参考：</p><blockquote><table><thead><tr><th style="text-align:left">磅数范围</th><th>磅数</th><th>击球感觉</th></tr></thead><tbody><tr><td style="text-align:left">低磅</td><td>20磅以下</td><td>拍线松，拉球和吊球轻松，但无法精确控制落点</td></tr><tr><td style="text-align:left">中低磅</td><td>20-23磅</td><td>击球弹性好，控球较好，但有滞留感（拍面和球接触时）</td></tr><tr><td style="text-align:left">中磅</td><td>23-25磅</td><td>拍线和拍子都能发挥其性能，适合业余爱好者</td></tr><tr><td style="text-align:left">中高磅</td><td>25-27磅</td><td>控球舒服，但拍面较硬，拉后场可能吃力，击球可能无力</td></tr><tr><td style="text-align:left">高磅</td><td>28磅以上</td><td>对球控制力强，但对力量要求高，适合专业运动员</td></tr></tbody></table></blockquote><ul><li>什么是适合自己的磅数？</li></ul><blockquote><p>低磅：仅业余，平时偶尔打一两次的人。但一般不建议使用低磅。</p><p>中低磅：普通业余爱好者，经常打球但没经过专业发力训练。</p><p>中磅：有一定水平的业余爱好者，有经过一定的训练，掌握正确的发力方法。</p><p>中高磅：高水平业余爱好者，能正确发力。</p><p>高磅：专业运动员。业余爱好者亦可尝试，但高磅对拍线会很大地减少拍线的寿命。</p></blockquote><h2 id="4-中杆硬度"><a href="#4-中杆硬度" class="headerlink" title="4.中杆硬度"></a>4.中杆硬度</h2><ul><li>什么是中杆硬度？</li></ul><blockquote><p>击球前的挥拍到球拍击中球，拍杆有一个弯曲到复原的过程。这就关系到球拍的中杆硬度。</p></blockquote><blockquote><p>中杆硬度以 S 和 F 表示，S表示硬，F表示软，通常分为硬、中硬、适中、稍软、软五个等级。</p></blockquote><blockquote><p><strong>中杆越软弹性越好，杀球力量越足。中杆越硬，球力量越小，降低击球震动的传递，但挥拍速度更快，适合控制。</strong></p></blockquote><ul><li><p>如何挑选适合自己的？</p><p><strong>一般入门爱好者建议买软-适中的硬度的拍，更加容易适应</strong>。有一定水平的人群更容易驾驭较硬的中杆。</p></li></ul><h2 id="5-球拍材质"><a href="#5-球拍材质" class="headerlink" title="5.球拍材质"></a>5.球拍材质</h2><ul><li>球拍材质有哪些？</li></ul><blockquote><table><thead><tr><th>球拍类别</th><th>特性</th></tr></thead><tbody><tr><td>全碳素拍</td><td>重量较轻，价格较贵，更能使使用者的技术水平发挥出来。</td></tr><tr><td>铝碳一体拍</td><td>拍框为铝合金，拍杆为碳素纤维，采用“内三通”连接。拍框较重。</td></tr><tr><td>铝碳拍</td><td>拍框为铝合金，拍杆为碳素纤维，采用“外三通”连接。重量、价格适中。</td></tr><tr><td>铝合金拍</td><td>拍框铝合金，拍杆为铁管，采用“外三通”连接。</td></tr><tr><td>铝铁一体拍</td><td>拍框为铝合金，拍杆为铁管，采用“内三通”连接。</td></tr><tr><td>铁拍</td><td>拍框用铁材，拍杆为铁管，拍体较重，易变形。（超市拍，不推荐）</td></tr></tbody></table></blockquote><ul><li><p>如何挑选？</p><p>实体店挑选时拍杆和拍框上会分别标有制造材料，而网购页面一般也会标出其材质。</p><p>建议购买“全碳”“高碳”“碳”类别的拍。“铁拍”易变形，如果不希望打两次拍就变形的话请勿购买。</p></li></ul><hr><p>参考资料：</p><p><a href="https://www.maigoo.com/goomai/209239.html" target="_blank" rel="noopener">买购网</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-重量&quot;&gt;&lt;a href=&quot;#1-重量&quot; class=&quot;headerlink&quot; title=&quot;1. 重量&quot;&gt;&lt;/a&gt;1. 重量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;拍子重量是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;一般全碳羽毛球拍重量标识为2u、3u、4u，&lt;strong&gt;数字越大，拍子重量越轻。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="羽毛球" scheme="https://adgnn.github.io/tags/%E7%BE%BD%E6%AF%9B%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-存储器设计实验</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%AD%98%E5%82%A8%E5%99%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-存储器设计实验/</id>
    <published>2019-05-03T09:49:01.998Z</published>
    <updated>2019-05-04T10:59:59.482Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><p>掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法；学习在Vivado中使用Memory IP核生成存储器的方法；学习存储器的结构及读写原理，掌握存储器的设计方法。</p><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><p>实验vivado内置的IP核生成一个存储器，并写一个顶层模块验证。</p><a id="more"></a><h4 id="验证模块："><a href="#验证模块：" class="headerlink" title="验证模块："></a>验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ram(out,Write_Addr_swb,sw,Clk_swb,Write_swb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]sw;</span><br><span class="line"><span class="keyword">input</span> Write_Addr_swb; <span class="comment">//写地址按钮</span></span><br><span class="line"><span class="keyword">input</span> Clk_swb=<span class="number">0</span>;      <span class="comment">//时钟引脚</span></span><br><span class="line"><span class="keyword">input</span> Write_swb=<span class="number">0</span>;    <span class="comment">//写信号引脚</span></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] Mem_Addr; <span class="comment">//6个逻辑开关 当按钮1按下，32位开关中6位是读写存储器的地址</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data; <span class="comment">//32个逻辑开关 写操作时，当按钮2按下时，32位开关值是写入数据</span></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data;</span><br><span class="line"><span class="keyword">reg</span> Mem_Write; <span class="comment">//1个按钮 =1为写操作 =0为读操作</span></span><br><span class="line"><span class="keyword">reg</span> clka; <span class="comment">//时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RAM_B Data_RAM (</span><br><span class="line">  <span class="variable">.clka</span>(clka),    <span class="comment">// input wire clka</span></span><br><span class="line">  <span class="variable">.wea</span>(Mem_Write),      <span class="comment">// input wire [0 : 0] wea</span></span><br><span class="line">  <span class="variable">.addra</span>(Mem_Addr[<span class="number">6</span>:<span class="number">1</span>]),  <span class="comment">// input wire [5 : 0] addra</span></span><br><span class="line">  <span class="variable">.dina</span>(W_Data),    <span class="comment">// input wire [31 : 0] dina</span></span><br><span class="line">  <span class="variable">.douta</span>(R_Data)  <span class="comment">// output wire [31 : 0] douta</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    clka&lt;=Clk_swb;         <span class="comment">//时钟</span></span><br><span class="line">    Mem_Write&lt;=Write_swb;  <span class="comment">//写地址信号</span></span><br><span class="line">    <span class="keyword">if</span>(Write_Addr_swb)     <span class="comment">//写地址地址</span></span><br><span class="line">        Mem_Addr&lt;=sw[<span class="number">6</span>:<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span>(!Mem_Write &amp; clka)  <span class="comment">//读存储器</span></span><br><span class="line">        out&lt;=R_Data;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Mem_Write &amp; clka)   <span class="comment">//写存储器</span></span><br><span class="line">        W_Data&lt;=sw;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ram(out,Write_Addr_swb,sw,Clk_swb,Write_swb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]sw;</span><br><span class="line"><span class="keyword">input</span> Write_Addr_swb; <span class="comment">//写地址按钮</span></span><br><span class="line"><span class="keyword">input</span> Clk_swb=<span class="number">0</span>;      <span class="comment">//时钟引脚</span></span><br><span class="line"><span class="keyword">input</span> Write_swb=<span class="number">0</span>;    <span class="comment">//写信号引脚</span></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] Mem_Addr; <span class="comment">//6个逻辑开关 当按钮1按下，32位开关中6位是读写存储器的地址</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data; <span class="comment">//32个逻辑开关 写操作时，当按钮2按下时，32位开关值是写入数据</span></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data;</span><br><span class="line"><span class="keyword">reg</span> Mem_Write; <span class="comment">//1个按钮 =1为写操作 =0为读操作</span></span><br><span class="line"><span class="keyword">reg</span> clka; <span class="comment">//时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RAM_B Data_RAM (</span><br><span class="line">  <span class="variable">.clka</span>(clka),    <span class="comment">// input wire clka</span></span><br><span class="line">  <span class="variable">.wea</span>(Mem_Write),      <span class="comment">// input wire [0 : 0] wea</span></span><br><span class="line">  <span class="variable">.addra</span>(Mem_Addr[<span class="number">6</span>:<span class="number">1</span>]),  <span class="comment">// input wire [5 : 0] addra</span></span><br><span class="line">  <span class="variable">.dina</span>(W_Data),    <span class="comment">// input wire [31 : 0] dina</span></span><br><span class="line">  <span class="variable">.douta</span>(R_Data)  <span class="comment">// output wire [31 : 0] douta</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    clka&lt;=Clk_swb;         <span class="comment">//时钟</span></span><br><span class="line">    Mem_Write&lt;=Write_swb;  <span class="comment">//写地址信号</span></span><br><span class="line">    <span class="keyword">if</span>(Write_Addr_swb)     <span class="comment">//写地址地址</span></span><br><span class="line">        Mem_Addr&lt;=sw[<span class="number">6</span>:<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span>(!Mem_Write &amp; clka)  <span class="comment">//读存储器</span></span><br><span class="line">        out&lt;=R_Data;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Mem_Write &amp; clka)   <span class="comment">//写存储器</span></span><br><span class="line">        W_Data&lt;=sw;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENq0Z6.png" alt="写操作"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENqBdK.png" alt="读操作"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENqvwV.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>Vivado中IP核的生成和调用方法。更熟练地掌握了仿真调试的方法。在仿真中，使用for语句对16个存储器地址写入，然后读出，很好地验证了预期结果</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;p&gt;掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法；学习在Vivado中使用Memory IP核生成存储器的方法；学习存储器的结构及读写原理，掌握存储器的设计方法。&lt;/p&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;p&gt;实验vivado内置的IP核生成一个存储器，并写一个顶层模块验证。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-寄存器堆设计实验</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%AF%84%E5%AD%98%E5%99%A8%E5%A0%86%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-寄存器堆设计实验/</id>
    <published>2019-05-03T09:49:01.996Z</published>
    <updated>2019-05-04T11:00:19.979Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><ul><li><p>学习使用Verilog HDL语言进行时序电路的设计方法</p></li><li><p>掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法</p></li><li><p>学习寄存器堆的数据传送与读写工作原理，掌握寄存器堆的设计方法。</p></li></ul><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><ul><li>设计一个32*32位的寄存器堆（即含有32个寄存器，每个寄存器32位）</li><li>读访问操作：无需时钟同步，只要给出寄存器地址，即可读出寄存器中的数据。</li><li>写访问操作：需要时钟同步，所有写入操作的输入信号必须在时钟边沿来临时，已经有效（Write_Reg=1、地址和数据）。</li></ul><a id="more"></a><h4 id="寄存器模块："><a href="#寄存器模块：" class="headerlink" title="寄存器模块："></a>寄存器模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> RegFile(Clk,Clr,Write_Reg,R_Addr_A,</span><br><span class="line">                R_Addr_B,W_Addr,W_Data,R_Data_A,R_Data_B);</span><br><span class="line">    <span class="keyword">input</span> Clk;  <span class="comment">//时钟信号</span></span><br><span class="line">    <span class="keyword">input</span> Clr;  <span class="comment">//清零信号</span></span><br><span class="line">    <span class="keyword">input</span> Write_Reg; <span class="comment">//写控制信号</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]R_Addr_A; <span class="comment">//A端口读寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]R_Addr_B; <span class="comment">//B端口读寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]W_Addr;   <span class="comment">//写寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]W_Data;  <span class="comment">//写入数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">output</span> [<span class="number">32</span>:<span class="number">1</span>]R_Data_A; <span class="comment">//A端口读出数据</span></span><br><span class="line">    <span class="keyword">output</span> [<span class="number">32</span>:<span class="number">1</span>]R_Data_B; <span class="comment">//B端口读出数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>]Reg_Files[<span class="number">31</span>:<span class="number">0</span>]; <span class="comment">//寄存器堆</span></span><br><span class="line">    <span class="keyword">integer</span> i; <span class="comment">//遍历</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">initial</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">32</span>;i=i+<span class="number">1</span>) Reg_Files[i]&lt;=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">always</span>@(<span class="keyword">posedge</span> Clk <span class="keyword">or</span> <span class="keyword">posedge</span> Clr)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(Clr)<span class="comment">//检测清零</span></span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">32</span>;i=i+<span class="number">1</span>) Reg_Files[i]&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//检测写控制，高电平则写入寄存器</span></span><br><span class="line">            <span class="keyword">if</span>(Write_Reg) Reg_Files[W_Addr]&lt;=W_Data;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">assign</span> R_Data_A=Reg_Files[R_Addr_A];</span><br><span class="line">    <span class="keyword">assign</span> R_Data_B=Reg_Files[R_Addr_B];</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="顶层验证模块："><a href="#顶层验证模块：" class="headerlink" title="顶层验证模块："></a>顶层验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> registers(sw,button,out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out=<span class="number">32'hzzzz_zzzz</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> Clk=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Clr=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Write_Reg=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_A=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_B=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] W_Addr=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data=<span class="number">32'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] Reg_Files[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_A;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_B;</span><br><span class="line">    </span><br><span class="line">    RegFile RF(</span><br><span class="line">        <span class="variable">.Clk</span>(Clk),</span><br><span class="line">        <span class="variable">.Clr</span>(Clr),</span><br><span class="line">        <span class="variable">.Write_Reg</span>(Write_Reg),</span><br><span class="line">        <span class="variable">.R_Addr_A</span>(sw[<span class="number">32</span>:<span class="number">28</span>]),</span><br><span class="line">        <span class="variable">.R_Addr_B</span>(sw[<span class="number">27</span>:<span class="number">23</span>]),</span><br><span class="line">        <span class="variable">.W_Addr</span>(W_Addr),</span><br><span class="line">        <span class="variable">.W_Data</span>(W_Data),</span><br><span class="line">        <span class="variable">.R_Data_A</span>(R_Data_A),</span><br><span class="line">        <span class="variable">.R_Data_B</span>(R_Data_B));</span><br><span class="line">        </span><br><span class="line">     <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(button)</span><br><span class="line">            <span class="number">6'b100000</span>: <span class="keyword">begin</span> W_Addr&lt;=sw[<span class="number">5</span>:<span class="number">1</span>]; <span class="keyword">end</span> <span class="comment">//输入低5位为寄存器地址</span></span><br><span class="line">            <span class="number">6'b010000</span>: <span class="keyword">begin</span> W_Data&lt;=sw; <span class="keyword">end</span>      <span class="comment">//输入寄存器内容</span></span><br><span class="line">            <span class="number">6'b001000</span>: <span class="keyword">begin</span> Write_Reg&lt;=sw[<span class="number">1</span>]; <span class="keyword">end</span><span class="comment">//提供Write_Reg信号，=1写操作</span></span><br><span class="line">            <span class="number">6'b000100</span>: <span class="keyword">begin</span> Clr&lt;=button[<span class="number">3</span>]; <span class="keyword">end</span>      <span class="comment">//提供Reset</span></span><br><span class="line">            <span class="number">6'b000010</span>: <span class="keyword">begin</span> </span><br><span class="line">                       <span class="keyword">if</span>(sw[<span class="number">1</span>])</span><br><span class="line">                           out&lt;=R_Data_A;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           out&lt;=R_Data_B;</span><br><span class="line">                       <span class="keyword">end</span>  <span class="comment">//读A/B端口选择</span></span><br><span class="line">            <span class="number">6'b000000</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">6'b000001</span>: <span class="keyword">begin</span> Clk&lt;=button[<span class="number">1</span>]; <span class="keyword">end</span>     <span class="comment">//提供Clk信号</span></span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> registers(sw,button,out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out=<span class="number">32'hzzzz_zzzz</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> Clk=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Clr=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Write_Reg=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_A=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_B=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] W_Addr=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data=<span class="number">32'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] Reg_Files[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_A;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_B;</span><br><span class="line">    </span><br><span class="line">    RegFile RF(</span><br><span class="line">        <span class="variable">.Clk</span>(Clk),</span><br><span class="line">        <span class="variable">.Clr</span>(Clr),</span><br><span class="line">        <span class="variable">.Write_Reg</span>(Write_Reg),</span><br><span class="line">        <span class="variable">.R_Addr_A</span>(sw[<span class="number">32</span>:<span class="number">28</span>]),</span><br><span class="line">        <span class="variable">.R_Addr_B</span>(sw[<span class="number">27</span>:<span class="number">23</span>]),</span><br><span class="line">        <span class="variable">.W_Addr</span>(W_Addr),</span><br><span class="line">        <span class="variable">.W_Data</span>(W_Data),</span><br><span class="line">        <span class="variable">.R_Data_A</span>(R_Data_A),</span><br><span class="line">        <span class="variable">.R_Data_B</span>(R_Data_B));</span><br><span class="line">        </span><br><span class="line">     <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(button)</span><br><span class="line">            <span class="number">6'b100000</span>: <span class="keyword">begin</span> W_Addr&lt;=sw[<span class="number">5</span>:<span class="number">1</span>]; <span class="keyword">end</span> <span class="comment">//输入低5位为寄存器地址</span></span><br><span class="line">            <span class="number">6'b010000</span>: <span class="keyword">begin</span> W_Data&lt;=sw; <span class="keyword">end</span>      <span class="comment">//输入寄存器内容</span></span><br><span class="line">            <span class="number">6'b001000</span>: <span class="keyword">begin</span> Write_Reg&lt;=sw[<span class="number">1</span>]; <span class="keyword">end</span><span class="comment">//提供Write_Reg信号，=1写操作</span></span><br><span class="line">            <span class="number">6'b000100</span>: <span class="keyword">begin</span> Clr&lt;=button[<span class="number">3</span>]; <span class="keyword">end</span>      <span class="comment">//提供Reset</span></span><br><span class="line">            <span class="number">6'b000010</span>: <span class="keyword">begin</span> </span><br><span class="line">                       <span class="keyword">if</span>(sw[<span class="number">1</span>])</span><br><span class="line">                           out&lt;=R_Data_A;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           out&lt;=R_Data_B;</span><br><span class="line">                       <span class="keyword">end</span>  <span class="comment">//读A/B端口选择</span></span><br><span class="line">            <span class="number">6'b000000</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">6'b000001</span>: <span class="keyword">begin</span> Clk&lt;=button[<span class="number">1</span>]; <span class="keyword">end</span>     <span class="comment">//提供Clk信号</span></span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENbLVK.png" alt="波形图"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENbOUO.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>寄存器堆设计和之前的ALU设计有一定的相似之处，如都是顶层+本体的设计方法，顶层控制着外部的输入输出，并将值传递到本体模块进行具体计算。</p><p>具体代码实现过程中，利用always语句块和assign语句来区分时序和非时序逻辑电路（写和读）。仿真过程遇到了点问题，最后一步本意为输出B读端口（ffff_ffff），结果输出为0，但上板后没有问题。 </p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学习使用Verilog HDL语言进行时序电路的设计方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学习寄存器堆的数据传送与读写工作原理，掌握寄存器堆的设计方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;设计一个32*32位的寄存器堆（即含有32个寄存器，每个寄存器32位）&lt;/li&gt;
&lt;li&gt;读访问操作：无需时钟同步，只要给出寄存器地址，即可读出寄存器中的数据。&lt;/li&gt;
&lt;li&gt;写访问操作：需要时钟同步，所有写入操作的输入信号必须在时钟边沿来临时，已经有效（Write_Reg=1、地址和数据）。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-多功能ALU设计</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%A4%9A%E5%8A%9F%E8%83%BDALU%E8%AE%BE%E8%AE%A1/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-多功能ALU设计/</id>
    <published>2019-05-03T09:49:01.994Z</published>
    <updated>2019-05-04T11:00:12.205Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><ol><li><p>学习多功能ALU的工作原理，掌握运算器的设计方法。</p></li><li><p>掌握运用Verilog HDL语言进行行为描述与建模的技巧和方法。</p></li></ol><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><ol><li>设计一个具有8种运算功能的32位ALU，并能够产生运算结果的标志：结果为零标志ZF，溢出标志OF。</li><li>编写顶层模块，用于验证模块的正确性。</li></ol><a id="more"></a><h4 id="ALU模块："><a href="#ALU模块：" class="headerlink" title="ALU模块："></a>ALU模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ALU1(A,B,F,ALU_OP,OF,ZF);</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] A;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] B;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">1</span>] ALU_OP;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] F;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> ZF,OF;</span><br><span class="line">    <span class="keyword">reg</span> C;</span><br><span class="line">    <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(ALU_OP)</span><br><span class="line">            <span class="number">4'b0</span>: <span class="keyword">begin</span> F&lt;=A&amp;B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b1</span>: <span class="keyword">begin</span> F&lt;=A|B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b10</span>:<span class="keyword">begin</span> F&lt;=A^B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b11</span>:<span class="keyword">begin</span> F&lt;=~(A|B); OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b100</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A+B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b101</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A-B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b110</span>:<span class="keyword">begin</span></span><br><span class="line">                       <span class="keyword">if</span>(A&lt;B)</span><br><span class="line">                           F&lt;=<span class="number">1</span>;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           F&lt;=<span class="number">0</span>;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b111</span>:<span class="keyword">begin</span> F&lt;=B&lt;&lt;A; OF&lt;=<span class="number">1</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">begin</span> F&lt;=<span class="number">32'hzzzz_zzzz</span>; OF&lt;=<span class="number">1'bz</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">if</span>(F==<span class="number">0</span>)</span><br><span class="line">            ZF&lt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ZF&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="顶层验证模块："><a href="#顶层验证模块：" class="headerlink" title="顶层验证模块："></a>顶层验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ALU1(A,B,F,ALU_OP,OF,ZF);</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] A;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] B;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">1</span>] ALU_OP;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] F;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> ZF,OF;</span><br><span class="line">    <span class="keyword">reg</span> C;</span><br><span class="line">    <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(ALU_OP)</span><br><span class="line">            <span class="number">4'b0</span>: <span class="keyword">begin</span> F&lt;=A&amp;B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b1</span>: <span class="keyword">begin</span> F&lt;=A|B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b10</span>:<span class="keyword">begin</span> F&lt;=A^B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b11</span>:<span class="keyword">begin</span> F&lt;=~(A|B); OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b100</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A+B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b101</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A-B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b110</span>:<span class="keyword">begin</span></span><br><span class="line">                       <span class="keyword">if</span>(A&lt;B)</span><br><span class="line">                           F&lt;=<span class="number">1</span>;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           F&lt;=<span class="number">0</span>;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b111</span>:<span class="keyword">begin</span> F&lt;=B&lt;&lt;A; OF&lt;=<span class="number">1</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">begin</span> F&lt;=<span class="number">32'hzzzz_zzzz</span>; OF&lt;=<span class="number">1'bz</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">if</span>(F==<span class="number">0</span>)</span><br><span class="line">            ZF&lt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ZF&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"><span class="keyword">module</span> test;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line">    </span><br><span class="line">    alu uut(</span><br><span class="line">        <span class="variable">.sw</span>(sw),</span><br><span class="line">        <span class="variable">.button</span>(button),</span><br><span class="line">        <span class="variable">.out</span>(out)</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">initial</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        sw = <span class="number">0</span>;</span><br><span class="line">        button = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        #<span class="number">100</span>;</span><br><span class="line">        <span class="comment">//input A</span></span><br><span class="line">        sw = <span class="number">32'h1234_5678</span>;</span><br><span class="line">        button = <span class="number">6'b100000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="comment">//input B</span></span><br><span class="line">        sw = <span class="number">32'h1111_2222</span>;</span><br><span class="line">        button = <span class="number">6'b010000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="comment">//and</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h0</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//or</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h1</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//xor</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h2</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//nor</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h3</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//add</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h4</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//sub</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h5</span>;</span><br><span class="line">        button=<span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//slt</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h6</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//sll</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h7</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENbnHK.png" alt="仿真波形图"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENb19H.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>实验过程中，我发现自己对Verilog HDL语言的熟悉程度不够。特别是对阻塞赋值与非阻塞赋值的思想没有理解透彻，导致程序在调试过程中不断出现BUG，难以表达应有的逻辑思想。编程没有充分体现电路本身的特征，仍然是用C语言等高级程序设计语言的思想来编程。</p><p>总体来说，本实验较为基础，不困难。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学习多功能ALU的工作原理，掌握运算器的设计方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;掌握运用Verilog HDL语言进行行为描述与建模的技巧和方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;设计一个具有8种运算功能的32位ALU，并能够产生运算结果的标志：结果为零标志ZF，溢出标志OF。&lt;/li&gt;
&lt;li&gt;编写顶层模块，用于验证模块的正确性。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
</feed>
