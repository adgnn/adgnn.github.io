<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>adgnn&#39;s Blog</title>
  
  <subtitle>...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://adgnn.github.io/"/>
  <updated>2019-05-05T13:21:29.710Z</updated>
  <id>https://adgnn.github.io/</id>
  
  <author>
    <name>adgnn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每周新知1期</title>
    <link href="https://adgnn.github.io/2019/05/05/2019-5-5-%E6%9C%AC%E5%91%A8%E6%96%B0%E7%9F%A51/"/>
    <id>https://adgnn.github.io/2019/05/05/2019-5-5-本周新知1/</id>
    <published>2019-05-05T12:39:00.000Z</published>
    <updated>2019-05-05T13:21:29.710Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录过去一周，我看到的值得分享的东西。</p><p>别忘了订阅本博客：<a href="https://adgnn.github.io/atom.xml">右键复制链接到RSS阅读器</a></p><a id="more"></a><h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><ol><li><p><a href="https://daily.zhihu.com/story/9710830" target="_blank" rel="noopener">单喝牛奶和茶不胖，为什么喝奶茶就容易发胖？</a></p><p>为奶茶正名，区分“油茶”和“奶茶”。真正的“奶”+“茶”是不会对健康有害的。</p></li><li><p><a href="https://daily.zhihu.com/story/9710906" target="_blank" rel="noopener">地铁防火，各国是怎么做的？</a></p><p>我国的地铁防火分【设备】和【机制】。设备：各种灭火设备以及火灾警报，机制：各系统联动监控，提供信息给工作人员做人员疏散、列车进站指挥。</p></li><li><p><a href="https://www.zhihu.com/question/320197373/answer/669301582" target="_blank" rel="noopener">汽车销售有哪些行业【潜规则】或者【黑幕】？</a></p><p>销售车辆信息延迟录入；附加费用……</p></li><li><p><a href="https://daily.zhihu.com/story/9710834" target="_blank" rel="noopener">孩子为什么不喜欢去上学？</a></p><p>大多数情况下，孩子对你说 “我不想去上学”，都不仅仅是想要表达这几个字字面上的那个意思。“不想去上学” 是一种态度，一种蛛丝马迹，流露出的，更可能是你的小孩对什么不满意，或者是什么事情上需要帮助，他们别无他法，只好借助这件大人最看重的事情发难，表达自己内心的无助和真正的诉求。</p></li><li><p><a href="https://www.zhihu.com/question/19580096" target="_blank" rel="noopener">必读的RSS订阅源</a></p></li></ol><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><ol><li><p>如何打造一个品牌？</p><blockquote><p>不被消费者优先选择的，不叫品牌，叫商标。</p></blockquote><ul><li><p>品牌是一个装载消费者“了解、信任、偏好”的容器。</p><ul><li><p>建立“品牌容器”的三种方法：</p><ul><li><p>从产品中抽取“品类”：<code>产品和别人的不能是一类</code></p></li><li><p>注入“品位”价值：<code>品牌故事，设计模式，同伴认可</code></p></li><li><p>注入“品质”价值：<code>产品的根本，是品质的保证</code></p></li></ul></li></ul></li></ul></li><li><p>从政治家干预经济看到环境的力量</p><blockquote><p>在政治领域，一件事情之所以发生，不在于这件事本身在逻辑上是对的，而在于身处其中的政治家被形势裹挟着，或主动或被动地作了很多选择。但这些选择的政治后果，往往是身处其中的人们无法预见的。</p></blockquote><p>环境可以解释特朗普的言论，可以解释胡佛总统在大萧条时期所做的对经济的干预政策。</p></li><li><p>给提建议是一种权力</p><blockquote><p>每个人都喜欢给人提建议，提建议是一种心理需求。人们提建议并不仅仅是为了对方好，也是为了让自己获得权力感。</p></blockquote><p>提建议是一种权力，这可以解释为什么有时候你不喜欢别人给你提建议，也可以解释为什么你给别人提建议时别人可能会反感。</p><p>如果你想向某个人示好，你可以向他寻求建议。</p><p>如果你想向别人提建议，请考虑他人的感受。</p></li><li><p>所罗门悖论</p><blockquote><p>你这么聪明的人物，能整天给别人提建议，但是自己的生活却搞不好。</p><p>读了那么多书，却依然过不好这一生。</p></blockquote><p>要解决这个问题，必须提高“智慧”。“智慧”和“智商”是两回事，有智慧的人智商不一定高，也就是不一定很会解数学题。而有智慧是指处事能力和决策能力强。智识上的谦逊，换位思考，善于达成妥协是智慧的表现。</p><p>智慧很难学，但不是没有希望。</p><p>你喜欢给别人提建议，不妨把自己身上发生的事想象成别人身上发生的事，这样你就可以和向别人提建议一样给自己提建议了。这是在角色上作区分。</p><p>你还可以把眼前发生的事想象成一个一年前发生的事，制造时间上的距离感。这和“马后炮”有些类似。</p><p>你还可以把自己想象成一个老师，把要在这件事情过生日打交道的对方想象成一个小孩子。在这种不对等的关系中，你往往能表现得更好。</p></li><li><p>可扩展性</p><p>真正赚钱的行业是可扩展性强的行业。可扩展性指一次劳动可以服务成千上万的人。理发师的工作一次只能服务少数几个人，不具有可扩展性；作家写一本书可以让无数的人看到，这就是可扩展性。</p><p>可扩展性让传播的边际成本趋近于零，同时又能得到更多的流量。这就是可扩展性带来的好处。</p></li></ol><h1 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h1><ol><li><a href="https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png" target="_blank" rel="noopener">微信更新，新增“朋友圈仅一个月可见”</a></li><li><p><a href="[https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png?imageMogr2/auto-orient/format/jpeg/thumbnail/400x2000%3E/quality/70/interlace/1](https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png?imageMogr2/auto-orient/format/jpeg/thumbnail/400x2000&gt;/quality/70/interlace/1">本式港澳通行证即将失效，需更换卡式通行证</a>)</p></li><li><p>珠海市国资委入股魅族</p></li><li><a href="https://cdn.ruguoapp.com/FjGvhNkNKfk8qJWvjzZs_gIOzyx_.png" target="_blank" rel="noopener">今年第一季度全球芯片销量增速创35年新低</a></li><li><a href="https://new.qq.com/omn/20190502/20190502A08OGE00" target="_blank" rel="noopener">特斯拉上海超级工厂220kV变电站已开建 工期半年</a></li><li><a href="https://new.qq.com/omn/20190502/20190502A06OX6.html" target="_blank" rel="noopener">美国佛州通过教师配枪法案</a></li><li><a href="https://new.qq.com/omn/20190501/20190501A0A3D2.html" target="_blank" rel="noopener">全球最大比特币交易所被查</a></li></ol><h1 id="冷知识"><a href="#冷知识" class="headerlink" title="冷知识"></a>冷知识</h1><ol><li>为了象征清洁，医生的工作服是白色的。但手术间的衣服是蓝绿色的，因为是手术室环境下，长时间注视红色的血液组织，视网膜会留下残影，再看白色会产生绿色的影子，影响医生的视线。</li></ol><h1 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/26514613" target="_blank" rel="noopener">最优化问题的KTT条件</a></li></ol><hr><p>本周新知第1期至此结束~~撒花</p><p>后期内容会更丰富，更完善</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录过去一周，我看到的值得分享的东西。&lt;/p&gt;
&lt;p&gt;别忘了订阅本博客：&lt;a href=&quot;https://adgnn.github.io/atom.xml&quot;&gt;右键复制链接到RSS阅读器&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="新知" scheme="https://adgnn.github.io/tags/%E6%96%B0%E7%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>小米9安装谷歌相机教程</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-4-%E5%B0%8F%E7%B1%B39%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-4-小米9安装谷歌相机教程/</id>
    <published>2019-05-04T15:00:00.000Z</published>
    <updated>2019-05-05T13:41:21.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>小米9自带相机虽然有很多功能，但基本照相功能在HDR开启以及暗光模式下的表示却不尽如人意。</p><p>谷歌的Pixel系列虽然一直都是单镜头，却凭借着谷歌相机优秀的HDR+算法在手机相机测评得分中名列前茅。</p><p>关于HDR+算法，网上有很多介绍它的文章，本篇就不作原理介绍了。我们只需要知道，HDR+算法可以提升画质，改进照片暗部细节，以及极大地提升暗光环境下的照片质量。</p><p>因为谷歌相机优秀的算法，许多大神都有做对各大机型适配的移植版本的谷歌相机。</p><p><strong>如果你正在使用小米9，并想尝试谷歌相机的话，请跟着本文的步骤操作</strong></p><p><strong>如果你使用的是其他型号的手机，请翻到文章最后</strong></p><a id="more"></a><h1 id="1-安装小米9对应移植的谷歌相机"><a href="#1-安装小米9对应移植的谷歌相机" class="headerlink" title="1.安装小米9对应移植的谷歌相机"></a>1.安装小米9对应移植的谷歌相机</h1><ol><li>打开<a href="https://www.celsoazevedo.com/files/android/google-camera/dev-xtrme/#apk797" target="_blank" rel="noopener">Google Camera Port</a></li><li>点击列表的第一个（截至2019-5-4，最新版本是<code>MGC_6_1_021_xcam6_beta3.apk</code>，就可以下载对应的apk文件了<img src="https://s2.ax1x.com/2019/05/04/EdQZse.png" alt="图1"></li></ol><ul><li>懒人链接：<a href="https://f.celsoazevedo.com/file/gcamera/MGC_6_1_021_xcam6_beta3.apk" target="_blank" rel="noopener">MGC_6_1_021_xcam6_beta3.apk</a></li></ul><ol start="3"><li><p>将APK文件发到小米9上（如果直接使用小米9下载，跳动本步）</p></li><li><p>安装APK文件</p></li></ol><h1 id="2-配置你的谷歌相机"><a href="#2-配置你的谷歌相机" class="headerlink" title="2. 配置你的谷歌相机"></a>2. 配置你的谷歌相机</h1><h2 id="2-1-下载配置文件"><a href="#2-1-下载配置文件" class="headerlink" title="2.1 下载配置文件"></a>2.1 下载配置文件</h2><ol><li>在刚才的<a href="https://www.celsoazevedo.com/files/android/google-camera/dev-xtrme/#apk797" target="_blank" rel="noopener">Google Camera Port</a>页面点击下载文件右边对应的<a href="https://www.celsoazevedo.com/files/android/google-camera/f/changelog407/" target="_blank" rel="noopener">changelog</a><img src="https://s2.ax1x.com/2019/05/04/EdQVMD.png" alt="图2"></li><li><p>打开的页面中找到如下图<img src="https://s2.ax1x.com/2019/05/04/EdQUds.png" alt="图3"></p></li><li><p>随便点击一个（推荐<code>P3XL</code>）</p></li></ol><ul><li>懒人链接：<a href="https://www.celsoazevedo.com/files/android/f/download/Marian---XLib2.2s---P3XL---Test4.xml" target="_blank" rel="noopener">Marian—Xlib2.2s—P3XL—Test4.xml</a></li></ul><ol start="3"><li>下载后进入小米9<code>文件管理</code>APP</li><li>进入<code>手机</code>分栏<img src="https://s2.ax1x.com/2019/05/04/EdlINn.png" alt="图4"></li><li>在上方搜索框输入<code>xml</code><img src="https://s2.ax1x.com/2019/05/04/EdlXB4.png" alt="图5"></li><li>长按刚才下载的<code>Marian---XLib2.2s---P3XL---Test4.xml</code>，<code>更多</code>，<code>复制</code><img src="https://s2.ax1x.com/2019/05/04/Ed1S41.png" alt="图6"></li><li>选择目录<code>内部存储设备</code>，找到<code>GCam</code>文件夹（如果没有则自己新建一个同名文件夹），打开<code>Configs</code>文件夹。</li><li>点击<code>粘贴</code>按钮<img src="https://s2.ax1x.com/2019/05/04/Ed1ijO.png" alt="图8"></li></ol><h2 id="2-2-使配置文件生效"><a href="#2-2-使配置文件生效" class="headerlink" title="2.2 使配置文件生效"></a>2.2 使配置文件生效</h2><ol><li>打开谷歌相机APP</li><li>双击相机界面底部黑色部分</li><li>在<code>Choose config</code>下面选择<code>Marian---Xlib2.2s---N6P---Test4.xml</code>，点击<code>RESTORE</code>，自此配置文件已经导入到谷歌相机里了.<img src="https://s2.ax1x.com/2019/05/04/Ed1kuD.png" alt></li><li>导入后我们还要进一步设置，使其符合自己的习惯。参考本人的设置：</li></ol><p><img src="https://s2.ax1x.com/2019/05/04/Ed1c5R.png" alt="设置1"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1fxK.png" alt="设置2"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1Iqe.png" alt="设置3"></p><p><img src="https://s2.ax1x.com/2019/05/04/Ed1xsS.png" alt="设置4"></p><h1 id="3-使用技巧"><a href="#3-使用技巧" class="headerlink" title="3. 使用技巧"></a>3. 使用技巧</h1><ol><li>长按切换摄像头按钮切换到长焦或广角镜头</li></ol><ul><li>长焦：设置里关闭<code>Use 3rd back lens</code></li><li>广角：设置里开启<code>Use 3rd back lens</code></li></ul><h1 id="4-最后的话"><a href="#4-最后的话" class="headerlink" title="4. 最后的话"></a>4. 最后的话</h1><p>对于非小米9手机，只有使用高通处理器的手机才有可能使用谷歌相机。</p><p>非小米9高通处理器手机请在<a href="https://www.celsoazevedo.com/files/android/google-camera/" target="_blank" rel="noopener">这个网址</a>寻找适合自己手机的型号的对应谷歌相机移植版本。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;小米9自带相机虽然有很多功能，但基本照相功能在HDR开启以及暗光模式下的表示却不尽如人意。&lt;/p&gt;
&lt;p&gt;谷歌的Pixel系列虽然一直都是单镜头，却凭借着谷歌相机优秀的HDR+算法在手机相机测评得分中名列前茅。&lt;/p&gt;
&lt;p&gt;关于HDR+算法，网上有很多介绍它的文章，本篇就不作原理介绍了。我们只需要知道，HDR+算法可以提升画质，改进照片暗部细节，以及极大地提升暗光环境下的照片质量。&lt;/p&gt;
&lt;p&gt;因为谷歌相机优秀的算法，许多大神都有做对各大机型适配的移植版本的谷歌相机。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你正在使用小米9，并想尝试谷歌相机的话，请跟着本文的步骤操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你使用的是其他型号的手机，请翻到文章最后&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="小米9" scheme="https://adgnn.github.io/tags/%E5%B0%8F%E7%B1%B39/"/>
    
      <category term="Mi9" scheme="https://adgnn.github.io/tags/Mi9/"/>
    
      <category term="谷歌相机" scheme="https://adgnn.github.io/tags/%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA/"/>
    
      <category term="摄影" scheme="https://adgnn.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>WIN下从零搭建个人博客</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-3-WIN%E4%B8%8B%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-3-WIN下从零搭建个人博客/</id>
    <published>2019-05-04T10:51:01.055Z</published>
    <updated>2019-05-04T10:39:36.712Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>耗时两天搭建了一个个人博客：<a href="https://adgnn.github.io">adgnn的个人博客</a></p><p>本博客是搭建在github page上的，没有购买个人域名，所以不需要花钱就可以搭建一个属于自己的博客。</p><p><strong>本博客仅说明WINDOWS环境下的博客搭建</strong></p><a id="more"></a><h2 id="2-准备-需要下载的工具"><a href="#2-准备-需要下载的工具" class="headerlink" title="2. 准备 - 需要下载的工具"></a>2. 准备 - 需要下载的工具</h2><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git</a> （官网点击Download即可下载，安装完后就可以使用Git Bash命令行工具进行操作。）</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">NodeJS</a> (LTS栏里点击Windows即可下载)</p><p>VPN（最好在能够访问外网的情况下安装，可忽略）</p><p>notepad++（更好的文本/代码编辑软件，可忽略）</p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><ol><li><p>在某个地方<mark>创建一个文件夹</mark>（如G:\myblog\）（名字随意）</p></li><li><p><mark>右键</mark>这个文件夹，选择<mark>Git Bash Here</mark></p></li><li><p>在打开的命令行窗口内输入命令<mark>安装hexo</mark></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="4"><li><mark>初始化hexo</mark>于myblog文件夹</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><ul><li>myblog自己想取什么名字都行</li></ul><ol start="5"><li><mark>安装</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><h2 id="4-Github创建个人仓库"><a href="#4-Github创建个人仓库" class="headerlink" title="4. Github创建个人仓库"></a>4. Github创建个人仓库</h2><p>网站链接：<a href="https://github.com" target="_blank" rel="noopener">Github</a></p><ol><li><mark>注册Github帐号</mark>（记住你的用户名和注册用的邮箱，之后要用）</li><li>登录</li><li>点击<mark>New repository</mark><img src="https://s2.ax1x.com/2019/05/03/EUWoVJ.png" alt="1556889333979"></li><li>创建一个和自己用户名相同的仓库，即<mark>用户名.github.io</mark> （如本人用户名是adgnn，则创建名为adgnn.github.io的仓库）</li><li>点<mark>Create repository</mark></li></ol><h2 id="5-生成SSH并添加到Github"><a href="#5-生成SSH并添加到Github" class="headerlink" title="5. 生成SSH并添加到Github"></a>5. 生成SSH并添加到Github</h2><blockquote><p>SSH是你电脑Git和Github连接的钥匙，请按如下步骤配置。</p></blockquote><ol><li>回到Git Bash窗口，<mark>输入代码表示你的用户名和注册邮箱</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><ul><li>双引号””中的yourname替换成你的用户名</li><li>双引号””中的youremail替换成你的注册邮箱</li></ul><ol start="2"><li><mark>创建SSH</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><ul><li>双引号””中的youremail替换成你的注册邮箱</li><li><p>之后弹出的信息不需要输入任何东西，<mark>一直回车直到命令执行完毕。</mark></p></li><li><p>执行完毕后，<mark>在命令行窗口里找到.ssh的文件夹，打开“此电脑”（或资源管理器），输入这个地址，回车</mark><img src="https://s2.ax1x.com/2019/05/03/EUfMin.png" alt="1556889824319"></p></li></ul><ol start="3"><li><p>用<mark>记事本打开id_rsa.pub备用</mark></p></li><li><p>打开Github网页，<mark>点右上角自己的头像—settings—找到SSH设置选项，点击New SSH Key，把你的<em>id_rsa.pub</em>的信息复制进去<img src="https://s2.ax1x.com/2019/05/03/EUfWFA.png" alt="1556890027211"></mark></p></li><li>在Git Bash检查是否成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="6-安装主题文件"><a href="#6-安装主题文件" class="headerlink" title="6. 安装主题文件"></a>6. 安装主题文件</h2><blockquote><p>本人的博客使用的主题是<em>Yilia</em>，简洁清新，功能实用。本篇以Yilia的安装为例。</p></blockquote><ol><li>Git Bash输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><ul><li>这个命令的功能是将github上的yilia项目clone（克隆）到你的themes目录下面</li><li><mark>如果你觉得Git Bash的下载太慢，可以<a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">点这里</a> 打开项目页面, 点击<em>Clone or download</em> ，<em>Download ZIP</em>，将下载好的ZIP文件里的<em>hexo-theme-yilia-master</em>文件夹解压到\myblog\themes\下，并改名为<em>yilia</em>。</mark></li></ul><h2 id="7-配置-config-yml"><a href="#7-配置-config-yml" class="headerlink" title="7. 配置_config.yml"></a>7. 配置_config.yml</h2><blockquote><p>安装好主题文件后，我们的myblog目录下一共会有两个_config.yml</p><p>一个在\myblog\下，另一个在\myblog\themes\yilia\下</p><p>为了避免混淆，将前者称为<mark>全局配置文件</mark>，后者称为<mark>主题配置文件</mark>。</p></blockquote><blockquote><p>我们绝大部分自定义内容都是在_config.yml里修改的。</p></blockquote><ol><li><mark>用记事本分别打开<em>全局配置文件</em>和<em>主题配置文件</em></mark></li><li><mark>下面是我的<em>全局配置文件</em>，请参考我的配置文件对自己的配置文件修改。</mark>（可参考<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">官方说明</a>）（请将所有和本作者有关的内容照例改成自己的）</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">adgnn的个人博客</span></span><br><span class="line"><span class="attr">subtitle:</span> </span><br><span class="line"><span class="attr">description:</span> <span class="string">adgnn的个人博客</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">blog,</span> <span class="string">博客</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">adgnn</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://adgnn.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-json-content</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">yilia</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/adgnn/adgnn.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JsonContent</span></span><br><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">  meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ol start="3"><li><mark>下面是我的<em>主题配置文件</em>，请参考并修改自己的配置文件。</mark></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives/index.html</span></span><br><span class="line"><span class="comment">#  Blogger: https://adgnn.github.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SubNav</span></span><br><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"https://github.com/adgnn"</span></span><br><span class="line">  <span class="comment">#weibo: "#"</span></span><br><span class="line"><span class="attr">  rss:</span> <span class="string">"/atom.xml"</span></span><br><span class="line">  <span class="comment">#zhihu: "#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#segmentfault: "#"</span></span><br><span class="line">  <span class="comment">#bilibili: "#"</span></span><br><span class="line">  <span class="comment">#acfun: "#"</span></span><br><span class="line">  <span class="comment">#mail: "mailto:litten225@qq.com"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否需要修改 root 路径</span></span><br><span class="line"><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class="line"><span class="comment"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">more</span></span><br><span class="line"><span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class="line"><span class="attr">show_all_link:</span> <span class="string">'展开全文'</span></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否在新窗口打开链接</span></span><br><span class="line"><span class="attr">open_in_new:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> </span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录</span></span><br><span class="line"><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class="line"><span class="attr">toc_hide_index:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 目录为空时的提示</span></span><br><span class="line"><span class="attr">toc_empty_wording:</span> <span class="string">'目录，不存在的…'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否有快速回到顶部的按钮</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">'3224e7c6943d5a59748736b64c978518'</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">favicon:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#你的头像url</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/img/portrait.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启分享</span></span><br><span class="line"><span class="attr">share_jia:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span></span><br><span class="line"><span class="comment">#不需要使用某项，直接设置值为false，或注释掉</span></span><br><span class="line"><span class="comment">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1、多说</span></span><br><span class="line"><span class="attr">duoshuo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2、网易云跟帖</span></span><br><span class="line"><span class="attr">wangyiyun:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、畅言</span></span><br><span class="line"><span class="attr">changyan_appid:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5、Gitment</span></span><br><span class="line"><span class="attr">gitment_owner:</span> <span class="literal">false</span>      <span class="comment">#你的 GitHub ID</span></span><br><span class="line"><span class="attr">gitment_repo:</span> <span class="string">''</span>          <span class="comment">#存储评论的 repo</span></span><br><span class="line"><span class="attr">gitment_oauth:</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">''</span>           <span class="comment">#client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">''</span>       <span class="comment">#client secret</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="comment"># 头像上面的背景颜色</span></span><br><span class="line"><span class="attr">  header:</span> <span class="string">'#4d4d4d'</span></span><br><span class="line">  <span class="comment"># 右滑板块背景</span></span><br><span class="line"><span class="attr">  slider:</span> <span class="string">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># slider的设置</span></span><br><span class="line"><span class="attr">slider:</span></span><br><span class="line">  <span class="comment"># 是否默认展开tags板块</span></span><br><span class="line"><span class="attr">  showTags:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能菜单</span></span><br><span class="line"><span class="comment"># 如不需要，将该对应项置为false</span></span><br><span class="line"><span class="comment"># 比如</span></span><br><span class="line"><span class="comment">#smart_menu:</span></span><br><span class="line"><span class="comment">#  friends: false</span></span><br><span class="line"><span class="attr">smart_menu:</span></span><br><span class="line"><span class="attr">  innerArchive:</span> <span class="string">'所有文章'</span></span><br><span class="line">  <span class="comment">#friends: '友情链接'</span></span><br><span class="line"><span class="attr">  aboutme:</span> <span class="string">'关于我'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">friends:</span></span><br><span class="line"> <span class="comment"># 友情链接1: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接2: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接3: http://localhost:4000/</span></span><br><span class="line"> <span class="comment"># 友情链接4: http://localhost:4000/</span></span><br><span class="line"><span class="comment">#  友情链接5: http://localhost:4000/</span></span><br><span class="line"><span class="comment">#  友情链接6: http://localhost:4000/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aboutme:</span> <span class="string">这里是adgnn的随手Blog</span></span><br></pre></td></tr></table></figure><ul><li><mark>注意本文件里的baidu_analytics后面的数字是本人的百度分析代码，自己修改时请去掉或替换成自己的代码（参考本文末参考文章1）</mark></li></ul><h2 id="8-安装RSS、Sitemap、hexo-asset-image等插件"><a href="#8-安装RSS、Sitemap、hexo-asset-image等插件" class="headerlink" title="8. 安装RSS、Sitemap、hexo-asset-image等插件"></a>8. 安装RSS、Sitemap、hexo-asset-image等插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-asset-image</span><br><span class="line">npm i hexo-generator-feed</span><br><span class="line">npm i hexo-generator-sitemap</span><br></pre></td></tr></table></figure><ul><li>RSS插件可让别人订阅你的Blog，详见本文档后面。</li><li>hexo-asset-image插件可以让你用<code>![logo](logo.jpg)</code>的方式插入图片。</li></ul><h2 id="9-在本地查看自己的页面"><a href="#9-在本地查看自己的页面" class="headerlink" title="9. 在本地查看自己的页面"></a>9. 在本地查看自己的页面</h2><ol><li>在Git Bush输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><ol start="2"><li>打开浏览器，地址栏输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>即可在浏览器预览自己的博客页面。</p><h2 id="10-将-hexo部署到Github"><a href="#10-将-hexo部署到Github" class="headerlink" title="10. 将 hexo部署到Github"></a>10. 将 hexo部署到Github</h2><ol><li>用记事本配置<em>全局配置文件</em>（_config.yml），该步已在第7步完成（请再次确认）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">depoy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ul><li><p><mark>注意：type、repo、branch前面要空2个空格，冒号: 后面要空1个空格</mark></p></li><li><p>将YourgithubName替换成你的Github用户名。</p></li></ul><ol start="2"><li><mark>在Git Bash安装deploy-git</mark></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="3"><li>部署到Github</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>hexo clean：清除之前生成的缓存</li><li>hexo g：（generate）生成静态文章</li><li>hexo d：（deploy）部署文章</li><li><mark>在执行<em>hexo d</em>的时候，第一次执行需要输入你的Github用户名和密码。</mark></li><li>得到下图说明部署成功<img src="https://s2.ax1x.com/2019/05/03/EUIEfs.png" alt="1556891706124"></li><li>部署成功后，等1分钟，就可以登录你的页面<code>https://yourname.github.io</code>查看了。</li></ul><h2 id="11-写自己的文章"><a href="#11-写自己的文章" class="headerlink" title="11. 写自己的文章"></a>11. 写自己的文章</h2><ol><li>使用markdown编辑器（markdown请自行上网搜索了解，推荐<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>）编辑保存自己的文章。</li><li>保存命名为如下形式：<code>20xx-x-x-标题.md</code>，部署以后网站会自动读取日期和标题。</li><li>可在文件最前面加上yaml头部，如下格式：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">从零搭建个人博客</span>  <span class="comment">#标题</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[hexo,</span> <span class="string">github]</span>  <span class="comment">#标签</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span>             <span class="comment">#开启文章目录</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ol start="4"><li>将文件保存到<code>\myblog\source\_posts\</code>下</li><li>重新部署hexo到github上（第10-3步）（PS：每次更新都要重新部署）</li></ol><hr><h3 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h3><p>本篇仅针对使用windows系统的小白，主要参考以下文章：</p><ol><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a></li><li><a href="[https://blog.downager.com/2018/04/29/Windows-Hexo-Blog-%E6%90%AD%E5%BB%BA%E7%B4%80%E9%8C%84/](https://blog.downager.com/2018/04/29/Windows-Hexo-Blog-搭建紀錄/">Hexo Blog搭建记录</a>)</li></ol><p>想要更深入了解请务必进入第1篇文章查看。</p><p>与本文相比，该文章还讲了：<strong>设置个人域名，yml参数含义，主题定制，RSS具体说明，github分支操作，coding page部署实现国内外分流，SEO优化，评论系统等</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;耗时两天搭建了一个个人博客：&lt;a href=&quot;https://adgnn.github.io&quot;&gt;adgnn的个人博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本博客是搭建在github page上的，没有购买个人域名，所以不需要花钱就可以搭建一个属于自己的博客。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本博客仅说明WINDOWS环境下的博客搭建&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="https://adgnn.github.io/tags/github/"/>
    
      <category term="git" scheme="https://adgnn.github.io/tags/git/"/>
    
      <category term="hexo" scheme="https://adgnn.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>羽毛球拍和线的选择</title>
    <link href="https://adgnn.github.io/2019/05/04/2019-5-4-%E7%BE%BD%E6%AF%9B%E7%90%83%E6%8B%8D%E5%92%8C%E7%BA%BF%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://adgnn.github.io/2019/05/04/2019-5-4-羽毛球拍和线的选择/</id>
    <published>2019-05-04T10:51:01.053Z</published>
    <updated>2019-05-04T11:00:43.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-重量"><a href="#1-重量" class="headerlink" title="1. 重量"></a>1. 重量</h2><ul><li>拍子重量是什么？</li></ul><blockquote><p>一般全碳羽毛球拍重量标识为2u、3u、4u，<strong>数字越大，拍子重量越轻。</strong></p></blockquote><a id="more"></a><p><em>拍子重量对照表</em></p><blockquote><p>2u：90-94g</p><p>3u：85-89g</p><p>4u：80-84g</p><p>5u：80g以下（超轻拍）</p></blockquote><ul><li><p>如何选择适合自己的拍子重量？</p><p>较重的球拍适合力量较大的人，适合喜欢下压进攻的人群。较轻的球拍适合偏重防守、控球、力量较小的人。</p><p>男生建议3u,女生建议用4u.</p></li></ul><h2 id="2-平衡点"><a href="#2-平衡点" class="headerlink" title="2. 平衡点"></a>2. 平衡点</h2><ul><li>什么是平衡点？</li></ul><blockquote><p>平衡点指球拍横放时重心的位置（从球拍底部开始向上量）。若重心靠近拍柄（手抓的地方）即“头轻”，若重心更靠近拍头，叫“头重”。</p></blockquote><blockquote><p>头重：285mm-295mm。惯性大，杀球重，但挥拍灵活性差，不易发力，适用于进攻型球员。</p><p>头轻：275mm-285mm。挥拍灵活，但打出的球力量较小，杀球威胁更小，适合防守控制型球员。</p></blockquote><ul><li>平衡点和重量对手感的影响的区别？</li></ul><blockquote><p><strong>重量对挥拍的感觉成正比（1比1），平衡点对挥拍的感觉成平方正比。</strong></p><p>简单来说，即重量每增加1个单位，挥拍的感觉就重1个单位；重量每增加2个单位，挥拍的感觉就重2个单位。</p><p>而平衡点每增长1个单位，挥拍的感觉重1个单位；平衡点每增长2个单位，挥拍的感觉就重4（$2^2$)个单位。</p></blockquote><p><strong>平衡点可以通过握拍位置以及手胶重量来调整，而拍身重量一般只通过手胶重量来调整。</strong></p><h2 id="3-拍线磅数"><a href="#3-拍线磅数" class="headerlink" title="3.拍线磅数"></a>3.拍线磅数</h2><ul><li>什么是拍线磅数？</li></ul><blockquote><p>羽毛球拍磅数指拍头承受力大小，磅数越高，<strong>拍线越紧，拍面的弹性越小，击球需要的力量越大，但控制更精确。</strong></p></blockquote><p>磅数与击球感觉参考：</p><blockquote><table><thead><tr><th style="text-align:left">磅数范围</th><th>磅数</th><th>击球感觉</th></tr></thead><tbody><tr><td style="text-align:left">低磅</td><td>20磅以下</td><td>拍线松，拉球和吊球轻松，但无法精确控制落点</td></tr><tr><td style="text-align:left">中低磅</td><td>20-23磅</td><td>击球弹性好，控球较好，但有滞留感（拍面和球接触时）</td></tr><tr><td style="text-align:left">中磅</td><td>23-25磅</td><td>拍线和拍子都能发挥其性能，适合业余爱好者</td></tr><tr><td style="text-align:left">中高磅</td><td>25-27磅</td><td>控球舒服，但拍面较硬，拉后场可能吃力，击球可能无力</td></tr><tr><td style="text-align:left">高磅</td><td>28磅以上</td><td>对球控制力强，但对力量要求高，适合专业运动员</td></tr></tbody></table></blockquote><ul><li>什么是适合自己的磅数？</li></ul><blockquote><p>低磅：仅业余，平时偶尔打一两次的人。但一般不建议使用低磅。</p><p>中低磅：普通业余爱好者，经常打球但没经过专业发力训练。</p><p>中磅：有一定水平的业余爱好者，有经过一定的训练，掌握正确的发力方法。</p><p>中高磅：高水平业余爱好者，能正确发力。</p><p>高磅：专业运动员。业余爱好者亦可尝试，但高磅对拍线会很大地减少拍线的寿命。</p></blockquote><h2 id="4-中杆硬度"><a href="#4-中杆硬度" class="headerlink" title="4.中杆硬度"></a>4.中杆硬度</h2><ul><li>什么是中杆硬度？</li></ul><blockquote><p>击球前的挥拍到球拍击中球，拍杆有一个弯曲到复原的过程。这就关系到球拍的中杆硬度。</p></blockquote><blockquote><p>中杆硬度以 S 和 F 表示，S表示硬，F表示软，通常分为硬、中硬、适中、稍软、软五个等级。</p></blockquote><blockquote><p><strong>中杆越软弹性越好，杀球力量越足。中杆越硬，球力量越小，降低击球震动的传递，但挥拍速度更快，适合控制。</strong></p></blockquote><ul><li><p>如何挑选适合自己的？</p><p><strong>一般入门爱好者建议买软-适中的硬度的拍，更加容易适应</strong>。有一定水平的人群更容易驾驭较硬的中杆。</p></li></ul><h2 id="5-球拍材质"><a href="#5-球拍材质" class="headerlink" title="5.球拍材质"></a>5.球拍材质</h2><ul><li>球拍材质有哪些？</li></ul><blockquote><table><thead><tr><th>球拍类别</th><th>特性</th></tr></thead><tbody><tr><td>全碳素拍</td><td>重量较轻，价格较贵，更能使使用者的技术水平发挥出来。</td></tr><tr><td>铝碳一体拍</td><td>拍框为铝合金，拍杆为碳素纤维，采用“内三通”连接。拍框较重。</td></tr><tr><td>铝碳拍</td><td>拍框为铝合金，拍杆为碳素纤维，采用“外三通”连接。重量、价格适中。</td></tr><tr><td>铝合金拍</td><td>拍框铝合金，拍杆为铁管，采用“外三通”连接。</td></tr><tr><td>铝铁一体拍</td><td>拍框为铝合金，拍杆为铁管，采用“内三通”连接。</td></tr><tr><td>铁拍</td><td>拍框用铁材，拍杆为铁管，拍体较重，易变形。（超市拍，不推荐）</td></tr></tbody></table></blockquote><ul><li><p>如何挑选？</p><p>实体店挑选时拍杆和拍框上会分别标有制造材料，而网购页面一般也会标出其材质。</p><p>建议购买“全碳”“高碳”“碳”类别的拍。“铁拍”易变形，如果不希望打两次拍就变形的话请勿购买。</p></li></ul><hr><p>参考资料：</p><p><a href="https://www.maigoo.com/goomai/209239.html" target="_blank" rel="noopener">买购网</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-重量&quot;&gt;&lt;a href=&quot;#1-重量&quot; class=&quot;headerlink&quot; title=&quot;1. 重量&quot;&gt;&lt;/a&gt;1. 重量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;拍子重量是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;一般全碳羽毛球拍重量标识为2u、3u、4u，&lt;strong&gt;数字越大，拍子重量越轻。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="羽毛球" scheme="https://adgnn.github.io/tags/%E7%BE%BD%E6%AF%9B%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-存储器设计实验</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%AD%98%E5%82%A8%E5%99%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-存储器设计实验/</id>
    <published>2019-05-03T09:49:01.998Z</published>
    <updated>2019-05-04T10:59:59.482Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><p>掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法；学习在Vivado中使用Memory IP核生成存储器的方法；学习存储器的结构及读写原理，掌握存储器的设计方法。</p><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><p>实验vivado内置的IP核生成一个存储器，并写一个顶层模块验证。</p><a id="more"></a><h4 id="验证模块："><a href="#验证模块：" class="headerlink" title="验证模块："></a>验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ram(out,Write_Addr_swb,sw,Clk_swb,Write_swb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]sw;</span><br><span class="line"><span class="keyword">input</span> Write_Addr_swb; <span class="comment">//写地址按钮</span></span><br><span class="line"><span class="keyword">input</span> Clk_swb=<span class="number">0</span>;      <span class="comment">//时钟引脚</span></span><br><span class="line"><span class="keyword">input</span> Write_swb=<span class="number">0</span>;    <span class="comment">//写信号引脚</span></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] Mem_Addr; <span class="comment">//6个逻辑开关 当按钮1按下，32位开关中6位是读写存储器的地址</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data; <span class="comment">//32个逻辑开关 写操作时，当按钮2按下时，32位开关值是写入数据</span></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data;</span><br><span class="line"><span class="keyword">reg</span> Mem_Write; <span class="comment">//1个按钮 =1为写操作 =0为读操作</span></span><br><span class="line"><span class="keyword">reg</span> clka; <span class="comment">//时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RAM_B Data_RAM (</span><br><span class="line">  <span class="variable">.clka</span>(clka),    <span class="comment">// input wire clka</span></span><br><span class="line">  <span class="variable">.wea</span>(Mem_Write),      <span class="comment">// input wire [0 : 0] wea</span></span><br><span class="line">  <span class="variable">.addra</span>(Mem_Addr[<span class="number">6</span>:<span class="number">1</span>]),  <span class="comment">// input wire [5 : 0] addra</span></span><br><span class="line">  <span class="variable">.dina</span>(W_Data),    <span class="comment">// input wire [31 : 0] dina</span></span><br><span class="line">  <span class="variable">.douta</span>(R_Data)  <span class="comment">// output wire [31 : 0] douta</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    clka&lt;=Clk_swb;         <span class="comment">//时钟</span></span><br><span class="line">    Mem_Write&lt;=Write_swb;  <span class="comment">//写地址信号</span></span><br><span class="line">    <span class="keyword">if</span>(Write_Addr_swb)     <span class="comment">//写地址地址</span></span><br><span class="line">        Mem_Addr&lt;=sw[<span class="number">6</span>:<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span>(!Mem_Write &amp; clka)  <span class="comment">//读存储器</span></span><br><span class="line">        out&lt;=R_Data;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Mem_Write &amp; clka)   <span class="comment">//写存储器</span></span><br><span class="line">        W_Data&lt;=sw;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ram(out,Write_Addr_swb,sw,Clk_swb,Write_swb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]sw;</span><br><span class="line"><span class="keyword">input</span> Write_Addr_swb; <span class="comment">//写地址按钮</span></span><br><span class="line"><span class="keyword">input</span> Clk_swb=<span class="number">0</span>;      <span class="comment">//时钟引脚</span></span><br><span class="line"><span class="keyword">input</span> Write_swb=<span class="number">0</span>;    <span class="comment">//写信号引脚</span></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] Mem_Addr; <span class="comment">//6个逻辑开关 当按钮1按下，32位开关中6位是读写存储器的地址</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data; <span class="comment">//32个逻辑开关 写操作时，当按钮2按下时，32位开关值是写入数据</span></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data;</span><br><span class="line"><span class="keyword">reg</span> Mem_Write; <span class="comment">//1个按钮 =1为写操作 =0为读操作</span></span><br><span class="line"><span class="keyword">reg</span> clka; <span class="comment">//时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RAM_B Data_RAM (</span><br><span class="line">  <span class="variable">.clka</span>(clka),    <span class="comment">// input wire clka</span></span><br><span class="line">  <span class="variable">.wea</span>(Mem_Write),      <span class="comment">// input wire [0 : 0] wea</span></span><br><span class="line">  <span class="variable">.addra</span>(Mem_Addr[<span class="number">6</span>:<span class="number">1</span>]),  <span class="comment">// input wire [5 : 0] addra</span></span><br><span class="line">  <span class="variable">.dina</span>(W_Data),    <span class="comment">// input wire [31 : 0] dina</span></span><br><span class="line">  <span class="variable">.douta</span>(R_Data)  <span class="comment">// output wire [31 : 0] douta</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    clka&lt;=Clk_swb;         <span class="comment">//时钟</span></span><br><span class="line">    Mem_Write&lt;=Write_swb;  <span class="comment">//写地址信号</span></span><br><span class="line">    <span class="keyword">if</span>(Write_Addr_swb)     <span class="comment">//写地址地址</span></span><br><span class="line">        Mem_Addr&lt;=sw[<span class="number">6</span>:<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span>(!Mem_Write &amp; clka)  <span class="comment">//读存储器</span></span><br><span class="line">        out&lt;=R_Data;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(Mem_Write &amp; clka)   <span class="comment">//写存储器</span></span><br><span class="line">        W_Data&lt;=sw;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENq0Z6.png" alt="写操作"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENqBdK.png" alt="读操作"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENqvwV.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>Vivado中IP核的生成和调用方法。更熟练地掌握了仿真调试的方法。在仿真中，使用for语句对16个存储器地址写入，然后读出，很好地验证了预期结果</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;p&gt;掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法；学习在Vivado中使用Memory IP核生成存储器的方法；学习存储器的结构及读写原理，掌握存储器的设计方法。&lt;/p&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;p&gt;实验vivado内置的IP核生成一个存储器，并写一个顶层模块验证。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-寄存器堆设计实验</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%AF%84%E5%AD%98%E5%99%A8%E5%A0%86%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-寄存器堆设计实验/</id>
    <published>2019-05-03T09:49:01.996Z</published>
    <updated>2019-05-04T11:00:19.979Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><ul><li><p>学习使用Verilog HDL语言进行时序电路的设计方法</p></li><li><p>掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法</p></li><li><p>学习寄存器堆的数据传送与读写工作原理，掌握寄存器堆的设计方法。</p></li></ul><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><ul><li>设计一个32*32位的寄存器堆（即含有32个寄存器，每个寄存器32位）</li><li>读访问操作：无需时钟同步，只要给出寄存器地址，即可读出寄存器中的数据。</li><li>写访问操作：需要时钟同步，所有写入操作的输入信号必须在时钟边沿来临时，已经有效（Write_Reg=1、地址和数据）。</li></ul><a id="more"></a><h4 id="寄存器模块："><a href="#寄存器模块：" class="headerlink" title="寄存器模块："></a>寄存器模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> RegFile(Clk,Clr,Write_Reg,R_Addr_A,</span><br><span class="line">                R_Addr_B,W_Addr,W_Data,R_Data_A,R_Data_B);</span><br><span class="line">    <span class="keyword">input</span> Clk;  <span class="comment">//时钟信号</span></span><br><span class="line">    <span class="keyword">input</span> Clr;  <span class="comment">//清零信号</span></span><br><span class="line">    <span class="keyword">input</span> Write_Reg; <span class="comment">//写控制信号</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]R_Addr_A; <span class="comment">//A端口读寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]R_Addr_B; <span class="comment">//B端口读寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">1</span>]W_Addr;   <span class="comment">//写寄存器地址</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>]W_Data;  <span class="comment">//写入数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">output</span> [<span class="number">32</span>:<span class="number">1</span>]R_Data_A; <span class="comment">//A端口读出数据</span></span><br><span class="line">    <span class="keyword">output</span> [<span class="number">32</span>:<span class="number">1</span>]R_Data_B; <span class="comment">//B端口读出数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>]Reg_Files[<span class="number">31</span>:<span class="number">0</span>]; <span class="comment">//寄存器堆</span></span><br><span class="line">    <span class="keyword">integer</span> i; <span class="comment">//遍历</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">initial</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">32</span>;i=i+<span class="number">1</span>) Reg_Files[i]&lt;=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">always</span>@(<span class="keyword">posedge</span> Clk <span class="keyword">or</span> <span class="keyword">posedge</span> Clr)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(Clr)<span class="comment">//检测清零</span></span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">32</span>;i=i+<span class="number">1</span>) Reg_Files[i]&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//检测写控制，高电平则写入寄存器</span></span><br><span class="line">            <span class="keyword">if</span>(Write_Reg) Reg_Files[W_Addr]&lt;=W_Data;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">assign</span> R_Data_A=Reg_Files[R_Addr_A];</span><br><span class="line">    <span class="keyword">assign</span> R_Data_B=Reg_Files[R_Addr_B];</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="顶层验证模块："><a href="#顶层验证模块：" class="headerlink" title="顶层验证模块："></a>顶层验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> registers(sw,button,out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out=<span class="number">32'hzzzz_zzzz</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> Clk=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Clr=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Write_Reg=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_A=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_B=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] W_Addr=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data=<span class="number">32'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] Reg_Files[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_A;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_B;</span><br><span class="line">    </span><br><span class="line">    RegFile RF(</span><br><span class="line">        <span class="variable">.Clk</span>(Clk),</span><br><span class="line">        <span class="variable">.Clr</span>(Clr),</span><br><span class="line">        <span class="variable">.Write_Reg</span>(Write_Reg),</span><br><span class="line">        <span class="variable">.R_Addr_A</span>(sw[<span class="number">32</span>:<span class="number">28</span>]),</span><br><span class="line">        <span class="variable">.R_Addr_B</span>(sw[<span class="number">27</span>:<span class="number">23</span>]),</span><br><span class="line">        <span class="variable">.W_Addr</span>(W_Addr),</span><br><span class="line">        <span class="variable">.W_Data</span>(W_Data),</span><br><span class="line">        <span class="variable">.R_Data_A</span>(R_Data_A),</span><br><span class="line">        <span class="variable">.R_Data_B</span>(R_Data_B));</span><br><span class="line">        </span><br><span class="line">     <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(button)</span><br><span class="line">            <span class="number">6'b100000</span>: <span class="keyword">begin</span> W_Addr&lt;=sw[<span class="number">5</span>:<span class="number">1</span>]; <span class="keyword">end</span> <span class="comment">//输入低5位为寄存器地址</span></span><br><span class="line">            <span class="number">6'b010000</span>: <span class="keyword">begin</span> W_Data&lt;=sw; <span class="keyword">end</span>      <span class="comment">//输入寄存器内容</span></span><br><span class="line">            <span class="number">6'b001000</span>: <span class="keyword">begin</span> Write_Reg&lt;=sw[<span class="number">1</span>]; <span class="keyword">end</span><span class="comment">//提供Write_Reg信号，=1写操作</span></span><br><span class="line">            <span class="number">6'b000100</span>: <span class="keyword">begin</span> Clr&lt;=button[<span class="number">3</span>]; <span class="keyword">end</span>      <span class="comment">//提供Reset</span></span><br><span class="line">            <span class="number">6'b000010</span>: <span class="keyword">begin</span> </span><br><span class="line">                       <span class="keyword">if</span>(sw[<span class="number">1</span>])</span><br><span class="line">                           out&lt;=R_Data_A;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           out&lt;=R_Data_B;</span><br><span class="line">                       <span class="keyword">end</span>  <span class="comment">//读A/B端口选择</span></span><br><span class="line">            <span class="number">6'b000000</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">6'b000001</span>: <span class="keyword">begin</span> Clk&lt;=button[<span class="number">1</span>]; <span class="keyword">end</span>     <span class="comment">//提供Clk信号</span></span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> registers(sw,button,out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span>[<span class="number">32</span>:<span class="number">1</span>] out=<span class="number">32'hzzzz_zzzz</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">reg</span> Clk=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Clr=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> Write_Reg=<span class="number">1'b0</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_A=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] R_Addr_B=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">1</span>] W_Addr=<span class="number">5'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] W_Data=<span class="number">32'bz</span>;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] Reg_Files[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_A;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] R_Data_B;</span><br><span class="line">    </span><br><span class="line">    RegFile RF(</span><br><span class="line">        <span class="variable">.Clk</span>(Clk),</span><br><span class="line">        <span class="variable">.Clr</span>(Clr),</span><br><span class="line">        <span class="variable">.Write_Reg</span>(Write_Reg),</span><br><span class="line">        <span class="variable">.R_Addr_A</span>(sw[<span class="number">32</span>:<span class="number">28</span>]),</span><br><span class="line">        <span class="variable">.R_Addr_B</span>(sw[<span class="number">27</span>:<span class="number">23</span>]),</span><br><span class="line">        <span class="variable">.W_Addr</span>(W_Addr),</span><br><span class="line">        <span class="variable">.W_Data</span>(W_Data),</span><br><span class="line">        <span class="variable">.R_Data_A</span>(R_Data_A),</span><br><span class="line">        <span class="variable">.R_Data_B</span>(R_Data_B));</span><br><span class="line">        </span><br><span class="line">     <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(button)</span><br><span class="line">            <span class="number">6'b100000</span>: <span class="keyword">begin</span> W_Addr&lt;=sw[<span class="number">5</span>:<span class="number">1</span>]; <span class="keyword">end</span> <span class="comment">//输入低5位为寄存器地址</span></span><br><span class="line">            <span class="number">6'b010000</span>: <span class="keyword">begin</span> W_Data&lt;=sw; <span class="keyword">end</span>      <span class="comment">//输入寄存器内容</span></span><br><span class="line">            <span class="number">6'b001000</span>: <span class="keyword">begin</span> Write_Reg&lt;=sw[<span class="number">1</span>]; <span class="keyword">end</span><span class="comment">//提供Write_Reg信号，=1写操作</span></span><br><span class="line">            <span class="number">6'b000100</span>: <span class="keyword">begin</span> Clr&lt;=button[<span class="number">3</span>]; <span class="keyword">end</span>      <span class="comment">//提供Reset</span></span><br><span class="line">            <span class="number">6'b000010</span>: <span class="keyword">begin</span> </span><br><span class="line">                       <span class="keyword">if</span>(sw[<span class="number">1</span>])</span><br><span class="line">                           out&lt;=R_Data_A;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           out&lt;=R_Data_B;</span><br><span class="line">                       <span class="keyword">end</span>  <span class="comment">//读A/B端口选择</span></span><br><span class="line">            <span class="number">6'b000000</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">6'b000001</span>: <span class="keyword">begin</span> Clk&lt;=button[<span class="number">1</span>]; <span class="keyword">end</span>     <span class="comment">//提供Clk信号</span></span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">begin</span> out&lt;=<span class="number">32'bz</span>; Clr&lt;=<span class="number">0</span>; Clk&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENbLVK.png" alt="波形图"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENbOUO.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>寄存器堆设计和之前的ALU设计有一定的相似之处，如都是顶层+本体的设计方法，顶层控制着外部的输入输出，并将值传递到本体模块进行具体计算。</p><p>具体代码实现过程中，利用always语句块和assign语句来区分时序和非时序逻辑电路（写和读）。仿真过程遇到了点问题，最后一步本意为输出B读端口（ffff_ffff），结果输出为0，但上板后没有问题。 </p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学习使用Verilog HDL语言进行时序电路的设计方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;掌握灵活运用Verilog HDL语言进行各种描述与建模的技巧和方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学习寄存器堆的数据传送与读写工作原理，掌握寄存器堆的设计方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;设计一个32*32位的寄存器堆（即含有32个寄存器，每个寄存器32位）&lt;/li&gt;
&lt;li&gt;读访问操作：无需时钟同步，只要给出寄存器地址，即可读出寄存器中的数据。&lt;/li&gt;
&lt;li&gt;写访问操作：需要时钟同步，所有写入操作的输入信号必须在时钟边沿来临时，已经有效（Write_Reg=1、地址和数据）。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理-多功能ALU设计</title>
    <link href="https://adgnn.github.io/2019/05/03/2019-5-3-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%A4%9A%E5%8A%9F%E8%83%BDALU%E8%AE%BE%E8%AE%A1/"/>
    <id>https://adgnn.github.io/2019/05/03/2019-5-3-计算机组成原理-多功能ALU设计/</id>
    <published>2019-05-03T09:49:01.994Z</published>
    <updated>2019-05-04T11:00:12.205Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><ol><li><p>学习多功能ALU的工作原理，掌握运算器的设计方法。</p></li><li><p>掌握运用Verilog HDL语言进行行为描述与建模的技巧和方法。</p></li></ol><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><ol><li>设计一个具有8种运算功能的32位ALU，并能够产生运算结果的标志：结果为零标志ZF，溢出标志OF。</li><li>编写顶层模块，用于验证模块的正确性。</li></ol><a id="more"></a><h4 id="ALU模块："><a href="#ALU模块：" class="headerlink" title="ALU模块："></a>ALU模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ALU1(A,B,F,ALU_OP,OF,ZF);</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] A;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] B;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">1</span>] ALU_OP;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] F;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> ZF,OF;</span><br><span class="line">    <span class="keyword">reg</span> C;</span><br><span class="line">    <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(ALU_OP)</span><br><span class="line">            <span class="number">4'b0</span>: <span class="keyword">begin</span> F&lt;=A&amp;B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b1</span>: <span class="keyword">begin</span> F&lt;=A|B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b10</span>:<span class="keyword">begin</span> F&lt;=A^B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b11</span>:<span class="keyword">begin</span> F&lt;=~(A|B); OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b100</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A+B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b101</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A-B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b110</span>:<span class="keyword">begin</span></span><br><span class="line">                       <span class="keyword">if</span>(A&lt;B)</span><br><span class="line">                           F&lt;=<span class="number">1</span>;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           F&lt;=<span class="number">0</span>;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b111</span>:<span class="keyword">begin</span> F&lt;=B&lt;&lt;A; OF&lt;=<span class="number">1</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">begin</span> F&lt;=<span class="number">32'hzzzz_zzzz</span>; OF&lt;=<span class="number">1'bz</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">if</span>(F==<span class="number">0</span>)</span><br><span class="line">            ZF&lt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ZF&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="顶层验证模块："><a href="#顶层验证模块：" class="headerlink" title="顶层验证模块："></a>顶层验证模块：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> ALU1(A,B,F,ALU_OP,OF,ZF);</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] A;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">32</span>:<span class="number">1</span>] B;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">1</span>] ALU_OP;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] F;</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> ZF,OF;</span><br><span class="line">    <span class="keyword">reg</span> C;</span><br><span class="line">    <span class="keyword">always</span> @(*)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(ALU_OP)</span><br><span class="line">            <span class="number">4'b0</span>: <span class="keyword">begin</span> F&lt;=A&amp;B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b1</span>: <span class="keyword">begin</span> F&lt;=A|B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b10</span>:<span class="keyword">begin</span> F&lt;=A^B; OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b11</span>:<span class="keyword">begin</span> F&lt;=~(A|B); OF&lt;=<span class="number">0</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b100</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A+B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b101</span>:<span class="keyword">begin</span> &#123;C,F&#125;&lt;=A-B; OF&lt;=C; <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b110</span>:<span class="keyword">begin</span></span><br><span class="line">                       <span class="keyword">if</span>(A&lt;B)</span><br><span class="line">                           F&lt;=<span class="number">1</span>;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                           F&lt;=<span class="number">0</span>;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">            <span class="number">4'b111</span>:<span class="keyword">begin</span> F&lt;=B&lt;&lt;A; OF&lt;=<span class="number">1</span>; <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">begin</span> F&lt;=<span class="number">32'hzzzz_zzzz</span>; OF&lt;=<span class="number">1'bz</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">if</span>(F==<span class="number">0</span>)</span><br><span class="line">            ZF&lt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ZF&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="仿真文件："><a href="#仿真文件：" class="headerlink" title="仿真文件："></a>仿真文件：</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"><span class="keyword">module</span> test;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">1</span>] sw;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">1</span>] button;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">32</span>:<span class="number">1</span>] out;</span><br><span class="line">    </span><br><span class="line">    alu uut(</span><br><span class="line">        <span class="variable">.sw</span>(sw),</span><br><span class="line">        <span class="variable">.button</span>(button),</span><br><span class="line">        <span class="variable">.out</span>(out)</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">initial</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        sw = <span class="number">0</span>;</span><br><span class="line">        button = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        #<span class="number">100</span>;</span><br><span class="line">        <span class="comment">//input A</span></span><br><span class="line">        sw = <span class="number">32'h1234_5678</span>;</span><br><span class="line">        button = <span class="number">6'b100000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="comment">//input B</span></span><br><span class="line">        sw = <span class="number">32'h1111_2222</span>;</span><br><span class="line">        button = <span class="number">6'b010000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="comment">//and</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h0</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//or</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h1</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//xor</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h2</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//nor</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h3</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//add</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h4</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//sub</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h5</span>;</span><br><span class="line">        button=<span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//slt</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h6</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//sll</span></span><br><span class="line">        sw[<span class="number">4</span>:<span class="number">1</span>] = <span class="number">4'h7</span>;</span><br><span class="line">        button = <span class="number">6'b001000</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        button = <span class="number">6'b0</span>;</span><br><span class="line">        #<span class="number">50</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/05/03/ENbnHK.png" alt="仿真波形图"></p><p><img src="https://s2.ax1x.com/2019/05/03/ENb19H.png" alt="电路图"></p><h4 id="实验收获："><a href="#实验收获：" class="headerlink" title="实验收获："></a>实验收获：</h4><p>实验过程中，我发现自己对Verilog HDL语言的熟悉程度不够。特别是对阻塞赋值与非阻塞赋值的思想没有理解透彻，导致程序在调试过程中不断出现BUG，难以表达应有的逻辑思想。编程没有充分体现电路本身的特征，仍然是用C语言等高级程序设计语言的思想来编程。</p><p>总体来说，本实验较为基础，不困难。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学习多功能ALU的工作原理，掌握运算器的设计方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;掌握运用Verilog HDL语言进行行为描述与建模的技巧和方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;实验要求：&quot;&gt;&lt;a href=&quot;#实验要求：&quot; class=&quot;headerlink&quot; title=&quot;实验要求：&quot;&gt;&lt;/a&gt;实验要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;设计一个具有8种运算功能的32位ALU，并能够产生运算结果的标志：结果为零标志ZF，溢出标志OF。&lt;/li&gt;
&lt;li&gt;编写顶层模块，用于验证模块的正确性。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="计算机组成原理" scheme="https://adgnn.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
      <category term="verilog" scheme="https://adgnn.github.io/tags/verilog/"/>
    
      <category term="vivado" scheme="https://adgnn.github.io/tags/vivado/"/>
    
      <category term="FPGA" scheme="https://adgnn.github.io/tags/FPGA/"/>
    
  </entry>
  
</feed>
